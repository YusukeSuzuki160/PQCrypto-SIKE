// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_rdc_mont_81_82_Pipeline_VITIS_LOOP_185_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v,
        u,
        i_1,
        add_ln185,
        mc_0_offset,
        mc_0_address0,
        mc_0_ce0,
        mc_0_q0,
        mc_1_offset,
        mc_1_address0,
        mc_1_ce0,
        mc_1_q0,
        empty,
        v_7_out,
        v_7_out_ap_vld,
        u_6_out,
        u_6_out_ap_vld,
        t_1_out,
        t_1_out_ap_vld,
        grp_fu_1037_p_din0,
        grp_fu_1037_p_din1,
        grp_fu_1037_p_dout0,
        grp_fu_1037_p_ce,
        grp_fu_1041_p_din0,
        grp_fu_1041_p_din1,
        grp_fu_1041_p_dout0,
        grp_fu_1041_p_ce,
        grp_fu_1045_p_din0,
        grp_fu_1045_p_din1,
        grp_fu_1045_p_dout0,
        grp_fu_1045_p_ce,
        grp_fu_1049_p_din0,
        grp_fu_1049_p_din1,
        grp_fu_1049_p_dout0,
        grp_fu_1049_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] v;
input  [63:0] u;
input  [2:0] i_1;
input  [3:0] add_ln185;
input  [0:0] mc_0_offset;
output  [2:0] mc_0_address0;
output   mc_0_ce0;
input  [63:0] mc_0_q0;
input  [0:0] mc_1_offset;
output  [2:0] mc_1_address0;
output   mc_1_ce0;
input  [63:0] mc_1_q0;
input  [2:0] empty;
output  [63:0] v_7_out;
output   v_7_out_ap_vld;
output  [63:0] u_6_out;
output   u_6_out_ap_vld;
output  [63:0] t_1_out;
output   t_1_out_ap_vld;
output  [31:0] grp_fu_1037_p_din0;
output  [31:0] grp_fu_1037_p_din1;
input  [63:0] grp_fu_1037_p_dout0;
output   grp_fu_1037_p_ce;
output  [31:0] grp_fu_1041_p_din0;
output  [31:0] grp_fu_1041_p_din1;
input  [63:0] grp_fu_1041_p_dout0;
output   grp_fu_1041_p_ce;
output  [31:0] grp_fu_1045_p_din0;
output  [31:0] grp_fu_1045_p_din1;
input  [63:0] grp_fu_1045_p_dout0;
output   grp_fu_1045_p_ce;
output  [31:0] grp_fu_1049_p_din0;
output  [31:0] grp_fu_1049_p_din1;
input  [63:0] grp_fu_1049_p_dout0;
output   grp_fu_1049_p_ce;

reg ap_idle;
reg v_7_out_ap_vld;
reg u_6_out_ap_vld;
reg t_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln185_fu_253_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] p503p1_1_address0;
wire   [63:0] p503p1_1_q0;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln185_reg_792;
reg   [0:0] icmp_ln185_reg_792_pp0_iter1_reg;
reg   [0:0] icmp_ln185_reg_792_pp0_iter2_reg;
reg   [0:0] icmp_ln185_reg_792_pp0_iter3_reg;
reg   [0:0] icmp_ln185_reg_792_pp0_iter4_reg;
reg   [0:0] icmp_ln185_reg_792_pp0_iter5_reg;
reg   [0:0] icmp_ln185_reg_792_pp0_iter6_reg;
reg   [0:0] icmp_ln185_reg_792_pp0_iter7_reg;
wire   [0:0] trunc_ln185_fu_265_p1;
reg   [0:0] trunc_ln185_reg_796;
wire   [0:0] icmp_ln186_fu_279_p2;
reg   [0:0] icmp_ln186_reg_801;
reg   [0:0] icmp_ln186_reg_801_pp0_iter1_reg;
reg   [0:0] icmp_ln186_reg_801_pp0_iter2_reg;
reg   [0:0] icmp_ln186_reg_801_pp0_iter3_reg;
reg   [0:0] icmp_ln186_reg_801_pp0_iter4_reg;
reg   [0:0] icmp_ln186_reg_801_pp0_iter5_reg;
reg   [0:0] icmp_ln186_reg_801_pp0_iter6_reg;
reg   [0:0] icmp_ln186_reg_801_pp0_iter7_reg;
reg   [0:0] icmp_ln186_reg_801_pp0_iter8_reg;
wire   [31:0] al_fu_334_p1;
reg   [31:0] al_reg_823;
wire   [31:0] bl_fu_338_p1;
reg   [31:0] bl_reg_828;
reg   [31:0] ah_reg_833;
reg   [31:0] bh_reg_838;
wire   [63:0] zext_ln105_fu_362_p1;
wire   [63:0] zext_ln110_fu_367_p1;
wire   [63:0] zext_ln105_1_fu_372_p1;
wire   [63:0] zext_ln112_fu_377_p1;
wire   [31:0] trunc_ln106_fu_382_p1;
reg   [31:0] trunc_ln106_reg_867;
reg   [31:0] trunc_ln106_reg_867_pp0_iter4_reg;
reg   [31:0] trunc_ln106_reg_867_pp0_iter5_reg;
reg   [31:0] trunc_ln106_reg_867_pp0_iter6_reg;
wire   [31:0] trunc_ln106_10_fu_386_p1;
reg   [31:0] trunc_ln106_10_reg_872;
wire   [31:0] trunc_ln106_11_fu_390_p1;
reg   [31:0] trunc_ln106_11_reg_877;
wire   [31:0] trunc_ln106_12_fu_394_p1;
reg   [31:0] trunc_ln106_12_reg_882;
reg   [31:0] tmp_11_reg_887;
reg   [31:0] tmp_s_reg_892;
reg   [31:0] trunc_ln106_7_reg_897;
reg   [31:0] trunc_ln106_7_reg_897_pp0_iter4_reg;
reg   [31:0] tmp_13_reg_902;
reg   [31:0] tmp_13_reg_902_pp0_iter4_reg;
reg   [31:0] tmp_13_reg_902_pp0_iter5_reg;
reg   [1:0] tmp_12_reg_907;
wire   [31:0] trunc_ln125_fu_473_p1;
reg   [31:0] trunc_ln125_reg_912;
reg   [31:0] trunc_ln125_reg_912_pp0_iter5_reg;
reg   [31:0] trunc_ln125_reg_912_pp0_iter6_reg;
wire   [32:0] add_ln130_fu_483_p2;
reg   [32:0] add_ln130_reg_918;
wire   [31:0] trunc_ln105_fu_510_p1;
reg   [31:0] trunc_ln105_reg_923;
reg   [1:0] tmp_14_reg_928;
wire   [63:0] xor_ln189_fu_551_p2;
reg   [63:0] xor_ln189_reg_933;
reg   [63:0] xor_ln189_reg_933_pp0_iter7_reg;
reg   [63:0] xor_ln189_reg_933_pp0_iter8_reg;
wire   [63:0] tempReg_4_fu_615_p2;
reg   [63:0] tempReg_4_reg_939;
reg   [63:0] tempReg_4_reg_939_pp0_iter8_reg;
reg   [0:0] tmp_19_reg_948;
wire   [31:0] zext_ln187_fu_293_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln187_2_fu_306_p1;
wire   [31:0] zext_ln187_1_fu_317_p1;
reg   [63:0] t_1_fu_92;
wire   [63:0] t_2_fu_737_p3;
wire    ap_loop_init;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [63:0] u_6_fu_96;
wire   [63:0] u_2_fu_670_p3;
reg   [63:0] v_6_fu_100;
wire   [63:0] v_2_fu_620_p3;
reg   [2:0] j_fu_104;
wire   [2:0] add_ln185_1_fu_259_p2;
reg   [2:0] ap_sig_allocacmp_j_3;
wire    ap_block_pp0_stage0_01001;
reg    mc_0_ce0_local;
reg    mc_1_ce0_local;
reg    p503p1_1_ce0_local;
wire   [3:0] zext_ln185_fu_249_p1;
wire   [1:0] lshr_ln1_fu_269_p4;
wire   [2:0] tmp_9_fu_285_p3;
wire   [2:0] tmp_10_fu_298_p3;
wire   [2:0] sub_ln187_fu_311_p2;
wire   [63:0] select_ln187_fu_327_p3;
wire   [32:0] zext_ln123_fu_441_p1;
wire   [32:0] zext_ln123_1_fu_444_p1;
wire   [32:0] add_ln123_fu_447_p2;
wire   [33:0] zext_ln123_2_fu_453_p1;
wire   [33:0] zext_ln106_fu_438_p1;
wire   [33:0] temp_fu_457_p2;
wire   [32:0] zext_ln130_fu_480_p1;
wire   [32:0] zext_ln106_2_fu_477_p1;
wire   [31:0] zext_ln106_1_fu_489_p1;
wire   [31:0] add_ln130_1_fu_495_p2;
wire   [33:0] zext_ln130_2_fu_500_p1;
wire   [33:0] zext_ln130_1_fu_492_p1;
wire   [33:0] temp_4_fu_504_p2;
wire   [33:0] and_ln189_1_fu_531_p3;
wire   [63:0] zext_ln189_fu_538_p1;
wire   [63:0] and_ln_fu_524_p3;
wire   [63:0] add_ln189_fu_545_p2;
wire   [63:0] zext_ln189_1_fu_542_p1;
wire   [63:0] tempReg_fu_567_p3;
wire   [63:0] shl_ln_fu_560_p3;
wire   [63:0] v_7_fu_573_p2;
wire   [63:0] xor_ln105_5_fu_585_p2;
wire   [63:0] xor_ln105_4_fu_579_p2;
wire   [63:0] or_ln105_1_fu_591_p2;
wire   [63:0] xor_ln105_6_fu_597_p2;
wire   [0:0] carry_fu_603_p3;
wire   [63:0] zext_ln105_5_fu_611_p1;
wire   [63:0] u_7_fu_635_p2;
wire   [63:0] xor_ln105_9_fu_645_p2;
wire   [63:0] xor_ln105_8_fu_640_p2;
wire   [63:0] or_ln105_2_fu_650_p2;
wire   [63:0] xor_ln105_10_fu_656_p2;
wire   [0:0] bit_sel_fu_685_p3;
wire   [0:0] xor_ln105_fu_692_p2;
wire   [62:0] trunc_ln105_4_fu_698_p1;
wire   [63:0] xor_ln105_7_fu_701_p3;
wire   [63:0] and_ln105_fu_709_p2;
wire   [0:0] tmp_18_fu_714_p3;
wire   [0:0] carry_4_fu_722_p2;
wire   [63:0] zext_ln190_fu_727_p1;
wire   [63:0] t_fu_731_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 t_1_fu_92 = 64'd0;
#0 u_6_fu_96 = 64'd0;
#0 v_6_fu_100 = 64'd0;
#0 j_fu_104 = 3'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_rdc_mont_14183_Pipeline_VITIS_LOOP_185_3_p503p1_1_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
p503p1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p503p1_1_address0),
    .ce0(p503p1_1_ce0_local),
    .q0(p503p1_1_q0)
);

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln185_fu_253_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_104 <= add_ln185_1_fu_259_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_104 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_1_fu_92 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            t_1_fu_92 <= t_2_fu_737_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            u_6_fu_96 <= u;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            u_6_fu_96 <= u_2_fu_670_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            v_6_fu_100 <= v;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            v_6_fu_100 <= v_2_fu_620_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln130_reg_918 <= add_ln130_fu_483_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        icmp_ln185_reg_792_pp0_iter2_reg <= icmp_ln185_reg_792_pp0_iter1_reg;
        icmp_ln185_reg_792_pp0_iter3_reg <= icmp_ln185_reg_792_pp0_iter2_reg;
        icmp_ln185_reg_792_pp0_iter4_reg <= icmp_ln185_reg_792_pp0_iter3_reg;
        icmp_ln185_reg_792_pp0_iter5_reg <= icmp_ln185_reg_792_pp0_iter4_reg;
        icmp_ln185_reg_792_pp0_iter6_reg <= icmp_ln185_reg_792_pp0_iter5_reg;
        icmp_ln185_reg_792_pp0_iter7_reg <= icmp_ln185_reg_792_pp0_iter6_reg;
        icmp_ln186_reg_801_pp0_iter2_reg <= icmp_ln186_reg_801_pp0_iter1_reg;
        icmp_ln186_reg_801_pp0_iter3_reg <= icmp_ln186_reg_801_pp0_iter2_reg;
        icmp_ln186_reg_801_pp0_iter4_reg <= icmp_ln186_reg_801_pp0_iter3_reg;
        icmp_ln186_reg_801_pp0_iter5_reg <= icmp_ln186_reg_801_pp0_iter4_reg;
        icmp_ln186_reg_801_pp0_iter6_reg <= icmp_ln186_reg_801_pp0_iter5_reg;
        icmp_ln186_reg_801_pp0_iter7_reg <= icmp_ln186_reg_801_pp0_iter6_reg;
        icmp_ln186_reg_801_pp0_iter8_reg <= icmp_ln186_reg_801_pp0_iter7_reg;
        tempReg_4_reg_939 <= tempReg_4_fu_615_p2;
        tempReg_4_reg_939_pp0_iter8_reg <= tempReg_4_reg_939;
        tmp_11_reg_887 <= {{grp_fu_1037_p_dout0[63:32]}};
        tmp_12_reg_907 <= {{temp_fu_457_p2[33:32]}};
        tmp_13_reg_902 <= {{grp_fu_1049_p_dout0[63:32]}};
        tmp_13_reg_902_pp0_iter4_reg <= tmp_13_reg_902;
        tmp_13_reg_902_pp0_iter5_reg <= tmp_13_reg_902_pp0_iter4_reg;
        tmp_14_reg_928 <= {{temp_4_fu_504_p2[33:32]}};
        tmp_19_reg_948 <= xor_ln105_10_fu_656_p2[32'd63];
        tmp_s_reg_892 <= {{grp_fu_1045_p_dout0[63:32]}};
        trunc_ln105_reg_923 <= trunc_ln105_fu_510_p1;
        trunc_ln106_10_reg_872 <= trunc_ln106_10_fu_386_p1;
        trunc_ln106_11_reg_877 <= trunc_ln106_11_fu_390_p1;
        trunc_ln106_12_reg_882 <= trunc_ln106_12_fu_394_p1;
        trunc_ln106_7_reg_897 <= {{grp_fu_1041_p_dout0[63:32]}};
        trunc_ln106_7_reg_897_pp0_iter4_reg <= trunc_ln106_7_reg_897;
        trunc_ln106_reg_867 <= trunc_ln106_fu_382_p1;
        trunc_ln106_reg_867_pp0_iter4_reg <= trunc_ln106_reg_867;
        trunc_ln106_reg_867_pp0_iter5_reg <= trunc_ln106_reg_867_pp0_iter4_reg;
        trunc_ln106_reg_867_pp0_iter6_reg <= trunc_ln106_reg_867_pp0_iter5_reg;
        trunc_ln125_reg_912 <= trunc_ln125_fu_473_p1;
        trunc_ln125_reg_912_pp0_iter5_reg <= trunc_ln125_reg_912;
        trunc_ln125_reg_912_pp0_iter6_reg <= trunc_ln125_reg_912_pp0_iter5_reg;
        xor_ln189_reg_933 <= xor_ln189_fu_551_p2;
        xor_ln189_reg_933_pp0_iter7_reg <= xor_ln189_reg_933;
        xor_ln189_reg_933_pp0_iter8_reg <= xor_ln189_reg_933_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ah_reg_833 <= {{select_ln187_fu_327_p3[63:32]}};
        al_reg_823 <= al_fu_334_p1;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        bh_reg_838 <= {{p503p1_1_q0[63:32]}};
        bl_reg_828 <= bl_fu_338_p1;
        icmp_ln185_reg_792 <= icmp_ln185_fu_253_p2;
        icmp_ln185_reg_792_pp0_iter1_reg <= icmp_ln185_reg_792;
        icmp_ln186_reg_801 <= icmp_ln186_fu_279_p2;
        icmp_ln186_reg_801_pp0_iter1_reg <= icmp_ln186_reg_801;
        trunc_ln185_reg_796 <= trunc_ln185_fu_265_p1;
    end
end

always @ (*) begin
    if (((icmp_ln185_fu_253_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_3 = 3'd0;
    end else begin
        ap_sig_allocacmp_j_3 = j_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mc_0_ce0_local = 1'b1;
    end else begin
        mc_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mc_1_ce0_local = 1'b1;
    end else begin
        mc_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p503p1_1_ce0_local = 1'b1;
    end else begin
        p503p1_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln185_reg_792_pp0_iter7_reg == 1'd1))) begin
        t_1_out_ap_vld = 1'b1;
    end else begin
        t_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln185_reg_792_pp0_iter7_reg == 1'd1))) begin
        u_6_out_ap_vld = 1'b1;
    end else begin
        u_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln185_reg_792_pp0_iter7_reg == 1'd1))) begin
        v_7_out_ap_vld = 1'b1;
    end else begin
        v_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln123_fu_447_p2 = (zext_ln123_fu_441_p1 + zext_ln123_1_fu_444_p1);

assign add_ln130_1_fu_495_p2 = (trunc_ln106_7_reg_897_pp0_iter4_reg + zext_ln106_1_fu_489_p1);

assign add_ln130_fu_483_p2 = (zext_ln130_fu_480_p1 + zext_ln106_2_fu_477_p1);

assign add_ln185_1_fu_259_p2 = (ap_sig_allocacmp_j_3 + 3'd1);

assign add_ln189_fu_545_p2 = (zext_ln189_fu_538_p1 + and_ln_fu_524_p3);

assign al_fu_334_p1 = select_ln187_fu_327_p3[31:0];

assign and_ln105_fu_709_p2 = (xor_ln189_reg_933_pp0_iter8_reg & xor_ln105_7_fu_701_p3);

assign and_ln189_1_fu_531_p3 = {{tmp_14_reg_928}, {32'd0}};

assign and_ln_fu_524_p3 = {{tmp_13_reg_902_pp0_iter5_reg}, {32'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bit_sel_fu_685_p3 = tempReg_4_reg_939_pp0_iter8_reg[64'd63];

assign bl_fu_338_p1 = p503p1_1_q0[31:0];

assign carry_4_fu_722_p2 = (tmp_19_reg_948 | tmp_18_fu_714_p3);

assign carry_fu_603_p3 = xor_ln105_6_fu_597_p2[32'd63];

assign grp_fu_1037_p_ce = 1'b1;

assign grp_fu_1037_p_din0 = zext_ln105_1_fu_372_p1;

assign grp_fu_1037_p_din1 = zext_ln105_fu_362_p1;

assign grp_fu_1041_p_ce = 1'b1;

assign grp_fu_1041_p_din0 = zext_ln112_fu_377_p1;

assign grp_fu_1041_p_din1 = zext_ln105_fu_362_p1;

assign grp_fu_1045_p_ce = 1'b1;

assign grp_fu_1045_p_din0 = zext_ln105_1_fu_372_p1;

assign grp_fu_1045_p_din1 = zext_ln110_fu_367_p1;

assign grp_fu_1049_p_ce = 1'b1;

assign grp_fu_1049_p_din0 = zext_ln112_fu_377_p1;

assign grp_fu_1049_p_din1 = zext_ln110_fu_367_p1;

assign icmp_ln185_fu_253_p2 = ((ap_sig_allocacmp_j_3 == i_1) ? 1'b1 : 1'b0);

assign icmp_ln186_fu_279_p2 = ((zext_ln185_fu_249_p1 < add_ln185) ? 1'b1 : 1'b0);

assign lshr_ln1_fu_269_p4 = {{ap_sig_allocacmp_j_3[2:1]}};

assign mc_0_address0 = zext_ln187_fu_293_p1;

assign mc_0_ce0 = mc_0_ce0_local;

assign mc_1_address0 = zext_ln187_2_fu_306_p1;

assign mc_1_ce0 = mc_1_ce0_local;

assign or_ln105_1_fu_591_p2 = (xor_ln105_5_fu_585_p2 | xor_ln105_4_fu_579_p2);

assign or_ln105_2_fu_650_p2 = (xor_ln105_9_fu_645_p2 | xor_ln105_8_fu_640_p2);

assign p503p1_1_address0 = zext_ln187_1_fu_317_p1;

assign select_ln187_fu_327_p3 = ((trunc_ln185_reg_796[0:0] == 1'b1) ? mc_1_q0 : mc_0_q0);

assign shl_ln_fu_560_p3 = {{trunc_ln125_reg_912_pp0_iter6_reg}, {32'd0}};

assign sub_ln187_fu_311_p2 = (empty - ap_sig_allocacmp_j_3);

assign t_1_out = t_1_fu_92;

assign t_2_fu_737_p3 = ((icmp_ln186_reg_801_pp0_iter8_reg[0:0] == 1'b1) ? t_fu_731_p2 : t_1_fu_92);

assign t_fu_731_p2 = (t_1_fu_92 + zext_ln190_fu_727_p1);

assign tempReg_4_fu_615_p2 = (xor_ln189_reg_933 + zext_ln105_5_fu_611_p1);

assign tempReg_fu_567_p3 = {{trunc_ln125_reg_912_pp0_iter6_reg}, {trunc_ln106_reg_867_pp0_iter6_reg}};

assign temp_4_fu_504_p2 = (zext_ln130_2_fu_500_p1 + zext_ln130_1_fu_492_p1);

assign temp_fu_457_p2 = (zext_ln123_2_fu_453_p1 + zext_ln106_fu_438_p1);

assign tmp_10_fu_298_p3 = {{mc_1_offset}, {lshr_ln1_fu_269_p4}};

assign tmp_18_fu_714_p3 = and_ln105_fu_709_p2[32'd63];

assign tmp_9_fu_285_p3 = {{mc_0_offset}, {lshr_ln1_fu_269_p4}};

assign trunc_ln105_4_fu_698_p1 = tempReg_4_reg_939_pp0_iter8_reg[62:0];

assign trunc_ln105_fu_510_p1 = temp_4_fu_504_p2[31:0];

assign trunc_ln106_10_fu_386_p1 = grp_fu_1041_p_dout0[31:0];

assign trunc_ln106_11_fu_390_p1 = grp_fu_1045_p_dout0[31:0];

assign trunc_ln106_12_fu_394_p1 = grp_fu_1049_p_dout0[31:0];

assign trunc_ln106_fu_382_p1 = grp_fu_1037_p_dout0[31:0];

assign trunc_ln125_fu_473_p1 = temp_fu_457_p2[31:0];

assign trunc_ln185_fu_265_p1 = ap_sig_allocacmp_j_3[0:0];

assign u_2_fu_670_p3 = ((icmp_ln186_reg_801_pp0_iter7_reg[0:0] == 1'b1) ? u_7_fu_635_p2 : u_6_fu_96);

assign u_6_out = u_6_fu_96;

assign u_7_fu_635_p2 = (tempReg_4_reg_939 + u_6_fu_96);

assign v_2_fu_620_p3 = ((icmp_ln186_reg_801_pp0_iter6_reg[0:0] == 1'b1) ? v_7_fu_573_p2 : v_6_fu_100);

assign v_7_fu_573_p2 = (tempReg_fu_567_p3 + v_6_fu_100);

assign v_7_out = v_6_fu_100;

assign xor_ln105_10_fu_656_p2 = (u_7_fu_635_p2 ^ or_ln105_2_fu_650_p2);

assign xor_ln105_4_fu_579_p2 = (v_7_fu_573_p2 ^ shl_ln_fu_560_p3);

assign xor_ln105_5_fu_585_p2 = (v_6_fu_100 ^ shl_ln_fu_560_p3);

assign xor_ln105_6_fu_597_p2 = (v_7_fu_573_p2 ^ or_ln105_1_fu_591_p2);

assign xor_ln105_7_fu_701_p3 = {{xor_ln105_fu_692_p2}, {trunc_ln105_4_fu_698_p1}};

assign xor_ln105_8_fu_640_p2 = (u_7_fu_635_p2 ^ tempReg_4_reg_939);

assign xor_ln105_9_fu_645_p2 = (u_6_fu_96 ^ tempReg_4_reg_939);

assign xor_ln105_fu_692_p2 = (bit_sel_fu_685_p3 ^ 1'd1);

assign xor_ln189_fu_551_p2 = (zext_ln189_1_fu_542_p1 ^ add_ln189_fu_545_p2);

assign zext_ln105_1_fu_372_p1 = bl_reg_828;

assign zext_ln105_5_fu_611_p1 = carry_fu_603_p3;

assign zext_ln105_fu_362_p1 = al_reg_823;

assign zext_ln106_1_fu_489_p1 = tmp_12_reg_907;

assign zext_ln106_2_fu_477_p1 = tmp_s_reg_892;

assign zext_ln106_fu_438_p1 = tmp_11_reg_887;

assign zext_ln110_fu_367_p1 = ah_reg_833;

assign zext_ln112_fu_377_p1 = bh_reg_838;

assign zext_ln123_1_fu_444_p1 = trunc_ln106_10_reg_872;

assign zext_ln123_2_fu_453_p1 = add_ln123_fu_447_p2;

assign zext_ln123_fu_441_p1 = trunc_ln106_11_reg_877;

assign zext_ln130_1_fu_492_p1 = add_ln130_reg_918;

assign zext_ln130_2_fu_500_p1 = add_ln130_1_fu_495_p2;

assign zext_ln130_fu_480_p1 = trunc_ln106_12_reg_882;

assign zext_ln185_fu_249_p1 = ap_sig_allocacmp_j_3;

assign zext_ln187_1_fu_317_p1 = sub_ln187_fu_311_p2;

assign zext_ln187_2_fu_306_p1 = tmp_10_fu_298_p3;

assign zext_ln187_fu_293_p1 = tmp_9_fu_285_p3;

assign zext_ln189_1_fu_542_p1 = trunc_ln105_reg_923;

assign zext_ln189_fu_538_p1 = and_ln189_1_fu_531_p3;

assign zext_ln190_fu_727_p1 = carry_4_fu_722_p2;

endmodule //sikep503_kem_enc_hw_rdc_mont_81_82_Pipeline_VITIS_LOOP_185_3
