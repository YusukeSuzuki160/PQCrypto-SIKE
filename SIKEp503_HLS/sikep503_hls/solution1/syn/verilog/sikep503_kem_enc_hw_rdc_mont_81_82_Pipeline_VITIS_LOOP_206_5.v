// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_rdc_mont_81_82_Pipeline_VITIS_LOOP_206_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        indvars_iv,
        v_3,
        u_1,
        sub66,
        zext_ln181_1,
        mc_0_address0,
        mc_0_ce0,
        mc_0_q0,
        zext_ln181,
        mc_1_address0,
        mc_1_ce0,
        mc_1_q0,
        empty,
        v_10_out,
        v_10_out_ap_vld,
        u_9_out,
        u_9_out_ap_vld,
        t_6_out,
        t_6_out_ap_vld,
        grp_fu_1037_p_din0,
        grp_fu_1037_p_din1,
        grp_fu_1037_p_dout0,
        grp_fu_1037_p_ce,
        grp_fu_1041_p_din0,
        grp_fu_1041_p_din1,
        grp_fu_1041_p_dout0,
        grp_fu_1041_p_ce,
        grp_fu_1045_p_din0,
        grp_fu_1045_p_din1,
        grp_fu_1045_p_dout0,
        grp_fu_1045_p_ce,
        grp_fu_1049_p_din0,
        grp_fu_1049_p_din1,
        grp_fu_1049_p_dout0,
        grp_fu_1049_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] indvars_iv;
input  [63:0] v_3;
input  [63:0] u_1;
input  [31:0] sub66;
input  [2:0] zext_ln181_1;
output  [2:0] mc_0_address0;
output   mc_0_ce0;
input  [63:0] mc_0_q0;
input  [2:0] zext_ln181;
output  [2:0] mc_1_address0;
output   mc_1_ce0;
input  [63:0] mc_1_q0;
input  [2:0] empty;
output  [63:0] v_10_out;
output   v_10_out_ap_vld;
output  [63:0] u_9_out;
output   u_9_out_ap_vld;
output  [63:0] t_6_out;
output   t_6_out_ap_vld;
output  [31:0] grp_fu_1037_p_din0;
output  [31:0] grp_fu_1037_p_din1;
input  [63:0] grp_fu_1037_p_dout0;
output   grp_fu_1037_p_ce;
output  [31:0] grp_fu_1041_p_din0;
output  [31:0] grp_fu_1041_p_din1;
input  [63:0] grp_fu_1041_p_dout0;
output   grp_fu_1041_p_ce;
output  [31:0] grp_fu_1045_p_din0;
output  [31:0] grp_fu_1045_p_din1;
input  [63:0] grp_fu_1045_p_dout0;
output   grp_fu_1045_p_ce;
output  [31:0] grp_fu_1049_p_din0;
output  [31:0] grp_fu_1049_p_din1;
input  [63:0] grp_fu_1049_p_dout0;
output   grp_fu_1049_p_ce;

reg ap_idle;
reg v_10_out_ap_vld;
reg u_9_out_ap_vld;
reg t_6_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln206_fu_251_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] p503p1_1_address0;
wire   [63:0] p503p1_1_q0;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln206_reg_794;
reg   [0:0] icmp_ln206_reg_794_pp0_iter1_reg;
reg   [0:0] icmp_ln206_reg_794_pp0_iter2_reg;
reg   [0:0] icmp_ln206_reg_794_pp0_iter3_reg;
reg   [0:0] icmp_ln206_reg_794_pp0_iter4_reg;
reg   [0:0] icmp_ln206_reg_794_pp0_iter5_reg;
reg   [0:0] icmp_ln206_reg_794_pp0_iter6_reg;
reg   [0:0] icmp_ln206_reg_794_pp0_iter7_reg;
wire   [0:0] trunc_ln206_1_fu_265_p1;
reg   [0:0] trunc_ln206_1_reg_798;
wire   [0:0] icmp_ln207_fu_279_p2;
reg   [0:0] icmp_ln207_reg_803;
reg   [0:0] icmp_ln207_reg_803_pp0_iter1_reg;
reg   [0:0] icmp_ln207_reg_803_pp0_iter2_reg;
reg   [0:0] icmp_ln207_reg_803_pp0_iter3_reg;
reg   [0:0] icmp_ln207_reg_803_pp0_iter4_reg;
reg   [0:0] icmp_ln207_reg_803_pp0_iter5_reg;
reg   [0:0] icmp_ln207_reg_803_pp0_iter6_reg;
reg   [0:0] icmp_ln207_reg_803_pp0_iter7_reg;
reg   [0:0] icmp_ln207_reg_803_pp0_iter8_reg;
wire   [31:0] al_fu_336_p1;
reg   [31:0] al_reg_825;
wire   [31:0] bl_fu_340_p1;
reg   [31:0] bl_reg_830;
reg   [31:0] ah_reg_835;
reg   [31:0] bh_reg_840;
wire   [63:0] zext_ln105_3_fu_364_p1;
wire   [63:0] zext_ln110_fu_369_p1;
wire   [63:0] zext_ln105_4_fu_374_p1;
wire   [63:0] zext_ln112_fu_379_p1;
wire   [31:0] trunc_ln106_fu_384_p1;
reg   [31:0] trunc_ln106_reg_869;
reg   [31:0] trunc_ln106_reg_869_pp0_iter4_reg;
reg   [31:0] trunc_ln106_reg_869_pp0_iter5_reg;
reg   [31:0] trunc_ln106_reg_869_pp0_iter6_reg;
wire   [31:0] trunc_ln106_7_fu_388_p1;
reg   [31:0] trunc_ln106_7_reg_874;
wire   [31:0] trunc_ln106_8_fu_392_p1;
reg   [31:0] trunc_ln106_8_reg_879;
wire   [31:0] trunc_ln106_9_fu_396_p1;
reg   [31:0] trunc_ln106_9_reg_884;
reg   [31:0] tmp_s_reg_889;
reg   [31:0] tmp_10_reg_894;
reg   [31:0] trunc_ln106_5_reg_899;
reg   [31:0] trunc_ln106_5_reg_899_pp0_iter4_reg;
reg   [31:0] tmp_11_reg_904;
reg   [31:0] tmp_11_reg_904_pp0_iter4_reg;
reg   [31:0] tmp_11_reg_904_pp0_iter5_reg;
reg   [1:0] tmp_9_reg_909;
wire   [31:0] trunc_ln125_fu_475_p1;
reg   [31:0] trunc_ln125_reg_914;
reg   [31:0] trunc_ln125_reg_914_pp0_iter5_reg;
reg   [31:0] trunc_ln125_reg_914_pp0_iter6_reg;
wire   [32:0] add_ln130_3_fu_485_p2;
reg   [32:0] add_ln130_3_reg_920;
wire   [31:0] trunc_ln105_fu_512_p1;
reg   [31:0] trunc_ln105_reg_925;
reg   [1:0] tmp_12_reg_930;
wire   [63:0] xor_ln210_fu_553_p2;
reg   [63:0] xor_ln210_reg_935;
reg   [63:0] xor_ln210_reg_935_pp0_iter7_reg;
reg   [63:0] xor_ln210_reg_935_pp0_iter8_reg;
wire   [63:0] tempReg_3_fu_617_p2;
reg   [63:0] tempReg_3_reg_941;
reg   [63:0] tempReg_3_reg_941_pp0_iter8_reg;
reg   [0:0] tmp_14_reg_950;
wire   [31:0] zext_ln208_fu_291_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln208_2_fu_302_p1;
wire   [31:0] zext_ln208_1_fu_313_p1;
reg   [63:0] t_4_fu_90;
wire   [63:0] t_5_fu_739_p3;
wire    ap_loop_init;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [63:0] u_fu_94;
wire   [63:0] u_5_fu_672_p3;
reg   [63:0] v_fu_98;
wire   [63:0] v_5_fu_622_p3;
reg   [3:0] j_1_fu_102;
wire   [3:0] indvars_iv_cast_fu_224_p1;
wire   [3:0] add_ln206_fu_318_p2;
reg   [3:0] ap_sig_allocacmp_j;
wire    ap_block_pp0_stage0_01001;
reg    mc_0_ce0_local;
reg    mc_1_ce0_local;
reg    p503p1_1_ce0_local;
wire   [31:0] zext_ln206_fu_257_p1;
wire   [2:0] lshr_ln178_1_fu_269_p4;
wire   [2:0] add_ln208_fu_285_p2;
wire   [2:0] add_ln208_1_fu_296_p2;
wire   [2:0] trunc_ln206_fu_261_p1;
wire   [2:0] sub_ln208_fu_307_p2;
wire   [63:0] select_ln208_fu_329_p3;
wire   [32:0] zext_ln123_3_fu_443_p1;
wire   [32:0] zext_ln123_4_fu_446_p1;
wire   [32:0] add_ln123_2_fu_449_p2;
wire   [33:0] zext_ln123_fu_455_p1;
wire   [33:0] zext_ln106_3_fu_440_p1;
wire   [33:0] temp_fu_459_p2;
wire   [32:0] zext_ln130_3_fu_482_p1;
wire   [32:0] zext_ln106_fu_479_p1;
wire   [31:0] zext_ln106_4_fu_491_p1;
wire   [31:0] add_ln130_4_fu_497_p2;
wire   [33:0] zext_ln130_fu_502_p1;
wire   [33:0] zext_ln130_4_fu_494_p1;
wire   [33:0] temp_3_fu_506_p2;
wire   [33:0] and_ln210_1_fu_533_p3;
wire   [63:0] zext_ln210_fu_540_p1;
wire   [63:0] and_ln1_fu_526_p3;
wire   [63:0] add_ln210_fu_547_p2;
wire   [63:0] zext_ln210_1_fu_544_p1;
wire   [63:0] tempReg_fu_569_p3;
wire   [63:0] shl_ln125_1_fu_562_p3;
wire   [63:0] v_4_fu_575_p2;
wire   [63:0] xor_ln105_13_fu_587_p2;
wire   [63:0] xor_ln105_fu_581_p2;
wire   [63:0] or_ln105_fu_593_p2;
wire   [63:0] xor_ln105_15_fu_599_p2;
wire   [0:0] carry_fu_605_p3;
wire   [63:0] zext_ln105_fu_613_p1;
wire   [63:0] u_6_fu_637_p2;
wire   [63:0] xor_ln105_18_fu_647_p2;
wire   [63:0] xor_ln105_17_fu_642_p2;
wire   [63:0] or_ln105_3_fu_652_p2;
wire   [63:0] xor_ln105_19_fu_658_p2;
wire   [0:0] bit_sel4_fu_687_p3;
wire   [0:0] xor_ln105_16_fu_694_p2;
wire   [62:0] trunc_ln105_3_fu_700_p1;
wire   [63:0] xor_ln105_s_fu_703_p3;
wire   [63:0] and_ln105_fu_711_p2;
wire   [0:0] tmp_13_fu_716_p3;
wire   [0:0] carry_3_fu_724_p2;
wire   [63:0] zext_ln211_fu_729_p1;
wire   [63:0] t_fu_733_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 t_4_fu_90 = 64'd0;
#0 u_fu_94 = 64'd0;
#0 v_fu_98 = 64'd0;
#0 j_1_fu_102 = 4'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_rdc_mont_14183_Pipeline_VITIS_LOOP_185_3_p503p1_1_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
p503p1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p503p1_1_address0),
    .ce0(p503p1_1_ce0_local),
    .q0(p503p1_1_q0)
);

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln206_fu_251_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_1_fu_102 <= add_ln206_fu_318_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_1_fu_102 <= indvars_iv_cast_fu_224_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_4_fu_90 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            t_4_fu_90 <= t_5_fu_739_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            u_fu_94 <= u_1;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            u_fu_94 <= u_5_fu_672_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            v_fu_98 <= v_3;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            v_fu_98 <= v_5_fu_622_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln130_3_reg_920 <= add_ln130_3_fu_485_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        icmp_ln206_reg_794_pp0_iter2_reg <= icmp_ln206_reg_794_pp0_iter1_reg;
        icmp_ln206_reg_794_pp0_iter3_reg <= icmp_ln206_reg_794_pp0_iter2_reg;
        icmp_ln206_reg_794_pp0_iter4_reg <= icmp_ln206_reg_794_pp0_iter3_reg;
        icmp_ln206_reg_794_pp0_iter5_reg <= icmp_ln206_reg_794_pp0_iter4_reg;
        icmp_ln206_reg_794_pp0_iter6_reg <= icmp_ln206_reg_794_pp0_iter5_reg;
        icmp_ln206_reg_794_pp0_iter7_reg <= icmp_ln206_reg_794_pp0_iter6_reg;
        icmp_ln207_reg_803_pp0_iter2_reg <= icmp_ln207_reg_803_pp0_iter1_reg;
        icmp_ln207_reg_803_pp0_iter3_reg <= icmp_ln207_reg_803_pp0_iter2_reg;
        icmp_ln207_reg_803_pp0_iter4_reg <= icmp_ln207_reg_803_pp0_iter3_reg;
        icmp_ln207_reg_803_pp0_iter5_reg <= icmp_ln207_reg_803_pp0_iter4_reg;
        icmp_ln207_reg_803_pp0_iter6_reg <= icmp_ln207_reg_803_pp0_iter5_reg;
        icmp_ln207_reg_803_pp0_iter7_reg <= icmp_ln207_reg_803_pp0_iter6_reg;
        icmp_ln207_reg_803_pp0_iter8_reg <= icmp_ln207_reg_803_pp0_iter7_reg;
        tempReg_3_reg_941 <= tempReg_3_fu_617_p2;
        tempReg_3_reg_941_pp0_iter8_reg <= tempReg_3_reg_941;
        tmp_10_reg_894 <= {{grp_fu_1045_p_dout0[63:32]}};
        tmp_11_reg_904 <= {{grp_fu_1049_p_dout0[63:32]}};
        tmp_11_reg_904_pp0_iter4_reg <= tmp_11_reg_904;
        tmp_11_reg_904_pp0_iter5_reg <= tmp_11_reg_904_pp0_iter4_reg;
        tmp_12_reg_930 <= {{temp_3_fu_506_p2[33:32]}};
        tmp_14_reg_950 <= xor_ln105_19_fu_658_p2[32'd63];
        tmp_9_reg_909 <= {{temp_fu_459_p2[33:32]}};
        tmp_s_reg_889 <= {{grp_fu_1037_p_dout0[63:32]}};
        trunc_ln105_reg_925 <= trunc_ln105_fu_512_p1;
        trunc_ln106_5_reg_899 <= {{grp_fu_1041_p_dout0[63:32]}};
        trunc_ln106_5_reg_899_pp0_iter4_reg <= trunc_ln106_5_reg_899;
        trunc_ln106_7_reg_874 <= trunc_ln106_7_fu_388_p1;
        trunc_ln106_8_reg_879 <= trunc_ln106_8_fu_392_p1;
        trunc_ln106_9_reg_884 <= trunc_ln106_9_fu_396_p1;
        trunc_ln106_reg_869 <= trunc_ln106_fu_384_p1;
        trunc_ln106_reg_869_pp0_iter4_reg <= trunc_ln106_reg_869;
        trunc_ln106_reg_869_pp0_iter5_reg <= trunc_ln106_reg_869_pp0_iter4_reg;
        trunc_ln106_reg_869_pp0_iter6_reg <= trunc_ln106_reg_869_pp0_iter5_reg;
        trunc_ln125_reg_914 <= trunc_ln125_fu_475_p1;
        trunc_ln125_reg_914_pp0_iter5_reg <= trunc_ln125_reg_914;
        trunc_ln125_reg_914_pp0_iter6_reg <= trunc_ln125_reg_914_pp0_iter5_reg;
        xor_ln210_reg_935 <= xor_ln210_fu_553_p2;
        xor_ln210_reg_935_pp0_iter7_reg <= xor_ln210_reg_935;
        xor_ln210_reg_935_pp0_iter8_reg <= xor_ln210_reg_935_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ah_reg_835 <= {{select_ln208_fu_329_p3[63:32]}};
        al_reg_825 <= al_fu_336_p1;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        bh_reg_840 <= {{p503p1_1_q0[63:32]}};
        bl_reg_830 <= bl_fu_340_p1;
        icmp_ln206_reg_794 <= icmp_ln206_fu_251_p2;
        icmp_ln206_reg_794_pp0_iter1_reg <= icmp_ln206_reg_794;
        icmp_ln207_reg_803 <= icmp_ln207_fu_279_p2;
        icmp_ln207_reg_803_pp0_iter1_reg <= icmp_ln207_reg_803;
        trunc_ln206_1_reg_798 <= trunc_ln206_1_fu_265_p1;
    end
end

always @ (*) begin
    if (((icmp_ln206_fu_251_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j = indvars_iv_cast_fu_224_p1;
    end else begin
        ap_sig_allocacmp_j = j_1_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mc_0_ce0_local = 1'b1;
    end else begin
        mc_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mc_1_ce0_local = 1'b1;
    end else begin
        mc_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p503p1_1_ce0_local = 1'b1;
    end else begin
        p503p1_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln206_reg_794_pp0_iter7_reg == 1'd1))) begin
        t_6_out_ap_vld = 1'b1;
    end else begin
        t_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln206_reg_794_pp0_iter7_reg == 1'd1))) begin
        u_9_out_ap_vld = 1'b1;
    end else begin
        u_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln206_reg_794_pp0_iter7_reg == 1'd1))) begin
        v_10_out_ap_vld = 1'b1;
    end else begin
        v_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln123_2_fu_449_p2 = (zext_ln123_3_fu_443_p1 + zext_ln123_4_fu_446_p1);

assign add_ln130_3_fu_485_p2 = (zext_ln130_3_fu_482_p1 + zext_ln106_fu_479_p1);

assign add_ln130_4_fu_497_p2 = (trunc_ln106_5_reg_899_pp0_iter4_reg + zext_ln106_4_fu_491_p1);

assign add_ln206_fu_318_p2 = (ap_sig_allocacmp_j + 4'd1);

assign add_ln208_1_fu_296_p2 = (zext_ln181 + lshr_ln178_1_fu_269_p4);

assign add_ln208_fu_285_p2 = (zext_ln181_1 + lshr_ln178_1_fu_269_p4);

assign add_ln210_fu_547_p2 = (zext_ln210_fu_540_p1 + and_ln1_fu_526_p3);

assign al_fu_336_p1 = select_ln208_fu_329_p3[31:0];

assign and_ln105_fu_711_p2 = (xor_ln210_reg_935_pp0_iter8_reg & xor_ln105_s_fu_703_p3);

assign and_ln1_fu_526_p3 = {{tmp_11_reg_904_pp0_iter5_reg}, {32'd0}};

assign and_ln210_1_fu_533_p3 = {{tmp_12_reg_930}, {32'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bit_sel4_fu_687_p3 = tempReg_3_reg_941_pp0_iter8_reg[64'd63];

assign bl_fu_340_p1 = p503p1_1_q0[31:0];

assign carry_3_fu_724_p2 = (tmp_14_reg_950 | tmp_13_fu_716_p3);

assign carry_fu_605_p3 = xor_ln105_15_fu_599_p2[32'd63];

assign grp_fu_1037_p_ce = 1'b1;

assign grp_fu_1037_p_din0 = zext_ln105_4_fu_374_p1;

assign grp_fu_1037_p_din1 = zext_ln105_3_fu_364_p1;

assign grp_fu_1041_p_ce = 1'b1;

assign grp_fu_1041_p_din0 = zext_ln112_fu_379_p1;

assign grp_fu_1041_p_din1 = zext_ln105_3_fu_364_p1;

assign grp_fu_1045_p_ce = 1'b1;

assign grp_fu_1045_p_din0 = zext_ln105_4_fu_374_p1;

assign grp_fu_1045_p_din1 = zext_ln110_fu_369_p1;

assign grp_fu_1049_p_ce = 1'b1;

assign grp_fu_1049_p_din0 = zext_ln112_fu_379_p1;

assign grp_fu_1049_p_din1 = zext_ln110_fu_369_p1;

assign icmp_ln206_fu_251_p2 = ((ap_sig_allocacmp_j == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_279_p2 = ((zext_ln206_fu_257_p1 < sub66) ? 1'b1 : 1'b0);

assign indvars_iv_cast_fu_224_p1 = indvars_iv;

assign lshr_ln178_1_fu_269_p4 = {{ap_sig_allocacmp_j[3:1]}};

assign mc_0_address0 = zext_ln208_fu_291_p1;

assign mc_0_ce0 = mc_0_ce0_local;

assign mc_1_address0 = zext_ln208_2_fu_302_p1;

assign mc_1_ce0 = mc_1_ce0_local;

assign or_ln105_3_fu_652_p2 = (xor_ln105_18_fu_647_p2 | xor_ln105_17_fu_642_p2);

assign or_ln105_fu_593_p2 = (xor_ln105_fu_581_p2 | xor_ln105_13_fu_587_p2);

assign p503p1_1_address0 = zext_ln208_1_fu_313_p1;

assign select_ln208_fu_329_p3 = ((trunc_ln206_1_reg_798[0:0] == 1'b1) ? mc_1_q0 : mc_0_q0);

assign shl_ln125_1_fu_562_p3 = {{trunc_ln125_reg_914_pp0_iter6_reg}, {32'd0}};

assign sub_ln208_fu_307_p2 = (empty - trunc_ln206_fu_261_p1);

assign t_5_fu_739_p3 = ((icmp_ln207_reg_803_pp0_iter8_reg[0:0] == 1'b1) ? t_fu_733_p2 : t_4_fu_90);

assign t_6_out = t_4_fu_90;

assign t_fu_733_p2 = (t_4_fu_90 + zext_ln211_fu_729_p1);

assign tempReg_3_fu_617_p2 = (xor_ln210_reg_935 + zext_ln105_fu_613_p1);

assign tempReg_fu_569_p3 = {{trunc_ln125_reg_914_pp0_iter6_reg}, {trunc_ln106_reg_869_pp0_iter6_reg}};

assign temp_3_fu_506_p2 = (zext_ln130_fu_502_p1 + zext_ln130_4_fu_494_p1);

assign temp_fu_459_p2 = (zext_ln123_fu_455_p1 + zext_ln106_3_fu_440_p1);

assign tmp_13_fu_716_p3 = and_ln105_fu_711_p2[32'd63];

assign trunc_ln105_3_fu_700_p1 = tempReg_3_reg_941_pp0_iter8_reg[62:0];

assign trunc_ln105_fu_512_p1 = temp_3_fu_506_p2[31:0];

assign trunc_ln106_7_fu_388_p1 = grp_fu_1041_p_dout0[31:0];

assign trunc_ln106_8_fu_392_p1 = grp_fu_1045_p_dout0[31:0];

assign trunc_ln106_9_fu_396_p1 = grp_fu_1049_p_dout0[31:0];

assign trunc_ln106_fu_384_p1 = grp_fu_1037_p_dout0[31:0];

assign trunc_ln125_fu_475_p1 = temp_fu_459_p2[31:0];

assign trunc_ln206_1_fu_265_p1 = ap_sig_allocacmp_j[0:0];

assign trunc_ln206_fu_261_p1 = ap_sig_allocacmp_j[2:0];

assign u_5_fu_672_p3 = ((icmp_ln207_reg_803_pp0_iter7_reg[0:0] == 1'b1) ? u_6_fu_637_p2 : u_fu_94);

assign u_6_fu_637_p2 = (tempReg_3_reg_941 + u_fu_94);

assign u_9_out = u_fu_94;

assign v_10_out = v_fu_98;

assign v_4_fu_575_p2 = (tempReg_fu_569_p3 + v_fu_98);

assign v_5_fu_622_p3 = ((icmp_ln207_reg_803_pp0_iter6_reg[0:0] == 1'b1) ? v_4_fu_575_p2 : v_fu_98);

assign xor_ln105_13_fu_587_p2 = (v_fu_98 ^ shl_ln125_1_fu_562_p3);

assign xor_ln105_15_fu_599_p2 = (v_4_fu_575_p2 ^ or_ln105_fu_593_p2);

assign xor_ln105_16_fu_694_p2 = (bit_sel4_fu_687_p3 ^ 1'd1);

assign xor_ln105_17_fu_642_p2 = (u_6_fu_637_p2 ^ tempReg_3_reg_941);

assign xor_ln105_18_fu_647_p2 = (u_fu_94 ^ tempReg_3_reg_941);

assign xor_ln105_19_fu_658_p2 = (u_6_fu_637_p2 ^ or_ln105_3_fu_652_p2);

assign xor_ln105_fu_581_p2 = (v_4_fu_575_p2 ^ shl_ln125_1_fu_562_p3);

assign xor_ln105_s_fu_703_p3 = {{xor_ln105_16_fu_694_p2}, {trunc_ln105_3_fu_700_p1}};

assign xor_ln210_fu_553_p2 = (zext_ln210_1_fu_544_p1 ^ add_ln210_fu_547_p2);

assign zext_ln105_3_fu_364_p1 = al_reg_825;

assign zext_ln105_4_fu_374_p1 = bl_reg_830;

assign zext_ln105_fu_613_p1 = carry_fu_605_p3;

assign zext_ln106_3_fu_440_p1 = tmp_s_reg_889;

assign zext_ln106_4_fu_491_p1 = tmp_9_reg_909;

assign zext_ln106_fu_479_p1 = tmp_10_reg_894;

assign zext_ln110_fu_369_p1 = ah_reg_835;

assign zext_ln112_fu_379_p1 = bh_reg_840;

assign zext_ln123_3_fu_443_p1 = trunc_ln106_8_reg_879;

assign zext_ln123_4_fu_446_p1 = trunc_ln106_7_reg_874;

assign zext_ln123_fu_455_p1 = add_ln123_2_fu_449_p2;

assign zext_ln130_3_fu_482_p1 = trunc_ln106_9_reg_884;

assign zext_ln130_4_fu_494_p1 = add_ln130_3_reg_920;

assign zext_ln130_fu_502_p1 = add_ln130_4_fu_497_p2;

assign zext_ln206_fu_257_p1 = ap_sig_allocacmp_j;

assign zext_ln208_1_fu_313_p1 = sub_ln208_fu_307_p2;

assign zext_ln208_2_fu_302_p1 = add_ln208_1_fu_296_p2;

assign zext_ln208_fu_291_p1 = add_ln208_fu_285_p2;

assign zext_ln210_1_fu_544_p1 = trunc_ln105_reg_925;

assign zext_ln210_fu_540_p1 = and_ln210_1_fu_533_p3;

assign zext_ln211_fu_729_p1 = carry_3_fu_724_p2;

endmodule //sikep503_kem_enc_hw_rdc_mont_81_82_Pipeline_VITIS_LOOP_206_5
