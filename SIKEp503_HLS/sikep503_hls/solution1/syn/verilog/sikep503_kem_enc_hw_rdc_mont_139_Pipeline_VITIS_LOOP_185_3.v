// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_rdc_mont_139_Pipeline_VITIS_LOOP_185_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_025,
        u_024,
        i_11,
        add_ln185,
        mc_offset,
        mc_address0,
        mc_ce0,
        mc_q0,
        empty,
        v_77_out,
        v_77_out_ap_vld,
        u_54_out,
        u_54_out_ap_vld,
        t_out,
        t_out_ap_vld,
        grp_fu_901_p_din0,
        grp_fu_901_p_din1,
        grp_fu_901_p_dout0,
        grp_fu_901_p_ce,
        grp_fu_905_p_din0,
        grp_fu_905_p_din1,
        grp_fu_905_p_dout0,
        grp_fu_905_p_ce,
        grp_fu_909_p_din0,
        grp_fu_909_p_din1,
        grp_fu_909_p_dout0,
        grp_fu_909_p_ce,
        grp_fu_913_p_din0,
        grp_fu_913_p_din1,
        grp_fu_913_p_dout0,
        grp_fu_913_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] v_025;
input  [63:0] u_024;
input  [2:0] i_11;
input  [3:0] add_ln185;
input  [3:0] mc_offset;
output  [6:0] mc_address0;
output   mc_ce0;
input  [63:0] mc_q0;
input  [2:0] empty;
output  [63:0] v_77_out;
output   v_77_out_ap_vld;
output  [63:0] u_54_out;
output   u_54_out_ap_vld;
output  [63:0] t_out;
output   t_out_ap_vld;
output  [31:0] grp_fu_901_p_din0;
output  [31:0] grp_fu_901_p_din1;
input  [63:0] grp_fu_901_p_dout0;
output   grp_fu_901_p_ce;
output  [31:0] grp_fu_905_p_din0;
output  [31:0] grp_fu_905_p_din1;
input  [63:0] grp_fu_905_p_dout0;
output   grp_fu_905_p_ce;
output  [31:0] grp_fu_909_p_din0;
output  [31:0] grp_fu_909_p_din1;
input  [63:0] grp_fu_909_p_dout0;
output   grp_fu_909_p_ce;
output  [31:0] grp_fu_913_p_din0;
output  [31:0] grp_fu_913_p_din1;
input  [63:0] grp_fu_913_p_dout0;
output   grp_fu_913_p_ce;

reg ap_idle;
reg v_77_out_ap_vld;
reg u_54_out_ap_vld;
reg t_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln185_fu_224_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] p503p1_1_address0;
wire   [63:0] p503p1_1_q0;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln185_reg_729;
reg   [0:0] icmp_ln185_reg_729_pp0_iter1_reg;
reg   [0:0] icmp_ln185_reg_729_pp0_iter2_reg;
reg   [0:0] icmp_ln185_reg_729_pp0_iter3_reg;
reg   [0:0] icmp_ln185_reg_729_pp0_iter4_reg;
reg   [0:0] icmp_ln185_reg_729_pp0_iter5_reg;
reg   [0:0] icmp_ln185_reg_729_pp0_iter6_reg;
reg   [0:0] icmp_ln185_reg_729_pp0_iter7_reg;
wire   [0:0] icmp_ln186_fu_236_p2;
reg   [0:0] icmp_ln186_reg_733;
reg   [0:0] icmp_ln186_reg_733_pp0_iter1_reg;
reg   [0:0] icmp_ln186_reg_733_pp0_iter2_reg;
reg   [0:0] icmp_ln186_reg_733_pp0_iter3_reg;
reg   [0:0] icmp_ln186_reg_733_pp0_iter4_reg;
reg   [0:0] icmp_ln186_reg_733_pp0_iter5_reg;
reg   [0:0] icmp_ln186_reg_733_pp0_iter6_reg;
reg   [0:0] icmp_ln186_reg_733_pp0_iter7_reg;
reg   [0:0] icmp_ln186_reg_733_pp0_iter8_reg;
wire   [31:0] al_fu_271_p1;
reg   [31:0] al_reg_750;
wire   [31:0] bl_fu_275_p1;
reg   [31:0] bl_reg_755;
reg   [31:0] ah_reg_760;
reg   [31:0] bh_reg_765;
wire   [63:0] zext_ln105_fu_299_p1;
wire   [63:0] zext_ln110_fu_304_p1;
wire   [63:0] zext_ln105_36_fu_309_p1;
wire   [63:0] zext_ln112_fu_314_p1;
wire   [31:0] trunc_ln106_fu_319_p1;
reg   [31:0] trunc_ln106_reg_794;
reg   [31:0] trunc_ln106_reg_794_pp0_iter4_reg;
reg   [31:0] trunc_ln106_reg_794_pp0_iter5_reg;
reg   [31:0] trunc_ln106_reg_794_pp0_iter6_reg;
wire   [31:0] trunc_ln106_63_fu_323_p1;
reg   [31:0] trunc_ln106_63_reg_799;
wire   [31:0] trunc_ln106_64_fu_327_p1;
reg   [31:0] trunc_ln106_64_reg_804;
wire   [31:0] trunc_ln106_65_fu_331_p1;
reg   [31:0] trunc_ln106_65_reg_809;
reg   [31:0] tmp_84_reg_814;
reg   [31:0] tmp_86_reg_819;
reg   [31:0] trunc_ln106_s_reg_824;
reg   [31:0] trunc_ln106_s_reg_824_pp0_iter4_reg;
reg   [31:0] tmp_87_reg_829;
reg   [31:0] tmp_87_reg_829_pp0_iter4_reg;
reg   [31:0] tmp_87_reg_829_pp0_iter5_reg;
reg   [1:0] tmp_85_reg_834;
wire   [31:0] trunc_ln125_fu_410_p1;
reg   [31:0] trunc_ln125_reg_839;
reg   [31:0] trunc_ln125_reg_839_pp0_iter5_reg;
reg   [31:0] trunc_ln125_reg_839_pp0_iter6_reg;
wire   [32:0] add_ln130_fu_420_p2;
reg   [32:0] add_ln130_reg_845;
wire   [31:0] trunc_ln105_fu_447_p1;
reg   [31:0] trunc_ln105_reg_850;
reg   [1:0] tmp_88_reg_855;
wire   [63:0] xor_ln189_fu_488_p2;
reg   [63:0] xor_ln189_reg_860;
reg   [63:0] xor_ln189_reg_860_pp0_iter7_reg;
reg   [63:0] xor_ln189_reg_860_pp0_iter8_reg;
wire   [63:0] tempReg_20_fu_552_p2;
reg   [63:0] tempReg_20_reg_866;
reg   [63:0] tempReg_20_reg_866_pp0_iter8_reg;
reg   [0:0] tmp_90_reg_875;
wire   [31:0] zext_ln187_fu_250_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln187_9_fu_261_p1;
reg   [63:0] t_fu_82;
wire   [63:0] t_2_fu_674_p3;
wire    ap_loop_init;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [63:0] u_54_fu_86;
wire   [63:0] u_2_fu_607_p3;
reg   [63:0] v_fu_90;
wire   [63:0] v_2_fu_557_p3;
reg   [2:0] j_fu_94;
wire   [2:0] add_ln185_6_fu_230_p2;
reg   [2:0] ap_sig_allocacmp_j_11;
wire    ap_block_pp0_stage0_01001;
reg    mc_ce0_local;
reg    p503p1_1_ce0_local;
wire   [3:0] zext_ln185_fu_220_p1;
wire   [6:0] tmp_s_fu_242_p3;
wire   [2:0] sub_ln187_fu_255_p2;
wire   [32:0] zext_ln123_fu_378_p1;
wire   [32:0] zext_ln123_33_fu_381_p1;
wire   [32:0] add_ln123_fu_384_p2;
wire   [33:0] zext_ln123_34_fu_390_p1;
wire   [33:0] zext_ln106_fu_375_p1;
wire   [33:0] temp_fu_394_p2;
wire   [32:0] zext_ln130_fu_417_p1;
wire   [32:0] zext_ln106_34_fu_414_p1;
wire   [31:0] zext_ln106_33_fu_426_p1;
wire   [31:0] add_ln130_34_fu_432_p2;
wire   [33:0] zext_ln130_34_fu_437_p1;
wire   [33:0] zext_ln130_33_fu_429_p1;
wire   [33:0] temp_20_fu_441_p2;
wire   [33:0] and_ln189_8_fu_468_p3;
wire   [63:0] zext_ln189_fu_475_p1;
wire   [63:0] and_ln_fu_461_p3;
wire   [63:0] add_ln189_fu_482_p2;
wire   [63:0] zext_ln189_8_fu_479_p1;
wire   [63:0] tempReg_fu_504_p3;
wire   [63:0] shl_ln_fu_497_p3;
wire   [63:0] v_76_fu_510_p2;
wire   [63:0] xor_ln105_140_fu_522_p2;
wire   [63:0] xor_ln105_fu_516_p2;
wire   [63:0] or_ln105_fu_528_p2;
wire   [63:0] xor_ln105_141_fu_534_p2;
wire   [0:0] carry_fu_540_p3;
wire   [63:0] zext_ln105_40_fu_548_p1;
wire   [63:0] u_fu_572_p2;
wire   [63:0] xor_ln105_144_fu_582_p2;
wire   [63:0] xor_ln105_143_fu_577_p2;
wire   [63:0] or_ln105_25_fu_587_p2;
wire   [63:0] xor_ln105_145_fu_593_p2;
wire   [0:0] bit_sel_fu_622_p3;
wire   [0:0] xor_ln105_142_fu_629_p2;
wire   [62:0] trunc_ln105_27_fu_635_p1;
wire   [63:0] xor_ln105_s_fu_638_p3;
wire   [63:0] and_ln105_fu_646_p2;
wire   [0:0] tmp_89_fu_651_p3;
wire   [0:0] carry_41_fu_659_p2;
wire   [63:0] zext_ln190_fu_664_p1;
wire   [63:0] t_28_fu_668_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 t_fu_82 = 64'd0;
#0 u_54_fu_86 = 64'd0;
#0 v_fu_90 = 64'd0;
#0 j_fu_94 = 3'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_rdc_mont_14183_Pipeline_VITIS_LOOP_185_3_p503p1_1_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
p503p1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p503p1_1_address0),
    .ce0(p503p1_1_ce0_local),
    .q0(p503p1_1_q0)
);

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln185_fu_224_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_94 <= add_ln185_6_fu_230_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_94 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_fu_82 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            t_fu_82 <= t_2_fu_674_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            u_54_fu_86 <= u_024;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            u_54_fu_86 <= u_2_fu_607_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            v_fu_90 <= v_025;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            v_fu_90 <= v_2_fu_557_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln130_reg_845 <= add_ln130_fu_420_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        icmp_ln185_reg_729_pp0_iter2_reg <= icmp_ln185_reg_729_pp0_iter1_reg;
        icmp_ln185_reg_729_pp0_iter3_reg <= icmp_ln185_reg_729_pp0_iter2_reg;
        icmp_ln185_reg_729_pp0_iter4_reg <= icmp_ln185_reg_729_pp0_iter3_reg;
        icmp_ln185_reg_729_pp0_iter5_reg <= icmp_ln185_reg_729_pp0_iter4_reg;
        icmp_ln185_reg_729_pp0_iter6_reg <= icmp_ln185_reg_729_pp0_iter5_reg;
        icmp_ln185_reg_729_pp0_iter7_reg <= icmp_ln185_reg_729_pp0_iter6_reg;
        icmp_ln186_reg_733_pp0_iter2_reg <= icmp_ln186_reg_733_pp0_iter1_reg;
        icmp_ln186_reg_733_pp0_iter3_reg <= icmp_ln186_reg_733_pp0_iter2_reg;
        icmp_ln186_reg_733_pp0_iter4_reg <= icmp_ln186_reg_733_pp0_iter3_reg;
        icmp_ln186_reg_733_pp0_iter5_reg <= icmp_ln186_reg_733_pp0_iter4_reg;
        icmp_ln186_reg_733_pp0_iter6_reg <= icmp_ln186_reg_733_pp0_iter5_reg;
        icmp_ln186_reg_733_pp0_iter7_reg <= icmp_ln186_reg_733_pp0_iter6_reg;
        icmp_ln186_reg_733_pp0_iter8_reg <= icmp_ln186_reg_733_pp0_iter7_reg;
        tempReg_20_reg_866 <= tempReg_20_fu_552_p2;
        tempReg_20_reg_866_pp0_iter8_reg <= tempReg_20_reg_866;
        tmp_84_reg_814 <= {{grp_fu_901_p_dout0[63:32]}};
        tmp_85_reg_834 <= {{temp_fu_394_p2[33:32]}};
        tmp_86_reg_819 <= {{grp_fu_909_p_dout0[63:32]}};
        tmp_87_reg_829 <= {{grp_fu_913_p_dout0[63:32]}};
        tmp_87_reg_829_pp0_iter4_reg <= tmp_87_reg_829;
        tmp_87_reg_829_pp0_iter5_reg <= tmp_87_reg_829_pp0_iter4_reg;
        tmp_88_reg_855 <= {{temp_20_fu_441_p2[33:32]}};
        tmp_90_reg_875 <= xor_ln105_145_fu_593_p2[32'd63];
        trunc_ln105_reg_850 <= trunc_ln105_fu_447_p1;
        trunc_ln106_63_reg_799 <= trunc_ln106_63_fu_323_p1;
        trunc_ln106_64_reg_804 <= trunc_ln106_64_fu_327_p1;
        trunc_ln106_65_reg_809 <= trunc_ln106_65_fu_331_p1;
        trunc_ln106_reg_794 <= trunc_ln106_fu_319_p1;
        trunc_ln106_reg_794_pp0_iter4_reg <= trunc_ln106_reg_794;
        trunc_ln106_reg_794_pp0_iter5_reg <= trunc_ln106_reg_794_pp0_iter4_reg;
        trunc_ln106_reg_794_pp0_iter6_reg <= trunc_ln106_reg_794_pp0_iter5_reg;
        trunc_ln106_s_reg_824 <= {{grp_fu_905_p_dout0[63:32]}};
        trunc_ln106_s_reg_824_pp0_iter4_reg <= trunc_ln106_s_reg_824;
        trunc_ln125_reg_839 <= trunc_ln125_fu_410_p1;
        trunc_ln125_reg_839_pp0_iter5_reg <= trunc_ln125_reg_839;
        trunc_ln125_reg_839_pp0_iter6_reg <= trunc_ln125_reg_839_pp0_iter5_reg;
        xor_ln189_reg_860 <= xor_ln189_fu_488_p2;
        xor_ln189_reg_860_pp0_iter7_reg <= xor_ln189_reg_860;
        xor_ln189_reg_860_pp0_iter8_reg <= xor_ln189_reg_860_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ah_reg_760 <= {{mc_q0[63:32]}};
        al_reg_750 <= al_fu_271_p1;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        bh_reg_765 <= {{p503p1_1_q0[63:32]}};
        bl_reg_755 <= bl_fu_275_p1;
        icmp_ln185_reg_729 <= icmp_ln185_fu_224_p2;
        icmp_ln185_reg_729_pp0_iter1_reg <= icmp_ln185_reg_729;
        icmp_ln186_reg_733 <= icmp_ln186_fu_236_p2;
        icmp_ln186_reg_733_pp0_iter1_reg <= icmp_ln186_reg_733;
    end
end

always @ (*) begin
    if (((icmp_ln185_fu_224_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_11 = 3'd0;
    end else begin
        ap_sig_allocacmp_j_11 = j_fu_94;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mc_ce0_local = 1'b1;
    end else begin
        mc_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p503p1_1_ce0_local = 1'b1;
    end else begin
        p503p1_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln185_reg_729_pp0_iter7_reg == 1'd1))) begin
        t_out_ap_vld = 1'b1;
    end else begin
        t_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln185_reg_729_pp0_iter7_reg == 1'd1))) begin
        u_54_out_ap_vld = 1'b1;
    end else begin
        u_54_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln185_reg_729_pp0_iter7_reg == 1'd1))) begin
        v_77_out_ap_vld = 1'b1;
    end else begin
        v_77_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln123_fu_384_p2 = (zext_ln123_fu_378_p1 + zext_ln123_33_fu_381_p1);

assign add_ln130_34_fu_432_p2 = (trunc_ln106_s_reg_824_pp0_iter4_reg + zext_ln106_33_fu_426_p1);

assign add_ln130_fu_420_p2 = (zext_ln130_fu_417_p1 + zext_ln106_34_fu_414_p1);

assign add_ln185_6_fu_230_p2 = (ap_sig_allocacmp_j_11 + 3'd1);

assign add_ln189_fu_482_p2 = (zext_ln189_fu_475_p1 + and_ln_fu_461_p3);

assign al_fu_271_p1 = mc_q0[31:0];

assign and_ln105_fu_646_p2 = (xor_ln189_reg_860_pp0_iter8_reg & xor_ln105_s_fu_638_p3);

assign and_ln189_8_fu_468_p3 = {{tmp_88_reg_855}, {32'd0}};

assign and_ln_fu_461_p3 = {{tmp_87_reg_829_pp0_iter5_reg}, {32'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bit_sel_fu_622_p3 = tempReg_20_reg_866_pp0_iter8_reg[64'd63];

assign bl_fu_275_p1 = p503p1_1_q0[31:0];

assign carry_41_fu_659_p2 = (tmp_90_reg_875 | tmp_89_fu_651_p3);

assign carry_fu_540_p3 = xor_ln105_141_fu_534_p2[32'd63];

assign grp_fu_901_p_ce = 1'b1;

assign grp_fu_901_p_din0 = zext_ln105_36_fu_309_p1;

assign grp_fu_901_p_din1 = zext_ln105_fu_299_p1;

assign grp_fu_905_p_ce = 1'b1;

assign grp_fu_905_p_din0 = zext_ln112_fu_314_p1;

assign grp_fu_905_p_din1 = zext_ln105_fu_299_p1;

assign grp_fu_909_p_ce = 1'b1;

assign grp_fu_909_p_din0 = zext_ln105_36_fu_309_p1;

assign grp_fu_909_p_din1 = zext_ln110_fu_304_p1;

assign grp_fu_913_p_ce = 1'b1;

assign grp_fu_913_p_din0 = zext_ln112_fu_314_p1;

assign grp_fu_913_p_din1 = zext_ln110_fu_304_p1;

assign icmp_ln185_fu_224_p2 = ((ap_sig_allocacmp_j_11 == i_11) ? 1'b1 : 1'b0);

assign icmp_ln186_fu_236_p2 = ((zext_ln185_fu_220_p1 < add_ln185) ? 1'b1 : 1'b0);

assign mc_address0 = zext_ln187_fu_250_p1;

assign mc_ce0 = mc_ce0_local;

assign or_ln105_25_fu_587_p2 = (xor_ln105_144_fu_582_p2 | xor_ln105_143_fu_577_p2);

assign or_ln105_fu_528_p2 = (xor_ln105_fu_516_p2 | xor_ln105_140_fu_522_p2);

assign p503p1_1_address0 = zext_ln187_9_fu_261_p1;

assign shl_ln_fu_497_p3 = {{trunc_ln125_reg_839_pp0_iter6_reg}, {32'd0}};

assign sub_ln187_fu_255_p2 = (empty - ap_sig_allocacmp_j_11);

assign t_28_fu_668_p2 = (t_fu_82 + zext_ln190_fu_664_p1);

assign t_2_fu_674_p3 = ((icmp_ln186_reg_733_pp0_iter8_reg[0:0] == 1'b1) ? t_28_fu_668_p2 : t_fu_82);

assign t_out = t_fu_82;

assign tempReg_20_fu_552_p2 = (xor_ln189_reg_860 + zext_ln105_40_fu_548_p1);

assign tempReg_fu_504_p3 = {{trunc_ln125_reg_839_pp0_iter6_reg}, {trunc_ln106_reg_794_pp0_iter6_reg}};

assign temp_20_fu_441_p2 = (zext_ln130_34_fu_437_p1 + zext_ln130_33_fu_429_p1);

assign temp_fu_394_p2 = (zext_ln123_34_fu_390_p1 + zext_ln106_fu_375_p1);

assign tmp_89_fu_651_p3 = and_ln105_fu_646_p2[32'd63];

assign tmp_s_fu_242_p3 = {{mc_offset}, {ap_sig_allocacmp_j_11}};

assign trunc_ln105_27_fu_635_p1 = tempReg_20_reg_866_pp0_iter8_reg[62:0];

assign trunc_ln105_fu_447_p1 = temp_20_fu_441_p2[31:0];

assign trunc_ln106_63_fu_323_p1 = grp_fu_905_p_dout0[31:0];

assign trunc_ln106_64_fu_327_p1 = grp_fu_909_p_dout0[31:0];

assign trunc_ln106_65_fu_331_p1 = grp_fu_913_p_dout0[31:0];

assign trunc_ln106_fu_319_p1 = grp_fu_901_p_dout0[31:0];

assign trunc_ln125_fu_410_p1 = temp_fu_394_p2[31:0];

assign u_2_fu_607_p3 = ((icmp_ln186_reg_733_pp0_iter7_reg[0:0] == 1'b1) ? u_fu_572_p2 : u_54_fu_86);

assign u_54_out = u_54_fu_86;

assign u_fu_572_p2 = (tempReg_20_reg_866 + u_54_fu_86);

assign v_2_fu_557_p3 = ((icmp_ln186_reg_733_pp0_iter6_reg[0:0] == 1'b1) ? v_76_fu_510_p2 : v_fu_90);

assign v_76_fu_510_p2 = (tempReg_fu_504_p3 + v_fu_90);

assign v_77_out = v_fu_90;

assign xor_ln105_140_fu_522_p2 = (v_fu_90 ^ shl_ln_fu_497_p3);

assign xor_ln105_141_fu_534_p2 = (v_76_fu_510_p2 ^ or_ln105_fu_528_p2);

assign xor_ln105_142_fu_629_p2 = (bit_sel_fu_622_p3 ^ 1'd1);

assign xor_ln105_143_fu_577_p2 = (u_fu_572_p2 ^ tempReg_20_reg_866);

assign xor_ln105_144_fu_582_p2 = (u_54_fu_86 ^ tempReg_20_reg_866);

assign xor_ln105_145_fu_593_p2 = (u_fu_572_p2 ^ or_ln105_25_fu_587_p2);

assign xor_ln105_fu_516_p2 = (v_76_fu_510_p2 ^ shl_ln_fu_497_p3);

assign xor_ln105_s_fu_638_p3 = {{xor_ln105_142_fu_629_p2}, {trunc_ln105_27_fu_635_p1}};

assign xor_ln189_fu_488_p2 = (zext_ln189_8_fu_479_p1 ^ add_ln189_fu_482_p2);

assign zext_ln105_36_fu_309_p1 = bl_reg_755;

assign zext_ln105_40_fu_548_p1 = carry_fu_540_p3;

assign zext_ln105_fu_299_p1 = al_reg_750;

assign zext_ln106_33_fu_426_p1 = tmp_85_reg_834;

assign zext_ln106_34_fu_414_p1 = tmp_86_reg_819;

assign zext_ln106_fu_375_p1 = tmp_84_reg_814;

assign zext_ln110_fu_304_p1 = ah_reg_760;

assign zext_ln112_fu_314_p1 = bh_reg_765;

assign zext_ln123_33_fu_381_p1 = trunc_ln106_63_reg_799;

assign zext_ln123_34_fu_390_p1 = add_ln123_fu_384_p2;

assign zext_ln123_fu_378_p1 = trunc_ln106_64_reg_804;

assign zext_ln130_33_fu_429_p1 = add_ln130_reg_845;

assign zext_ln130_34_fu_437_p1 = add_ln130_34_fu_432_p2;

assign zext_ln130_fu_417_p1 = trunc_ln106_65_reg_809;

assign zext_ln185_fu_220_p1 = ap_sig_allocacmp_j_11;

assign zext_ln187_9_fu_261_p1 = sub_ln187_fu_255_p2;

assign zext_ln187_fu_250_p1 = tmp_s_fu_242_p3;

assign zext_ln189_8_fu_479_p1 = trunc_ln105_reg_850;

assign zext_ln189_fu_475_p1 = and_ln189_8_fu_468_p3;

assign zext_ln190_fu_664_p1 = carry_41_fu_659_p2;

endmodule //sikep503_kem_enc_hw_rdc_mont_139_Pipeline_VITIS_LOOP_185_3
