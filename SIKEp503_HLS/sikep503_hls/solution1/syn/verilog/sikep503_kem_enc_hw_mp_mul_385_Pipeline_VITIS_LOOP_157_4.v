// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_mp_mul_385_Pipeline_VITIS_LOOP_157_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        indvars_iv,
        v,
        zext_ln156,
        a_address0,
        a_ce0,
        a_q0,
        zext_ln156_3,
        coeff_address0,
        coeff_ce0,
        coeff_q0,
        v_35_out,
        v_35_out_ap_vld,
        u_34_out_i,
        u_34_out_o,
        u_34_out_o_ap_vld,
        t_33_out,
        t_33_out_ap_vld,
        grp_fu_424_p_din0,
        grp_fu_424_p_din1,
        grp_fu_424_p_dout0,
        grp_fu_424_p_ce,
        grp_fu_428_p_din0,
        grp_fu_428_p_din1,
        grp_fu_428_p_dout0,
        grp_fu_428_p_ce,
        grp_fu_432_p_din0,
        grp_fu_432_p_din1,
        grp_fu_432_p_dout0,
        grp_fu_432_p_ce,
        grp_fu_436_p_din0,
        grp_fu_436_p_din1,
        grp_fu_436_p_dout0,
        grp_fu_436_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] indvars_iv;
input  [63:0] v;
input  [3:0] zext_ln156;
output  [2:0] a_address0;
output   a_ce0;
input  [63:0] a_q0;
input  [3:0] zext_ln156_3;
output  [5:0] coeff_address0;
output   coeff_ce0;
input  [63:0] coeff_q0;
output  [63:0] v_35_out;
output   v_35_out_ap_vld;
input  [63:0] u_34_out_i;
output  [63:0] u_34_out_o;
output   u_34_out_o_ap_vld;
output  [2:0] t_33_out;
output   t_33_out_ap_vld;
output  [31:0] grp_fu_424_p_din0;
output  [31:0] grp_fu_424_p_din1;
input  [63:0] grp_fu_424_p_dout0;
output   grp_fu_424_p_ce;
output  [31:0] grp_fu_428_p_din0;
output  [31:0] grp_fu_428_p_din1;
input  [63:0] grp_fu_428_p_dout0;
output   grp_fu_428_p_ce;
output  [31:0] grp_fu_432_p_din0;
output  [31:0] grp_fu_432_p_din1;
input  [63:0] grp_fu_432_p_dout0;
output   grp_fu_432_p_ce;
output  [31:0] grp_fu_436_p_din0;
output  [31:0] grp_fu_436_p_din1;
input  [63:0] grp_fu_436_p_dout0;
output   grp_fu_436_p_ce;

reg ap_idle;
reg v_35_out_ap_vld;
reg[63:0] u_34_out_o;
reg u_34_out_o_ap_vld;
reg t_33_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln157_fu_220_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] zext_ln156_3_cast_fu_184_p1;
reg   [4:0] zext_ln156_3_cast_reg_727;
reg   [3:0] j_reg_732;
reg   [0:0] icmp_ln157_reg_738;
reg   [0:0] icmp_ln157_reg_738_pp0_iter1_reg;
reg   [0:0] icmp_ln157_reg_738_pp0_iter2_reg;
reg   [0:0] icmp_ln157_reg_738_pp0_iter3_reg;
reg   [0:0] icmp_ln157_reg_738_pp0_iter4_reg;
reg   [0:0] icmp_ln157_reg_738_pp0_iter5_reg;
reg   [0:0] icmp_ln157_reg_738_pp0_iter6_reg;
reg   [0:0] icmp_ln157_reg_738_pp0_iter7_reg;
wire   [31:0] al_fu_286_p1;
reg   [31:0] al_reg_752;
wire   [31:0] bl_fu_290_p1;
reg   [31:0] bl_reg_757;
reg   [31:0] ah_reg_762;
reg   [31:0] bh_reg_767;
wire   [63:0] zext_ln105_fu_314_p1;
wire   [63:0] zext_ln110_fu_319_p1;
wire   [63:0] zext_ln105_101_fu_324_p1;
wire   [63:0] zext_ln112_fu_329_p1;
wire   [31:0] trunc_ln106_fu_334_p1;
reg   [31:0] trunc_ln106_reg_796;
reg   [31:0] trunc_ln106_reg_796_pp0_iter5_reg;
reg   [31:0] trunc_ln106_reg_796_pp0_iter6_reg;
wire   [31:0] trunc_ln106_150_fu_338_p1;
reg   [31:0] trunc_ln106_150_reg_801;
wire   [31:0] trunc_ln106_151_fu_342_p1;
reg   [31:0] trunc_ln106_151_reg_806;
wire   [31:0] trunc_ln106_152_fu_346_p1;
reg   [31:0] trunc_ln106_152_reg_811;
reg   [31:0] trunc_ln106_152_reg_811_pp0_iter5_reg;
reg   [31:0] tmp_257_reg_817;
reg   [31:0] tmp_259_reg_822;
reg   [31:0] tmp_259_reg_822_pp0_iter5_reg;
reg   [31:0] tmp_260_reg_828;
reg   [31:0] tmp_260_reg_828_pp0_iter5_reg;
reg   [31:0] tmp_261_reg_833;
reg   [31:0] tmp_261_reg_833_pp0_iter5_reg;
reg   [31:0] tmp_261_reg_833_pp0_iter6_reg;
reg   [1:0] tmp_258_reg_838;
wire   [31:0] trunc_ln125_fu_425_p1;
reg   [31:0] trunc_ln125_reg_843;
reg   [31:0] trunc_ln125_reg_843_pp0_iter6_reg;
wire   [31:0] add_ln105_fu_469_p2;
reg   [31:0] add_ln105_reg_849;
reg   [1:0] tmp_262_reg_854;
wire   [63:0] add_ln133_fu_519_p2;
reg   [63:0] add_ln133_reg_859;
reg   [63:0] add_ln133_reg_859_pp0_iter8_reg;
wire   [63:0] tempReg_fu_590_p2;
reg   [63:0] tempReg_reg_864;
reg   [63:0] tempReg_reg_864_pp0_iter8_reg;
reg   [63:0] u_34_out_load_reg_873;
wire   [63:0] u_fu_605_p2;
reg   [63:0] u_reg_878;
wire   [31:0] zext_ln158_fu_243_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln158_15_fu_281_p1;
wire   [63:0] zext_ln156_cast_fu_188_p1;
wire    ap_loop_init;
reg   [2:0] t_33_fu_92;
wire   [2:0] t_fu_685_p2;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [63:0] v_35_fu_96;
wire   [63:0] v_145_fu_531_p2;
reg   [3:0] j_15_fu_100;
wire   [3:0] indvars_iv_cast_fu_192_p1;
wire   [3:0] add_ln157_fu_226_p2;
reg   [3:0] ap_sig_allocacmp_j;
wire    ap_block_pp0_stage0_01001;
reg    a_ce0_local;
reg    coeff_ce0_local;
wire   [2:0] trunc_ln158_fu_240_p1;
wire   [4:0] zext_ln157_fu_237_p1;
wire   [4:0] sub_ln158_fu_248_p2;
wire   [7:0] tmp_s_fu_253_p3;
wire  signed [8:0] sext_ln158_fu_261_p1;
wire   [8:0] add_ln158_fu_265_p2;
wire   [5:0] lshr_ln_fu_271_p4;
wire   [32:0] zext_ln123_fu_393_p1;
wire   [32:0] zext_ln123_91_fu_396_p1;
wire   [32:0] add_ln123_fu_399_p2;
wire   [33:0] zext_ln123_92_fu_405_p1;
wire   [33:0] zext_ln106_fu_390_p1;
wire   [33:0] temp_fu_409_p2;
wire   [32:0] zext_ln130_fu_438_p1;
wire   [32:0] zext_ln106_116_fu_432_p1;
wire   [32:0] add_ln130_112_fu_445_p2;
wire   [32:0] zext_ln106_117_fu_435_p1;
wire   [32:0] zext_ln106_115_fu_429_p1;
wire   [32:0] add_ln130_113_fu_455_p2;
wire   [31:0] trunc_ln130_fu_461_p1;
wire   [31:0] add_ln130_fu_441_p2;
wire   [33:0] zext_ln130_92_fu_465_p1;
wire   [33:0] zext_ln130_91_fu_451_p1;
wire   [33:0] temp_49_fu_475_p2;
wire   [33:0] and_ln133_5_fu_508_p3;
wire   [63:0] zext_ln133_fu_515_p1;
wire   [63:0] and_ln133_s_fu_501_p3;
wire   [63:0] or_ln_fu_525_p3;
wire   [63:0] shl_ln125_s_fu_494_p3;
wire   [63:0] xor_ln105_43_fu_537_p2;
wire   [63:0] xor_ln105_44_fu_543_p2;
wire   [63:0] or_ln105_9_fu_549_p2;
wire   [63:0] xor_ln105_45_fu_555_p2;
wire   [0:0] carry_fu_561_p3;
wire   [31:0] tmp_24_fu_573_p4;
wire   [63:0] or_ln17_fu_583_p3;
wire   [63:0] zext_ln105_102_fu_569_p1;
wire   [63:0] xor_ln160_fu_619_p2;
wire   [63:0] xor_ln160_25_fu_623_p2;
wire   [0:0] bit_sel1_fu_633_p3;
wire   [0:0] xor_ln160_28_fu_640_p2;
wire   [62:0] trunc_ln160_fu_646_p1;
wire   [63:0] xor_ln160_s_fu_649_p3;
wire   [63:0] or_ln160_fu_627_p2;
wire   [63:0] xor_ln160_27_fu_662_p2;
wire   [63:0] and_ln160_fu_657_p2;
wire   [63:0] or_ln160_12_fu_667_p2;
wire   [0:0] tmp_fu_673_p3;
wire   [2:0] zext_ln161_fu_681_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 t_33_fu_92 = 3'd0;
#0 v_35_fu_96 = 64'd0;
#0 j_15_fu_100 = 4'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln157_fu_220_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_15_fu_100 <= add_ln157_fu_226_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_15_fu_100 <= indvars_iv_cast_fu_192_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_33_fu_92 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            t_33_fu_92 <= t_fu_685_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            v_35_fu_96 <= v;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            v_35_fu_96 <= v_145_fu_531_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln105_reg_849 <= add_ln105_fu_469_p2;
        add_ln133_reg_859[63 : 32] <= add_ln133_fu_519_p2[63 : 32];
        add_ln133_reg_859_pp0_iter8_reg[63 : 32] <= add_ln133_reg_859[63 : 32];
        ah_reg_762 <= {{a_q0[63:32]}};
        al_reg_752 <= al_fu_286_p1;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        bh_reg_767 <= {{coeff_q0[63:32]}};
        bl_reg_757 <= bl_fu_290_p1;
        icmp_ln157_reg_738_pp0_iter2_reg <= icmp_ln157_reg_738_pp0_iter1_reg;
        icmp_ln157_reg_738_pp0_iter3_reg <= icmp_ln157_reg_738_pp0_iter2_reg;
        icmp_ln157_reg_738_pp0_iter4_reg <= icmp_ln157_reg_738_pp0_iter3_reg;
        icmp_ln157_reg_738_pp0_iter5_reg <= icmp_ln157_reg_738_pp0_iter4_reg;
        icmp_ln157_reg_738_pp0_iter6_reg <= icmp_ln157_reg_738_pp0_iter5_reg;
        icmp_ln157_reg_738_pp0_iter7_reg <= icmp_ln157_reg_738_pp0_iter6_reg;
        tempReg_reg_864 <= tempReg_fu_590_p2;
        tempReg_reg_864_pp0_iter8_reg <= tempReg_reg_864;
        tmp_257_reg_817 <= {{grp_fu_424_p_dout0[63:32]}};
        tmp_258_reg_838 <= {{temp_fu_409_p2[33:32]}};
        tmp_259_reg_822 <= {{grp_fu_432_p_dout0[63:32]}};
        tmp_259_reg_822_pp0_iter5_reg <= tmp_259_reg_822;
        tmp_260_reg_828 <= {{grp_fu_428_p_dout0[63:32]}};
        tmp_260_reg_828_pp0_iter5_reg <= tmp_260_reg_828;
        tmp_261_reg_833 <= {{grp_fu_436_p_dout0[63:32]}};
        tmp_261_reg_833_pp0_iter5_reg <= tmp_261_reg_833;
        tmp_261_reg_833_pp0_iter6_reg <= tmp_261_reg_833_pp0_iter5_reg;
        tmp_262_reg_854 <= {{temp_49_fu_475_p2[33:32]}};
        trunc_ln106_150_reg_801 <= trunc_ln106_150_fu_338_p1;
        trunc_ln106_151_reg_806 <= trunc_ln106_151_fu_342_p1;
        trunc_ln106_152_reg_811 <= trunc_ln106_152_fu_346_p1;
        trunc_ln106_152_reg_811_pp0_iter5_reg <= trunc_ln106_152_reg_811;
        trunc_ln106_reg_796 <= trunc_ln106_fu_334_p1;
        trunc_ln106_reg_796_pp0_iter5_reg <= trunc_ln106_reg_796;
        trunc_ln106_reg_796_pp0_iter6_reg <= trunc_ln106_reg_796_pp0_iter5_reg;
        trunc_ln125_reg_843 <= trunc_ln125_fu_425_p1;
        trunc_ln125_reg_843_pp0_iter6_reg <= trunc_ln125_reg_843;
        u_34_out_load_reg_873 <= u_34_out_i;
        u_reg_878 <= u_fu_605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln157_reg_738 <= icmp_ln157_fu_220_p2;
        icmp_ln157_reg_738_pp0_iter1_reg <= icmp_ln157_reg_738;
        j_reg_732 <= ap_sig_allocacmp_j;
        zext_ln156_3_cast_reg_727[3 : 0] <= zext_ln156_3_cast_fu_184_p1[3 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_ce0_local = 1'b1;
    end else begin
        a_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_220_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j = indvars_iv_cast_fu_192_p1;
    end else begin
        ap_sig_allocacmp_j = j_15_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        coeff_ce0_local = 1'b1;
    end else begin
        coeff_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln157_reg_738_pp0_iter7_reg == 1'd1))) begin
        t_33_out_ap_vld = 1'b1;
    end else begin
        t_33_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            u_34_out_o = zext_ln156_cast_fu_188_p1;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            u_34_out_o = u_fu_605_p2;
        end else begin
            u_34_out_o = u_34_out_i;
        end
    end else begin
        u_34_out_o = u_34_out_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
        u_34_out_o_ap_vld = 1'b1;
    end else begin
        u_34_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln157_reg_738_pp0_iter7_reg == 1'd1))) begin
        v_35_out_ap_vld = 1'b1;
    end else begin
        v_35_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_address0 = zext_ln158_fu_243_p1;

assign a_ce0 = a_ce0_local;

assign add_ln105_fu_469_p2 = (trunc_ln130_fu_461_p1 + add_ln130_fu_441_p2);

assign add_ln123_fu_399_p2 = (zext_ln123_fu_393_p1 + zext_ln123_91_fu_396_p1);

assign add_ln130_112_fu_445_p2 = (zext_ln130_fu_438_p1 + zext_ln106_116_fu_432_p1);

assign add_ln130_113_fu_455_p2 = (zext_ln106_117_fu_435_p1 + zext_ln106_115_fu_429_p1);

assign add_ln130_fu_441_p2 = (trunc_ln106_152_reg_811_pp0_iter5_reg + tmp_259_reg_822_pp0_iter5_reg);

assign add_ln133_fu_519_p2 = (zext_ln133_fu_515_p1 + and_ln133_s_fu_501_p3);

assign add_ln157_fu_226_p2 = (ap_sig_allocacmp_j + 4'd1);

assign add_ln158_fu_265_p2 = ($signed(sext_ln158_fu_261_p1) + $signed(9'd64));

assign al_fu_286_p1 = a_q0[31:0];

assign and_ln133_5_fu_508_p3 = {{tmp_262_reg_854}, {32'd0}};

assign and_ln133_s_fu_501_p3 = {{tmp_261_reg_833_pp0_iter6_reg}, {32'd0}};

assign and_ln160_fu_657_p2 = (xor_ln160_s_fu_649_p3 & add_ln133_reg_859_pp0_iter8_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bit_sel1_fu_633_p3 = tempReg_reg_864_pp0_iter8_reg[64'd63];

assign bl_fu_290_p1 = coeff_q0[31:0];

assign carry_fu_561_p3 = xor_ln105_45_fu_555_p2[32'd63];

assign coeff_address0 = zext_ln158_15_fu_281_p1;

assign coeff_ce0 = coeff_ce0_local;

assign grp_fu_424_p_ce = 1'b1;

assign grp_fu_424_p_din0 = zext_ln105_101_fu_324_p1;

assign grp_fu_424_p_din1 = zext_ln105_fu_314_p1;

assign grp_fu_428_p_ce = 1'b1;

assign grp_fu_428_p_din0 = zext_ln112_fu_329_p1;

assign grp_fu_428_p_din1 = zext_ln105_fu_314_p1;

assign grp_fu_432_p_ce = 1'b1;

assign grp_fu_432_p_din0 = zext_ln105_101_fu_324_p1;

assign grp_fu_432_p_din1 = zext_ln110_fu_319_p1;

assign grp_fu_436_p_ce = 1'b1;

assign grp_fu_436_p_din0 = zext_ln112_fu_329_p1;

assign grp_fu_436_p_din1 = zext_ln110_fu_319_p1;

assign icmp_ln157_fu_220_p2 = ((ap_sig_allocacmp_j == 4'd8) ? 1'b1 : 1'b0);

assign indvars_iv_cast_fu_192_p1 = indvars_iv;

assign lshr_ln_fu_271_p4 = {{add_ln158_fu_265_p2[8:3]}};

assign or_ln105_9_fu_549_p2 = (xor_ln105_44_fu_543_p2 | xor_ln105_43_fu_537_p2);

assign or_ln160_12_fu_667_p2 = (xor_ln160_27_fu_662_p2 | and_ln160_fu_657_p2);

assign or_ln160_fu_627_p2 = (xor_ln160_fu_619_p2 | xor_ln160_25_fu_623_p2);

assign or_ln17_fu_583_p3 = {{tmp_24_fu_573_p4}, {add_ln105_reg_849}};

assign or_ln_fu_525_p3 = {{trunc_ln125_reg_843_pp0_iter6_reg}, {trunc_ln106_reg_796_pp0_iter6_reg}};

assign sext_ln158_fu_261_p1 = $signed(tmp_s_fu_253_p3);

assign shl_ln125_s_fu_494_p3 = {{trunc_ln125_reg_843_pp0_iter6_reg}, {32'd0}};

assign sub_ln158_fu_248_p2 = (zext_ln156_3_cast_reg_727 - zext_ln157_fu_237_p1);

assign t_33_out = t_33_fu_92;

assign t_fu_685_p2 = (zext_ln161_fu_681_p1 + t_33_fu_92);

assign tempReg_fu_590_p2 = (or_ln17_fu_583_p3 + zext_ln105_102_fu_569_p1);

assign temp_49_fu_475_p2 = (zext_ln130_92_fu_465_p1 + zext_ln130_91_fu_451_p1);

assign temp_fu_409_p2 = (zext_ln123_92_fu_405_p1 + zext_ln106_fu_390_p1);

assign tmp_24_fu_573_p4 = {{add_ln133_fu_519_p2[63:32]}};

assign tmp_fu_673_p3 = or_ln160_12_fu_667_p2[32'd63];

assign tmp_s_fu_253_p3 = {{sub_ln158_fu_248_p2}, {3'd0}};

assign trunc_ln106_150_fu_338_p1 = grp_fu_428_p_dout0[31:0];

assign trunc_ln106_151_fu_342_p1 = grp_fu_432_p_dout0[31:0];

assign trunc_ln106_152_fu_346_p1 = grp_fu_436_p_dout0[31:0];

assign trunc_ln106_fu_334_p1 = grp_fu_424_p_dout0[31:0];

assign trunc_ln125_fu_425_p1 = temp_fu_409_p2[31:0];

assign trunc_ln130_fu_461_p1 = add_ln130_113_fu_455_p2[31:0];

assign trunc_ln158_fu_240_p1 = j_reg_732[2:0];

assign trunc_ln160_fu_646_p1 = tempReg_reg_864_pp0_iter8_reg[62:0];

assign u_fu_605_p2 = (tempReg_reg_864 + u_34_out_i);

assign v_145_fu_531_p2 = (or_ln_fu_525_p3 + v_35_fu_96);

assign v_35_out = v_35_fu_96;

assign xor_ln105_43_fu_537_p2 = (v_145_fu_531_p2 ^ shl_ln125_s_fu_494_p3);

assign xor_ln105_44_fu_543_p2 = (v_35_fu_96 ^ shl_ln125_s_fu_494_p3);

assign xor_ln105_45_fu_555_p2 = (v_145_fu_531_p2 ^ or_ln105_9_fu_549_p2);

assign xor_ln160_25_fu_623_p2 = (u_34_out_load_reg_873 ^ tempReg_reg_864_pp0_iter8_reg);

assign xor_ln160_27_fu_662_p2 = (u_reg_878 ^ or_ln160_fu_627_p2);

assign xor_ln160_28_fu_640_p2 = (bit_sel1_fu_633_p3 ^ 1'd1);

assign xor_ln160_fu_619_p2 = (u_reg_878 ^ tempReg_reg_864_pp0_iter8_reg);

assign xor_ln160_s_fu_649_p3 = {{xor_ln160_28_fu_640_p2}, {trunc_ln160_fu_646_p1}};

assign zext_ln105_101_fu_324_p1 = bl_reg_757;

assign zext_ln105_102_fu_569_p1 = carry_fu_561_p3;

assign zext_ln105_fu_314_p1 = al_reg_752;

assign zext_ln106_115_fu_429_p1 = tmp_258_reg_838;

assign zext_ln106_116_fu_432_p1 = tmp_259_reg_822_pp0_iter5_reg;

assign zext_ln106_117_fu_435_p1 = tmp_260_reg_828_pp0_iter5_reg;

assign zext_ln106_fu_390_p1 = tmp_257_reg_817;

assign zext_ln110_fu_319_p1 = ah_reg_762;

assign zext_ln112_fu_329_p1 = bh_reg_767;

assign zext_ln123_91_fu_396_p1 = trunc_ln106_150_reg_801;

assign zext_ln123_92_fu_405_p1 = add_ln123_fu_399_p2;

assign zext_ln123_fu_393_p1 = trunc_ln106_151_reg_806;

assign zext_ln130_91_fu_451_p1 = add_ln130_112_fu_445_p2;

assign zext_ln130_92_fu_465_p1 = add_ln130_113_fu_455_p2;

assign zext_ln130_fu_438_p1 = trunc_ln106_152_reg_811_pp0_iter5_reg;

assign zext_ln133_fu_515_p1 = and_ln133_5_fu_508_p3;

assign zext_ln156_3_cast_fu_184_p1 = zext_ln156_3;

assign zext_ln156_cast_fu_188_p1 = zext_ln156;

assign zext_ln157_fu_237_p1 = j_reg_732;

assign zext_ln158_15_fu_281_p1 = lshr_ln_fu_271_p4;

assign zext_ln158_fu_243_p1 = trunc_ln158_fu_240_p1;

assign zext_ln161_fu_681_p1 = tmp_fu_673_p3;

always @ (posedge ap_clk) begin
    zext_ln156_3_cast_reg_727[4] <= 1'b0;
    add_ln133_reg_859[31:0] <= 32'b00000000000000000000000000000000;
    add_ln133_reg_859_pp0_iter8_reg[31:0] <= 32'b00000000000000000000000000000000;
end

endmodule //sikep503_kem_enc_hw_mp_mul_385_Pipeline_VITIS_LOOP_157_4
