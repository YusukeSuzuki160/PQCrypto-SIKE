// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_mp_mul_2_Pipeline_VITIS_LOOP_144_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_017,
        zext_ln143,
        indvars_iv31,
        a_offset,
        a_address0,
        a_ce0,
        a_q0,
        i,
        b,
        coeff_address0,
        coeff_ce0,
        coeff_q0,
        v_114_out,
        v_114_out_ap_vld,
        u_86_out_i,
        u_86_out_o,
        u_86_out_o_ap_vld,
        t_out_i,
        t_out_o,
        t_out_o_ap_vld,
        grp_fu_476_p_din0,
        grp_fu_476_p_din1,
        grp_fu_476_p_dout0,
        grp_fu_476_p_ce,
        grp_fu_480_p_din0,
        grp_fu_480_p_din1,
        grp_fu_480_p_dout0,
        grp_fu_480_p_ce,
        grp_fu_484_p_din0,
        grp_fu_484_p_din1,
        grp_fu_484_p_dout0,
        grp_fu_484_p_ce,
        grp_fu_488_p_din0,
        grp_fu_488_p_din1,
        grp_fu_488_p_dout0,
        grp_fu_488_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] v_017;
input  [3:0] zext_ln143;
input  [3:0] indvars_iv31;
input  [0:0] a_offset;
output  [3:0] a_address0;
output   a_ce0;
input  [63:0] a_q0;
input  [2:0] i;
input  [8:0] b;
output  [5:0] coeff_address0;
output   coeff_ce0;
input  [63:0] coeff_q0;
output  [63:0] v_114_out;
output   v_114_out_ap_vld;
input  [63:0] u_86_out_i;
output  [63:0] u_86_out_o;
output   u_86_out_o_ap_vld;
input  [3:0] t_out_i;
output  [3:0] t_out_o;
output   t_out_o_ap_vld;
output  [31:0] grp_fu_476_p_din0;
output  [31:0] grp_fu_476_p_din1;
input  [63:0] grp_fu_476_p_dout0;
output   grp_fu_476_p_ce;
output  [31:0] grp_fu_480_p_din0;
output  [31:0] grp_fu_480_p_din1;
input  [63:0] grp_fu_480_p_dout0;
output   grp_fu_480_p_ce;
output  [31:0] grp_fu_484_p_din0;
output  [31:0] grp_fu_484_p_din1;
input  [63:0] grp_fu_484_p_dout0;
output   grp_fu_484_p_ce;
output  [31:0] grp_fu_488_p_din0;
output  [31:0] grp_fu_488_p_din1;
input  [63:0] grp_fu_488_p_dout0;
output   grp_fu_488_p_ce;

reg ap_idle;
reg v_114_out_ap_vld;
reg[63:0] u_86_out_o;
reg u_86_out_o_ap_vld;
reg[3:0] t_out_o;
reg t_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln144_fu_224_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] i_cast_fu_191_p1;
reg   [3:0] i_cast_reg_733;
reg   [3:0] j_28_reg_738;
reg   [0:0] icmp_ln144_reg_744;
reg   [0:0] icmp_ln144_reg_744_pp0_iter1_reg;
reg   [0:0] icmp_ln144_reg_744_pp0_iter2_reg;
reg   [0:0] icmp_ln144_reg_744_pp0_iter3_reg;
reg   [0:0] icmp_ln144_reg_744_pp0_iter4_reg;
reg   [0:0] icmp_ln144_reg_744_pp0_iter5_reg;
reg   [0:0] icmp_ln144_reg_744_pp0_iter6_reg;
reg   [0:0] icmp_ln144_reg_744_pp0_iter7_reg;
wire   [31:0] al_fu_292_p1;
reg   [31:0] al_reg_758;
wire   [31:0] bl_fu_296_p1;
reg   [31:0] bl_reg_763;
reg   [31:0] ah_reg_768;
reg   [31:0] bh_reg_773;
wire   [63:0] zext_ln105_fu_320_p1;
wire   [63:0] zext_ln110_fu_325_p1;
wire   [63:0] zext_ln105_107_fu_330_p1;
wire   [63:0] zext_ln112_fu_335_p1;
wire   [31:0] trunc_ln106_fu_340_p1;
reg   [31:0] trunc_ln106_reg_802;
reg   [31:0] trunc_ln106_reg_802_pp0_iter5_reg;
reg   [31:0] trunc_ln106_reg_802_pp0_iter6_reg;
wire   [31:0] trunc_ln106_159_fu_344_p1;
reg   [31:0] trunc_ln106_159_reg_807;
wire   [31:0] trunc_ln106_160_fu_348_p1;
reg   [31:0] trunc_ln106_160_reg_812;
wire   [31:0] trunc_ln106_161_fu_352_p1;
reg   [31:0] trunc_ln106_161_reg_817;
reg   [31:0] trunc_ln106_161_reg_817_pp0_iter5_reg;
reg   [31:0] tmp_277_reg_823;
reg   [31:0] tmp_279_reg_828;
reg   [31:0] tmp_279_reg_828_pp0_iter5_reg;
reg   [31:0] tmp_280_reg_834;
reg   [31:0] tmp_280_reg_834_pp0_iter5_reg;
reg   [31:0] tmp_281_reg_839;
reg   [31:0] tmp_281_reg_839_pp0_iter5_reg;
reg   [31:0] tmp_281_reg_839_pp0_iter6_reg;
reg   [1:0] tmp_278_reg_844;
wire   [31:0] trunc_ln125_fu_431_p1;
reg   [31:0] trunc_ln125_reg_849;
reg   [31:0] trunc_ln125_reg_849_pp0_iter6_reg;
wire   [31:0] add_ln105_fu_475_p2;
reg   [31:0] add_ln105_reg_855;
reg   [1:0] tmp_282_reg_860;
wire   [63:0] add_ln133_fu_525_p2;
reg   [63:0] add_ln133_reg_865;
reg   [63:0] add_ln133_reg_865_pp0_iter8_reg;
wire   [63:0] tempReg_fu_596_p2;
reg   [63:0] tempReg_reg_870;
reg   [63:0] tempReg_reg_870_pp0_iter8_reg;
reg   [63:0] u_86_out_load_reg_879;
wire   [63:0] v_fu_611_p2;
reg   [63:0] v_reg_884;
wire   [31:0] zext_ln145_fu_251_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln145_16_fu_287_p1;
wire   [63:0] zext_ln143_cast_fu_195_p1;
wire    ap_loop_init;
wire   [3:0] u_fu_692_p2;
reg   [63:0] v_114_fu_98;
wire   [63:0] v_150_fu_537_p2;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [3:0] j_fu_102;
wire   [3:0] add_ln144_fu_230_p2;
reg   [3:0] ap_sig_allocacmp_j_28;
wire    ap_block_pp0_stage0_01001;
reg    a_ce0_local;
reg    coeff_ce0_local;
wire   [2:0] trunc_ln145_fu_241_p1;
wire   [3:0] tmp_275_fu_244_p3;
wire   [3:0] sub_ln145_fu_256_p2;
wire   [6:0] tmp_276_fu_260_p3;
wire  signed [8:0] sext_ln145_fu_268_p1;
wire   [8:0] add_ln145_fu_272_p2;
wire   [5:0] lshr_ln_fu_277_p4;
wire   [32:0] zext_ln123_fu_399_p1;
wire   [32:0] zext_ln123_97_fu_402_p1;
wire   [32:0] add_ln123_fu_405_p2;
wire   [33:0] zext_ln123_98_fu_411_p1;
wire   [33:0] zext_ln106_fu_396_p1;
wire   [33:0] temp_fu_415_p2;
wire   [32:0] zext_ln130_fu_444_p1;
wire   [32:0] zext_ln106_125_fu_438_p1;
wire   [32:0] add_ln130_fu_451_p2;
wire   [32:0] zext_ln106_126_fu_441_p1;
wire   [32:0] zext_ln106_124_fu_435_p1;
wire   [32:0] add_ln130_122_fu_461_p2;
wire   [31:0] trunc_ln130_fu_467_p1;
wire   [31:0] add_ln130_121_fu_447_p2;
wire   [33:0] zext_ln130_98_fu_471_p1;
wire   [33:0] zext_ln130_97_fu_457_p1;
wire   [33:0] temp_52_fu_481_p2;
wire   [33:0] and_ln133_s_fu_514_p3;
wire   [63:0] zext_ln133_fu_521_p1;
wire   [63:0] and_ln_fu_507_p3;
wire   [63:0] or_ln_fu_531_p3;
wire   [63:0] shl_ln_fu_500_p3;
wire   [63:0] xor_ln105_fu_543_p2;
wire   [63:0] xor_ln105_46_fu_549_p2;
wire   [63:0] or_ln105_fu_555_p2;
wire   [63:0] xor_ln105_47_fu_561_p2;
wire   [0:0] carry_fu_567_p3;
wire   [31:0] tmp_s_fu_579_p4;
wire   [63:0] or_ln20_fu_589_p3;
wire   [63:0] zext_ln105_108_fu_575_p1;
wire   [63:0] xor_ln147_fu_626_p2;
wire   [63:0] xor_ln147_28_fu_630_p2;
wire   [0:0] bit_sel_fu_640_p3;
wire   [0:0] xor_ln147_29_fu_647_p2;
wire   [62:0] trunc_ln147_fu_653_p1;
wire   [63:0] xor_ln147_s_fu_656_p3;
wire   [63:0] or_ln147_fu_634_p2;
wire   [63:0] xor_ln147_30_fu_669_p2;
wire   [63:0] and_ln147_fu_664_p2;
wire   [63:0] or_ln147_13_fu_674_p2;
wire   [0:0] tmp_fu_680_p3;
wire   [3:0] zext_ln148_fu_688_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 v_114_fu_98 = 64'd0;
#0 j_fu_102 = 4'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln144_fu_224_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_102 <= add_ln144_fu_230_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_102 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            v_114_fu_98 <= v_017;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            v_114_fu_98 <= v_150_fu_537_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln105_reg_855 <= add_ln105_fu_475_p2;
        add_ln133_reg_865[63 : 32] <= add_ln133_fu_525_p2[63 : 32];
        add_ln133_reg_865_pp0_iter8_reg[63 : 32] <= add_ln133_reg_865[63 : 32];
        ah_reg_768 <= {{a_q0[63:32]}};
        al_reg_758 <= al_fu_292_p1;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        bh_reg_773 <= {{coeff_q0[63:32]}};
        bl_reg_763 <= bl_fu_296_p1;
        icmp_ln144_reg_744_pp0_iter2_reg <= icmp_ln144_reg_744_pp0_iter1_reg;
        icmp_ln144_reg_744_pp0_iter3_reg <= icmp_ln144_reg_744_pp0_iter2_reg;
        icmp_ln144_reg_744_pp0_iter4_reg <= icmp_ln144_reg_744_pp0_iter3_reg;
        icmp_ln144_reg_744_pp0_iter5_reg <= icmp_ln144_reg_744_pp0_iter4_reg;
        icmp_ln144_reg_744_pp0_iter6_reg <= icmp_ln144_reg_744_pp0_iter5_reg;
        icmp_ln144_reg_744_pp0_iter7_reg <= icmp_ln144_reg_744_pp0_iter6_reg;
        tempReg_reg_870 <= tempReg_fu_596_p2;
        tempReg_reg_870_pp0_iter8_reg <= tempReg_reg_870;
        tmp_277_reg_823 <= {{grp_fu_476_p_dout0[63:32]}};
        tmp_278_reg_844 <= {{temp_fu_415_p2[33:32]}};
        tmp_279_reg_828 <= {{grp_fu_484_p_dout0[63:32]}};
        tmp_279_reg_828_pp0_iter5_reg <= tmp_279_reg_828;
        tmp_280_reg_834 <= {{grp_fu_480_p_dout0[63:32]}};
        tmp_280_reg_834_pp0_iter5_reg <= tmp_280_reg_834;
        tmp_281_reg_839 <= {{grp_fu_488_p_dout0[63:32]}};
        tmp_281_reg_839_pp0_iter5_reg <= tmp_281_reg_839;
        tmp_281_reg_839_pp0_iter6_reg <= tmp_281_reg_839_pp0_iter5_reg;
        tmp_282_reg_860 <= {{temp_52_fu_481_p2[33:32]}};
        trunc_ln106_159_reg_807 <= trunc_ln106_159_fu_344_p1;
        trunc_ln106_160_reg_812 <= trunc_ln106_160_fu_348_p1;
        trunc_ln106_161_reg_817 <= trunc_ln106_161_fu_352_p1;
        trunc_ln106_161_reg_817_pp0_iter5_reg <= trunc_ln106_161_reg_817;
        trunc_ln106_reg_802 <= trunc_ln106_fu_340_p1;
        trunc_ln106_reg_802_pp0_iter5_reg <= trunc_ln106_reg_802;
        trunc_ln106_reg_802_pp0_iter6_reg <= trunc_ln106_reg_802_pp0_iter5_reg;
        trunc_ln125_reg_849 <= trunc_ln125_fu_431_p1;
        trunc_ln125_reg_849_pp0_iter6_reg <= trunc_ln125_reg_849;
        u_86_out_load_reg_879 <= u_86_out_i;
        v_reg_884 <= v_fu_611_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_cast_reg_733[2 : 0] <= i_cast_fu_191_p1[2 : 0];
        icmp_ln144_reg_744 <= icmp_ln144_fu_224_p2;
        icmp_ln144_reg_744_pp0_iter1_reg <= icmp_ln144_reg_744;
        j_28_reg_738 <= ap_sig_allocacmp_j_28;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_ce0_local = 1'b1;
    end else begin
        a_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln144_fu_224_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_28 = 4'd0;
    end else begin
        ap_sig_allocacmp_j_28 = j_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        coeff_ce0_local = 1'b1;
    end else begin
        coeff_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_out_o = 4'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            t_out_o = u_fu_692_p2;
        end else begin
            t_out_o = t_out_i;
        end
    end else begin
        t_out_o = t_out_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        t_out_o_ap_vld = 1'b1;
    end else begin
        t_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            u_86_out_o = zext_ln143_cast_fu_195_p1;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            u_86_out_o = v_fu_611_p2;
        end else begin
            u_86_out_o = u_86_out_i;
        end
    end else begin
        u_86_out_o = u_86_out_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
        u_86_out_o_ap_vld = 1'b1;
    end else begin
        u_86_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln144_reg_744_pp0_iter7_reg == 1'd1))) begin
        v_114_out_ap_vld = 1'b1;
    end else begin
        v_114_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_address0 = zext_ln145_fu_251_p1;

assign a_ce0 = a_ce0_local;

assign add_ln105_fu_475_p2 = (trunc_ln130_fu_467_p1 + add_ln130_121_fu_447_p2);

assign add_ln123_fu_405_p2 = (zext_ln123_fu_399_p1 + zext_ln123_97_fu_402_p1);

assign add_ln130_121_fu_447_p2 = (trunc_ln106_161_reg_817_pp0_iter5_reg + tmp_279_reg_828_pp0_iter5_reg);

assign add_ln130_122_fu_461_p2 = (zext_ln106_126_fu_441_p1 + zext_ln106_124_fu_435_p1);

assign add_ln130_fu_451_p2 = (zext_ln130_fu_444_p1 + zext_ln106_125_fu_438_p1);

assign add_ln133_fu_525_p2 = (zext_ln133_fu_521_p1 + and_ln_fu_507_p3);

assign add_ln144_fu_230_p2 = (ap_sig_allocacmp_j_28 + 4'd1);

assign add_ln145_fu_272_p2 = ($signed(sext_ln145_fu_268_p1) + $signed(b));

assign al_fu_292_p1 = a_q0[31:0];

assign and_ln133_s_fu_514_p3 = {{tmp_282_reg_860}, {32'd0}};

assign and_ln147_fu_664_p2 = (xor_ln147_s_fu_656_p3 & add_ln133_reg_865_pp0_iter8_reg);

assign and_ln_fu_507_p3 = {{tmp_281_reg_839_pp0_iter6_reg}, {32'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bit_sel_fu_640_p3 = tempReg_reg_870_pp0_iter8_reg[64'd63];

assign bl_fu_296_p1 = coeff_q0[31:0];

assign carry_fu_567_p3 = xor_ln105_47_fu_561_p2[32'd63];

assign coeff_address0 = zext_ln145_16_fu_287_p1;

assign coeff_ce0 = coeff_ce0_local;

assign grp_fu_476_p_ce = 1'b1;

assign grp_fu_476_p_din0 = zext_ln105_107_fu_330_p1;

assign grp_fu_476_p_din1 = zext_ln105_fu_320_p1;

assign grp_fu_480_p_ce = 1'b1;

assign grp_fu_480_p_din0 = zext_ln112_fu_335_p1;

assign grp_fu_480_p_din1 = zext_ln105_fu_320_p1;

assign grp_fu_484_p_ce = 1'b1;

assign grp_fu_484_p_din0 = zext_ln105_107_fu_330_p1;

assign grp_fu_484_p_din1 = zext_ln110_fu_325_p1;

assign grp_fu_488_p_ce = 1'b1;

assign grp_fu_488_p_din0 = zext_ln112_fu_335_p1;

assign grp_fu_488_p_din1 = zext_ln110_fu_325_p1;

assign i_cast_fu_191_p1 = i;

assign icmp_ln144_fu_224_p2 = ((ap_sig_allocacmp_j_28 == indvars_iv31) ? 1'b1 : 1'b0);

assign lshr_ln_fu_277_p4 = {{add_ln145_fu_272_p2[8:3]}};

assign or_ln105_fu_555_p2 = (xor_ln105_fu_543_p2 | xor_ln105_46_fu_549_p2);

assign or_ln147_13_fu_674_p2 = (xor_ln147_30_fu_669_p2 | and_ln147_fu_664_p2);

assign or_ln147_fu_634_p2 = (xor_ln147_fu_626_p2 | xor_ln147_28_fu_630_p2);

assign or_ln20_fu_589_p3 = {{tmp_s_fu_579_p4}, {add_ln105_reg_855}};

assign or_ln_fu_531_p3 = {{trunc_ln125_reg_849_pp0_iter6_reg}, {trunc_ln106_reg_802_pp0_iter6_reg}};

assign sext_ln145_fu_268_p1 = $signed(tmp_276_fu_260_p3);

assign shl_ln_fu_500_p3 = {{trunc_ln125_reg_849_pp0_iter6_reg}, {32'd0}};

assign sub_ln145_fu_256_p2 = (i_cast_reg_733 - j_28_reg_738);

assign tempReg_fu_596_p2 = (or_ln20_fu_589_p3 + zext_ln105_108_fu_575_p1);

assign temp_52_fu_481_p2 = (zext_ln130_98_fu_471_p1 + zext_ln130_97_fu_457_p1);

assign temp_fu_415_p2 = (zext_ln123_98_fu_411_p1 + zext_ln106_fu_396_p1);

assign tmp_275_fu_244_p3 = {{a_offset}, {trunc_ln145_fu_241_p1}};

assign tmp_276_fu_260_p3 = {{sub_ln145_fu_256_p2}, {3'd0}};

assign tmp_fu_680_p3 = or_ln147_13_fu_674_p2[32'd63];

assign tmp_s_fu_579_p4 = {{add_ln133_fu_525_p2[63:32]}};

assign trunc_ln106_159_fu_344_p1 = grp_fu_480_p_dout0[31:0];

assign trunc_ln106_160_fu_348_p1 = grp_fu_484_p_dout0[31:0];

assign trunc_ln106_161_fu_352_p1 = grp_fu_488_p_dout0[31:0];

assign trunc_ln106_fu_340_p1 = grp_fu_476_p_dout0[31:0];

assign trunc_ln125_fu_431_p1 = temp_fu_415_p2[31:0];

assign trunc_ln130_fu_467_p1 = add_ln130_122_fu_461_p2[31:0];

assign trunc_ln145_fu_241_p1 = j_28_reg_738[2:0];

assign trunc_ln147_fu_653_p1 = tempReg_reg_870_pp0_iter8_reg[62:0];

assign u_fu_692_p2 = (zext_ln148_fu_688_p1 + t_out_i);

assign v_114_out = v_114_fu_98;

assign v_150_fu_537_p2 = (or_ln_fu_531_p3 + v_114_fu_98);

assign v_fu_611_p2 = (tempReg_reg_870 + u_86_out_i);

assign xor_ln105_46_fu_549_p2 = (v_114_fu_98 ^ shl_ln_fu_500_p3);

assign xor_ln105_47_fu_561_p2 = (v_150_fu_537_p2 ^ or_ln105_fu_555_p2);

assign xor_ln105_fu_543_p2 = (v_150_fu_537_p2 ^ shl_ln_fu_500_p3);

assign xor_ln147_28_fu_630_p2 = (u_86_out_load_reg_879 ^ tempReg_reg_870_pp0_iter8_reg);

assign xor_ln147_29_fu_647_p2 = (bit_sel_fu_640_p3 ^ 1'd1);

assign xor_ln147_30_fu_669_p2 = (v_reg_884 ^ or_ln147_fu_634_p2);

assign xor_ln147_fu_626_p2 = (v_reg_884 ^ tempReg_reg_870_pp0_iter8_reg);

assign xor_ln147_s_fu_656_p3 = {{xor_ln147_29_fu_647_p2}, {trunc_ln147_fu_653_p1}};

assign zext_ln105_107_fu_330_p1 = bl_reg_763;

assign zext_ln105_108_fu_575_p1 = carry_fu_567_p3;

assign zext_ln105_fu_320_p1 = al_reg_758;

assign zext_ln106_124_fu_435_p1 = tmp_278_reg_844;

assign zext_ln106_125_fu_438_p1 = tmp_279_reg_828_pp0_iter5_reg;

assign zext_ln106_126_fu_441_p1 = tmp_280_reg_834_pp0_iter5_reg;

assign zext_ln106_fu_396_p1 = tmp_277_reg_823;

assign zext_ln110_fu_325_p1 = ah_reg_768;

assign zext_ln112_fu_335_p1 = bh_reg_773;

assign zext_ln123_97_fu_402_p1 = trunc_ln106_159_reg_807;

assign zext_ln123_98_fu_411_p1 = add_ln123_fu_405_p2;

assign zext_ln123_fu_399_p1 = trunc_ln106_160_reg_812;

assign zext_ln130_97_fu_457_p1 = add_ln130_fu_451_p2;

assign zext_ln130_98_fu_471_p1 = add_ln130_122_fu_461_p2;

assign zext_ln130_fu_444_p1 = trunc_ln106_161_reg_817_pp0_iter5_reg;

assign zext_ln133_fu_521_p1 = and_ln133_s_fu_514_p3;

assign zext_ln143_cast_fu_195_p1 = zext_ln143;

assign zext_ln145_16_fu_287_p1 = lshr_ln_fu_277_p4;

assign zext_ln145_fu_251_p1 = tmp_275_fu_244_p3;

assign zext_ln148_fu_688_p1 = tmp_fu_680_p3;

always @ (posedge ap_clk) begin
    i_cast_reg_733[3] <= 1'b0;
    add_ln133_reg_865[31:0] <= 32'b00000000000000000000000000000000;
    add_ln133_reg_865_pp0_iter8_reg[31:0] <= 32'b00000000000000000000000000000000;
end

endmodule //sikep503_kem_enc_hw_mp_mul_2_Pipeline_VITIS_LOOP_144_2
