-- ==============================================================
-- Generated by Vitis HLS v2024.2.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sikep503_kem_enc_hw_EphemeralSecretAgreement_A_1_Outline_VITIS_LOOP_261_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    npts_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    pts_X_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    pts_X_ce0 : OUT STD_LOGIC;
    pts_X_we0 : OUT STD_LOGIC;
    pts_X_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    pts_X_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    pts_X_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    pts_X_ce1 : OUT STD_LOGIC;
    pts_X_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    pts_Z_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    pts_Z_ce0 : OUT STD_LOGIC;
    pts_Z_we0 : OUT STD_LOGIC;
    pts_Z_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    pts_Z_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    pts_Z_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    pts_Z_ce1 : OUT STD_LOGIC;
    pts_Z_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    coeff_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    coeff_ce0 : OUT STD_LOGIC;
    coeff_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    coeff_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    coeff_ce1 : OUT STD_LOGIC;
    coeff_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of sikep503_kem_enc_hw_EphemeralSecretAgreement_A_1_Outline_VITIS_LOOP_261_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (32 downto 0) := "000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (32 downto 0) := "000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (32 downto 0) := "000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (32 downto 0) := "000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (32 downto 0) := "000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (32 downto 0) := "000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (32 downto 0) := "000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (32 downto 0) := "000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (32 downto 0) := "000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (32 downto 0) := "001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (32 downto 0) := "010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (32 downto 0) := "100000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv9_80 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_boolean_0 : BOOLEAN := false;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_reg_282 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal t1_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal t1_ce0 : STD_LOGIC;
    signal t1_we0 : STD_LOGIC;
    signal t1_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal t1_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal t1_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal t1_ce1 : STD_LOGIC;
    signal t1_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal t0_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal t0_ce0 : STD_LOGIC;
    signal t0_we0 : STD_LOGIC;
    signal t0_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal t0_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal t0_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal t0_ce1 : STD_LOGIC;
    signal t0_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fpadd503_150_fu_74_ap_start : STD_LOGIC;
    signal grp_fpadd503_150_fu_74_ap_done : STD_LOGIC;
    signal grp_fpadd503_150_fu_74_ap_idle : STD_LOGIC;
    signal grp_fpadd503_150_fu_74_ap_ready : STD_LOGIC;
    signal grp_fpadd503_150_fu_74_a_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fpadd503_150_fu_74_a_ce0 : STD_LOGIC;
    signal grp_fpadd503_150_fu_74_a_offset2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fpadd503_150_fu_74_b_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fpadd503_150_fu_74_b_ce0 : STD_LOGIC;
    signal grp_fpadd503_150_fu_74_b_offset4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fpadd503_150_fu_74_c_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fpadd503_150_fu_74_c_ce0 : STD_LOGIC;
    signal grp_fpadd503_150_fu_74_c_we0 : STD_LOGIC;
    signal grp_fpadd503_150_fu_74_c_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fpadd503_150_fu_74_c_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fpadd503_150_fu_74_c_ce1 : STD_LOGIC;
    signal grp_fpadd503_150_fu_74_c_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fpadd503_150_fu_74_c_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fpsub503_144_fu_96_ap_start : STD_LOGIC;
    signal grp_fpsub503_144_fu_96_ap_done : STD_LOGIC;
    signal grp_fpsub503_144_fu_96_ap_idle : STD_LOGIC;
    signal grp_fpsub503_144_fu_96_ap_ready : STD_LOGIC;
    signal grp_fpsub503_144_fu_96_a_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fpsub503_144_fu_96_a_ce0 : STD_LOGIC;
    signal grp_fpsub503_144_fu_96_a_offset2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fpsub503_144_fu_96_b_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fpsub503_144_fu_96_b_ce0 : STD_LOGIC;
    signal grp_fpsub503_144_fu_96_b_offset4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fpsub503_144_fu_96_c_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fpsub503_144_fu_96_c_ce0 : STD_LOGIC;
    signal grp_fpsub503_144_fu_96_c_we0 : STD_LOGIC;
    signal grp_fpsub503_144_fu_96_c_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fpsub503_144_fu_96_c_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fpsub503_144_fu_96_c_ce1 : STD_LOGIC;
    signal grp_fpsub503_144_fu_96_c_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fp2mul503_mont_78_fu_118_ap_start : STD_LOGIC;
    signal grp_fp2mul503_mont_78_fu_118_ap_done : STD_LOGIC;
    signal grp_fp2mul503_mont_78_fu_118_ap_idle : STD_LOGIC;
    signal grp_fp2mul503_mont_78_fu_118_ap_ready : STD_LOGIC;
    signal grp_fp2mul503_mont_78_fu_118_a_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fp2mul503_mont_78_fu_118_a_ce0 : STD_LOGIC;
    signal grp_fp2mul503_mont_78_fu_118_a_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp2mul503_mont_78_fu_118_a_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fp2mul503_mont_78_fu_118_a_ce1 : STD_LOGIC;
    signal grp_fp2mul503_mont_78_fu_118_a_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp2mul503_mont_78_fu_118_coeff_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fp2mul503_mont_78_fu_118_coeff_ce0 : STD_LOGIC;
    signal grp_fp2mul503_mont_78_fu_118_coeff_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fp2mul503_mont_78_fu_118_coeff_ce1 : STD_LOGIC;
    signal grp_fp2mul503_mont_78_fu_118_b_offset : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fp2mul503_mont_78_fu_118_c_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fp2mul503_mont_78_fu_118_c_ce0 : STD_LOGIC;
    signal grp_fp2mul503_mont_78_fu_118_c_we0 : STD_LOGIC;
    signal grp_fp2mul503_mont_78_fu_118_c_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp2mul503_mont_78_fu_118_c_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp2mul503_mont_133_2_fu_136_ap_start : STD_LOGIC;
    signal grp_fp2mul503_mont_133_2_fu_136_ap_done : STD_LOGIC;
    signal grp_fp2mul503_mont_133_2_fu_136_ap_idle : STD_LOGIC;
    signal grp_fp2mul503_mont_133_2_fu_136_ap_ready : STD_LOGIC;
    signal grp_fp2mul503_mont_133_2_fu_136_c_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fp2mul503_mont_133_2_fu_136_c_ce0 : STD_LOGIC;
    signal grp_fp2mul503_mont_133_2_fu_136_c_we0 : STD_LOGIC;
    signal grp_fp2mul503_mont_133_2_fu_136_c_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp2mul503_mont_133_2_fu_136_c_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fp2mul503_mont_133_2_fu_136_c_ce1 : STD_LOGIC;
    signal grp_fp2mul503_mont_133_2_fu_136_b_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fp2mul503_mont_133_2_fu_136_b_ce0 : STD_LOGIC;
    signal grp_fp2mul503_mont_133_2_fu_136_b_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fp2mul503_mont_133_2_fu_136_b_ce1 : STD_LOGIC;
    signal grp_fp2mul503_mont_7_fu_146_ap_start : STD_LOGIC;
    signal grp_fp2mul503_mont_7_fu_146_ap_done : STD_LOGIC;
    signal grp_fp2mul503_mont_7_fu_146_ap_idle : STD_LOGIC;
    signal grp_fp2mul503_mont_7_fu_146_ap_ready : STD_LOGIC;
    signal grp_fp2mul503_mont_7_fu_146_c_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fp2mul503_mont_7_fu_146_c_ce0 : STD_LOGIC;
    signal grp_fp2mul503_mont_7_fu_146_c_we0 : STD_LOGIC;
    signal grp_fp2mul503_mont_7_fu_146_c_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp2mul503_mont_7_fu_146_c_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fp2mul503_mont_7_fu_146_c_ce1 : STD_LOGIC;
    signal grp_fp2mul503_mont_7_fu_146_coeff_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fp2mul503_mont_7_fu_146_coeff_ce0 : STD_LOGIC;
    signal grp_fp2mul503_mont_7_fu_146_coeff_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fp2mul503_mont_7_fu_146_coeff_ce1 : STD_LOGIC;
    signal grp_fpsub503_144_275_fu_157_ap_start : STD_LOGIC;
    signal grp_fpsub503_144_275_fu_157_ap_done : STD_LOGIC;
    signal grp_fpsub503_144_275_fu_157_ap_idle : STD_LOGIC;
    signal grp_fpsub503_144_275_fu_157_ap_ready : STD_LOGIC;
    signal grp_fpsub503_144_275_fu_157_a_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fpsub503_144_275_fu_157_a_ce0 : STD_LOGIC;
    signal grp_fpsub503_144_275_fu_157_a_offset2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fpsub503_144_275_fu_157_c_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fpsub503_144_275_fu_157_c_ce0 : STD_LOGIC;
    signal grp_fpsub503_144_275_fu_157_c_we0 : STD_LOGIC;
    signal grp_fpsub503_144_275_fu_157_c_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fpsub503_144_275_fu_157_c_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fpsub503_144_275_fu_157_c_ce1 : STD_LOGIC;
    signal grp_fpsub503_144_275_fu_157_c_offset4 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fp2sqr503_mont_136_2_fu_175_ap_start : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_2_fu_175_ap_done : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_2_fu_175_ap_idle : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_2_fu_175_ap_ready : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_2_fu_175_c_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fp2sqr503_mont_136_2_fu_175_c_ce0 : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_2_fu_175_c_we0 : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_2_fu_175_c_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp2sqr503_mont_136_2_fu_175_c_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fp2sqr503_mont_136_2_fu_175_c_ce1 : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_1_fu_184_ap_start : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_1_fu_184_ap_done : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_1_fu_184_ap_idle : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_1_fu_184_ap_ready : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_1_fu_184_c_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fp2sqr503_mont_136_1_fu_184_c_ce0 : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_1_fu_184_c_we0 : STD_LOGIC;
    signal grp_fp2sqr503_mont_136_1_fu_184_c_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp2sqr503_mont_136_1_fu_184_c_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fp2sqr503_mont_136_1_fu_184_c_ce1 : STD_LOGIC;
    signal grp_fpadd503_149_fu_195_ap_start : STD_LOGIC;
    signal grp_fpadd503_149_fu_195_ap_done : STD_LOGIC;
    signal grp_fpadd503_149_fu_195_ap_idle : STD_LOGIC;
    signal grp_fpadd503_149_fu_195_ap_ready : STD_LOGIC;
    signal grp_fpadd503_149_fu_195_a_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fpadd503_149_fu_195_a_ce0 : STD_LOGIC;
    signal grp_fpadd503_149_fu_195_a_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fpadd503_149_fu_195_b_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fpadd503_149_fu_195_b_ce0 : STD_LOGIC;
    signal grp_fpadd503_149_fu_195_b_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fpadd503_149_fu_195_c_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fpadd503_149_fu_195_c_ce0 : STD_LOGIC;
    signal grp_fpadd503_149_fu_195_c_we0 : STD_LOGIC;
    signal grp_fpadd503_149_fu_195_c_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fpadd503_149_fu_195_c_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fpadd503_149_fu_195_c_ce1 : STD_LOGIC;
    signal grp_fpadd503_149_fu_195_c_offset2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fpsub503_144_1_fu_215_ap_start : STD_LOGIC;
    signal grp_fpsub503_144_1_fu_215_ap_done : STD_LOGIC;
    signal grp_fpsub503_144_1_fu_215_ap_idle : STD_LOGIC;
    signal grp_fpsub503_144_1_fu_215_ap_ready : STD_LOGIC;
    signal grp_fpsub503_144_1_fu_215_a_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fpsub503_144_1_fu_215_a_ce0 : STD_LOGIC;
    signal grp_fpsub503_144_1_fu_215_a_offset2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fpsub503_144_1_fu_215_c_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fpsub503_144_1_fu_215_c_ce0 : STD_LOGIC;
    signal grp_fpsub503_144_1_fu_215_c_we0 : STD_LOGIC;
    signal grp_fpsub503_144_1_fu_215_c_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fpsub503_144_1_fu_215_c_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fpsub503_144_1_fu_215_c_ce1 : STD_LOGIC;
    signal grp_fpsub503_144_1_fu_215_c_offset : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fp2mul503_mont_133_1_fu_231_ap_start : STD_LOGIC;
    signal grp_fp2mul503_mont_133_1_fu_231_ap_done : STD_LOGIC;
    signal grp_fp2mul503_mont_133_1_fu_231_ap_idle : STD_LOGIC;
    signal grp_fp2mul503_mont_133_1_fu_231_ap_ready : STD_LOGIC;
    signal grp_fp2mul503_mont_133_1_fu_231_c_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fp2mul503_mont_133_1_fu_231_c_ce0 : STD_LOGIC;
    signal grp_fp2mul503_mont_133_1_fu_231_c_we0 : STD_LOGIC;
    signal grp_fp2mul503_mont_133_1_fu_231_c_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp2mul503_mont_133_1_fu_231_c_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp2mul503_mont_133_1_fu_231_c_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fp2mul503_mont_133_1_fu_231_c_ce1 : STD_LOGIC;
    signal grp_fp2mul503_mont_133_1_fu_231_c_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp2mul503_mont_133_1_fu_231_b_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fp2mul503_mont_133_1_fu_231_b_ce0 : STD_LOGIC;
    signal grp_fp2mul503_mont_133_1_fu_231_b_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fp2mul503_mont_133_1_fu_231_b_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_fp2mul503_mont_133_1_fu_231_b_ce1 : STD_LOGIC;
    signal grp_fp2mul503_mont_133_1_fu_231_b_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_fpadd503_150_fu_74_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln261_fu_254_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_fpsub503_144_fu_96_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_fp2mul503_mont_78_fu_118_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_fp2mul503_mont_133_2_fu_136_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_fp2mul503_mont_7_fu_146_ap_start_reg : STD_LOGIC := '0';
    signal grp_fpsub503_144_275_fu_157_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_fp2sqr503_mont_136_2_fu_175_ap_start_reg : STD_LOGIC := '0';
    signal grp_fp2sqr503_mont_136_1_fu_184_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_fpadd503_149_fu_195_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_fpsub503_144_1_fu_215_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal grp_fp2mul503_mont_133_1_fu_231_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal i_284_fu_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal add_ln261_fu_259_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_block_state21_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_block_state25_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_block_state29_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sikep503_kem_enc_hw_fpadd503_150 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        a_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        a_offset2 : IN STD_LOGIC_VECTOR (0 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        b_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        b_offset4 : IN STD_LOGIC_VECTOR (0 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        c_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        c_ce1 : OUT STD_LOGIC;
        c_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_offset : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component sikep503_kem_enc_hw_fpsub503_144 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        a_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        a_offset2 : IN STD_LOGIC_VECTOR (0 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        b_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        b_offset4 : IN STD_LOGIC_VECTOR (0 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        c_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        c_ce1 : OUT STD_LOGIC;
        c_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_offset : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component sikep503_kem_enc_hw_fp2mul503_mont_78 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        a_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        a_ce1 : OUT STD_LOGIC;
        a_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        coeff_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        coeff_ce0 : OUT STD_LOGIC;
        coeff_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        coeff_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        coeff_ce1 : OUT STD_LOGIC;
        coeff_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        b_offset : IN STD_LOGIC_VECTOR (8 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        c_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_offset : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sikep503_kem_enc_hw_fp2mul503_mont_133_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        c_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        c_ce1 : OUT STD_LOGIC;
        c_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        b_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        b_ce1 : OUT STD_LOGIC;
        b_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sikep503_kem_enc_hw_fp2mul503_mont_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        c_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        c_ce1 : OUT STD_LOGIC;
        c_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        coeff_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        coeff_ce0 : OUT STD_LOGIC;
        coeff_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        coeff_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        coeff_ce1 : OUT STD_LOGIC;
        coeff_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sikep503_kem_enc_hw_fpsub503_144_275 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        a_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        a_offset2 : IN STD_LOGIC_VECTOR (0 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        c_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        c_ce1 : OUT STD_LOGIC;
        c_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        c_offset4 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component sikep503_kem_enc_hw_fp2sqr503_mont_136_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        c_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        c_ce1 : OUT STD_LOGIC;
        c_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sikep503_kem_enc_hw_fp2sqr503_mont_136_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        c_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        c_ce1 : OUT STD_LOGIC;
        c_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_offset : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sikep503_kem_enc_hw_fpadd503_149 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        a_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        b_offset : IN STD_LOGIC_VECTOR (0 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        c_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        c_ce1 : OUT STD_LOGIC;
        c_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        c_offset2 : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component sikep503_kem_enc_hw_fpsub503_144_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        a_ce0 : OUT STD_LOGIC;
        a_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        a_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        a_offset2 : IN STD_LOGIC_VECTOR (0 downto 0);
        c_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        c_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        c_ce1 : OUT STD_LOGIC;
        c_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_offset : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component sikep503_kem_enc_hw_fp2mul503_mont_133_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        c_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        c_ce0 : OUT STD_LOGIC;
        c_we0 : OUT STD_LOGIC;
        c_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        c_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        c_ce1 : OUT STD_LOGIC;
        c_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        c_offset : IN STD_LOGIC_VECTOR (31 downto 0);
        b_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        b_ce0 : OUT STD_LOGIC;
        b_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        b_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        b_ce1 : OUT STD_LOGIC;
        b_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sikep503_kem_enc_hw_EphemeralSecretAgreement_A_1_Outline_VITIS_LOOP_261_3_t1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    t1_U : component sikep503_kem_enc_hw_EphemeralSecretAgreement_A_1_Outline_VITIS_LOOP_261_3_t1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t1_address0,
        ce0 => t1_ce0,
        we0 => t1_we0,
        d0 => t1_d0,
        q0 => t1_q0,
        address1 => t1_address1,
        ce1 => t1_ce1,
        q1 => t1_q1);

    t0_U : component sikep503_kem_enc_hw_EphemeralSecretAgreement_A_1_Outline_VITIS_LOOP_261_3_t1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t0_address0,
        ce0 => t0_ce0,
        we0 => t0_we0,
        d0 => t0_d0,
        q0 => t0_q0,
        address1 => t0_address1,
        ce1 => t0_ce1,
        q1 => t0_q1);

    grp_fpadd503_150_fu_74 : component sikep503_kem_enc_hw_fpadd503_150
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fpadd503_150_fu_74_ap_start,
        ap_done => grp_fpadd503_150_fu_74_ap_done,
        ap_idle => grp_fpadd503_150_fu_74_ap_idle,
        ap_ready => grp_fpadd503_150_fu_74_ap_ready,
        a_address0 => grp_fpadd503_150_fu_74_a_address0,
        a_ce0 => grp_fpadd503_150_fu_74_a_ce0,
        a_q0 => pts_X_q0,
        a_offset => i_reg_282,
        a_offset2 => grp_fpadd503_150_fu_74_a_offset2,
        b_address0 => grp_fpadd503_150_fu_74_b_address0,
        b_ce0 => grp_fpadd503_150_fu_74_b_ce0,
        b_q0 => pts_Z_q0,
        b_offset => i_reg_282,
        b_offset4 => grp_fpadd503_150_fu_74_b_offset4,
        c_address0 => grp_fpadd503_150_fu_74_c_address0,
        c_ce0 => grp_fpadd503_150_fu_74_c_ce0,
        c_we0 => grp_fpadd503_150_fu_74_c_we0,
        c_d0 => grp_fpadd503_150_fu_74_c_d0,
        c_address1 => grp_fpadd503_150_fu_74_c_address1,
        c_ce1 => grp_fpadd503_150_fu_74_c_ce1,
        c_q1 => grp_fpadd503_150_fu_74_c_q1,
        c_offset => grp_fpadd503_150_fu_74_c_offset);

    grp_fpsub503_144_fu_96 : component sikep503_kem_enc_hw_fpsub503_144
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fpsub503_144_fu_96_ap_start,
        ap_done => grp_fpsub503_144_fu_96_ap_done,
        ap_idle => grp_fpsub503_144_fu_96_ap_idle,
        ap_ready => grp_fpsub503_144_fu_96_ap_ready,
        a_address0 => grp_fpsub503_144_fu_96_a_address0,
        a_ce0 => grp_fpsub503_144_fu_96_a_ce0,
        a_q0 => pts_X_q0,
        a_offset => i_reg_282,
        a_offset2 => grp_fpsub503_144_fu_96_a_offset2,
        b_address0 => grp_fpsub503_144_fu_96_b_address0,
        b_ce0 => grp_fpsub503_144_fu_96_b_ce0,
        b_q0 => pts_Z_q0,
        b_offset => i_reg_282,
        b_offset4 => grp_fpsub503_144_fu_96_b_offset4,
        c_address0 => grp_fpsub503_144_fu_96_c_address0,
        c_ce0 => grp_fpsub503_144_fu_96_c_ce0,
        c_we0 => grp_fpsub503_144_fu_96_c_we0,
        c_d0 => grp_fpsub503_144_fu_96_c_d0,
        c_address1 => grp_fpsub503_144_fu_96_c_address1,
        c_ce1 => grp_fpsub503_144_fu_96_c_ce1,
        c_q1 => t1_q1,
        c_offset => grp_fpsub503_144_fu_96_c_offset);

    grp_fp2mul503_mont_78_fu_118 : component sikep503_kem_enc_hw_fp2mul503_mont_78
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fp2mul503_mont_78_fu_118_ap_start,
        ap_done => grp_fp2mul503_mont_78_fu_118_ap_done,
        ap_idle => grp_fp2mul503_mont_78_fu_118_ap_idle,
        ap_ready => grp_fp2mul503_mont_78_fu_118_ap_ready,
        a_address0 => grp_fp2mul503_mont_78_fu_118_a_address0,
        a_ce0 => grp_fp2mul503_mont_78_fu_118_a_ce0,
        a_q0 => grp_fp2mul503_mont_78_fu_118_a_q0,
        a_address1 => grp_fp2mul503_mont_78_fu_118_a_address1,
        a_ce1 => grp_fp2mul503_mont_78_fu_118_a_ce1,
        a_q1 => grp_fp2mul503_mont_78_fu_118_a_q1,
        coeff_address0 => grp_fp2mul503_mont_78_fu_118_coeff_address0,
        coeff_ce0 => grp_fp2mul503_mont_78_fu_118_coeff_ce0,
        coeff_q0 => coeff_q0,
        coeff_address1 => grp_fp2mul503_mont_78_fu_118_coeff_address1,
        coeff_ce1 => grp_fp2mul503_mont_78_fu_118_coeff_ce1,
        coeff_q1 => coeff_q1,
        b_offset => grp_fp2mul503_mont_78_fu_118_b_offset,
        c_address0 => grp_fp2mul503_mont_78_fu_118_c_address0,
        c_ce0 => grp_fp2mul503_mont_78_fu_118_c_ce0,
        c_we0 => grp_fp2mul503_mont_78_fu_118_c_we0,
        c_d0 => grp_fp2mul503_mont_78_fu_118_c_d0,
        c_q0 => grp_fp2mul503_mont_78_fu_118_c_q0,
        c_offset => i_reg_282);

    grp_fp2mul503_mont_133_2_fu_136 : component sikep503_kem_enc_hw_fp2mul503_mont_133_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fp2mul503_mont_133_2_fu_136_ap_start,
        ap_done => grp_fp2mul503_mont_133_2_fu_136_ap_done,
        ap_idle => grp_fp2mul503_mont_133_2_fu_136_ap_idle,
        ap_ready => grp_fp2mul503_mont_133_2_fu_136_ap_ready,
        c_address0 => grp_fp2mul503_mont_133_2_fu_136_c_address0,
        c_ce0 => grp_fp2mul503_mont_133_2_fu_136_c_ce0,
        c_we0 => grp_fp2mul503_mont_133_2_fu_136_c_we0,
        c_d0 => grp_fp2mul503_mont_133_2_fu_136_c_d0,
        c_q0 => t0_q0,
        c_address1 => grp_fp2mul503_mont_133_2_fu_136_c_address1,
        c_ce1 => grp_fp2mul503_mont_133_2_fu_136_c_ce1,
        c_q1 => t0_q1,
        b_address0 => grp_fp2mul503_mont_133_2_fu_136_b_address0,
        b_ce0 => grp_fp2mul503_mont_133_2_fu_136_b_ce0,
        b_q0 => t1_q0,
        b_address1 => grp_fp2mul503_mont_133_2_fu_136_b_address1,
        b_ce1 => grp_fp2mul503_mont_133_2_fu_136_b_ce1,
        b_q1 => t1_q1);

    grp_fp2mul503_mont_7_fu_146 : component sikep503_kem_enc_hw_fp2mul503_mont_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fp2mul503_mont_7_fu_146_ap_start,
        ap_done => grp_fp2mul503_mont_7_fu_146_ap_done,
        ap_idle => grp_fp2mul503_mont_7_fu_146_ap_idle,
        ap_ready => grp_fp2mul503_mont_7_fu_146_ap_ready,
        c_address0 => grp_fp2mul503_mont_7_fu_146_c_address0,
        c_ce0 => grp_fp2mul503_mont_7_fu_146_c_ce0,
        c_we0 => grp_fp2mul503_mont_7_fu_146_c_we0,
        c_d0 => grp_fp2mul503_mont_7_fu_146_c_d0,
        c_q0 => t0_q0,
        c_address1 => grp_fp2mul503_mont_7_fu_146_c_address1,
        c_ce1 => grp_fp2mul503_mont_7_fu_146_c_ce1,
        c_q1 => t0_q1,
        coeff_address0 => grp_fp2mul503_mont_7_fu_146_coeff_address0,
        coeff_ce0 => grp_fp2mul503_mont_7_fu_146_coeff_ce0,
        coeff_q0 => coeff_q0,
        coeff_address1 => grp_fp2mul503_mont_7_fu_146_coeff_address1,
        coeff_ce1 => grp_fp2mul503_mont_7_fu_146_coeff_ce1,
        coeff_q1 => coeff_q1);

    grp_fpsub503_144_275_fu_157 : component sikep503_kem_enc_hw_fpsub503_144_275
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fpsub503_144_275_fu_157_ap_start,
        ap_done => grp_fpsub503_144_275_fu_157_ap_done,
        ap_idle => grp_fpsub503_144_275_fu_157_ap_idle,
        ap_ready => grp_fpsub503_144_275_fu_157_ap_ready,
        a_address0 => grp_fpsub503_144_275_fu_157_a_address0,
        a_ce0 => grp_fpsub503_144_275_fu_157_a_ce0,
        a_q0 => pts_X_q0,
        a_offset => i_reg_282,
        a_offset2 => grp_fpsub503_144_275_fu_157_a_offset2,
        c_address0 => grp_fpsub503_144_275_fu_157_c_address0,
        c_ce0 => grp_fpsub503_144_275_fu_157_c_ce0,
        c_we0 => grp_fpsub503_144_275_fu_157_c_we0,
        c_d0 => grp_fpsub503_144_275_fu_157_c_d0,
        c_address1 => grp_fpsub503_144_275_fu_157_c_address1,
        c_ce1 => grp_fpsub503_144_275_fu_157_c_ce1,
        c_q1 => pts_Z_q1,
        c_offset => i_reg_282,
        c_offset4 => grp_fpsub503_144_275_fu_157_c_offset4);

    grp_fp2sqr503_mont_136_2_fu_175 : component sikep503_kem_enc_hw_fp2sqr503_mont_136_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fp2sqr503_mont_136_2_fu_175_ap_start,
        ap_done => grp_fp2sqr503_mont_136_2_fu_175_ap_done,
        ap_idle => grp_fp2sqr503_mont_136_2_fu_175_ap_idle,
        ap_ready => grp_fp2sqr503_mont_136_2_fu_175_ap_ready,
        c_address0 => grp_fp2sqr503_mont_136_2_fu_175_c_address0,
        c_ce0 => grp_fp2sqr503_mont_136_2_fu_175_c_ce0,
        c_we0 => grp_fp2sqr503_mont_136_2_fu_175_c_we0,
        c_d0 => grp_fp2sqr503_mont_136_2_fu_175_c_d0,
        c_q0 => t1_q0,
        c_address1 => grp_fp2sqr503_mont_136_2_fu_175_c_address1,
        c_ce1 => grp_fp2sqr503_mont_136_2_fu_175_c_ce1,
        c_q1 => t1_q1);

    grp_fp2sqr503_mont_136_1_fu_184 : component sikep503_kem_enc_hw_fp2sqr503_mont_136_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fp2sqr503_mont_136_1_fu_184_ap_start,
        ap_done => grp_fp2sqr503_mont_136_1_fu_184_ap_done,
        ap_idle => grp_fp2sqr503_mont_136_1_fu_184_ap_idle,
        ap_ready => grp_fp2sqr503_mont_136_1_fu_184_ap_ready,
        c_address0 => grp_fp2sqr503_mont_136_1_fu_184_c_address0,
        c_ce0 => grp_fp2sqr503_mont_136_1_fu_184_c_ce0,
        c_we0 => grp_fp2sqr503_mont_136_1_fu_184_c_we0,
        c_d0 => grp_fp2sqr503_mont_136_1_fu_184_c_d0,
        c_q0 => pts_Z_q0,
        c_address1 => grp_fp2sqr503_mont_136_1_fu_184_c_address1,
        c_ce1 => grp_fp2sqr503_mont_136_1_fu_184_c_ce1,
        c_q1 => pts_Z_q1,
        c_offset => i_reg_282);

    grp_fpadd503_149_fu_195 : component sikep503_kem_enc_hw_fpadd503_149
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fpadd503_149_fu_195_ap_start,
        ap_done => grp_fpadd503_149_fu_195_ap_done,
        ap_idle => grp_fpadd503_149_fu_195_ap_idle,
        ap_ready => grp_fpadd503_149_fu_195_ap_ready,
        a_address0 => grp_fpadd503_149_fu_195_a_address0,
        a_ce0 => grp_fpadd503_149_fu_195_a_ce0,
        a_q0 => t1_q0,
        a_offset => grp_fpadd503_149_fu_195_a_offset,
        b_address0 => grp_fpadd503_149_fu_195_b_address0,
        b_ce0 => grp_fpadd503_149_fu_195_b_ce0,
        b_q0 => t0_q0,
        b_offset => grp_fpadd503_149_fu_195_b_offset,
        c_address0 => grp_fpadd503_149_fu_195_c_address0,
        c_ce0 => grp_fpadd503_149_fu_195_c_ce0,
        c_we0 => grp_fpadd503_149_fu_195_c_we0,
        c_d0 => grp_fpadd503_149_fu_195_c_d0,
        c_address1 => grp_fpadd503_149_fu_195_c_address1,
        c_ce1 => grp_fpadd503_149_fu_195_c_ce1,
        c_q1 => pts_X_q1,
        c_offset => i_reg_282,
        c_offset2 => grp_fpadd503_149_fu_195_c_offset2);

    grp_fpsub503_144_1_fu_215 : component sikep503_kem_enc_hw_fpsub503_144_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fpsub503_144_1_fu_215_ap_start,
        ap_done => grp_fpsub503_144_1_fu_215_ap_done,
        ap_idle => grp_fpsub503_144_1_fu_215_ap_idle,
        ap_ready => grp_fpsub503_144_1_fu_215_ap_ready,
        a_address0 => grp_fpsub503_144_1_fu_215_a_address0,
        a_ce0 => grp_fpsub503_144_1_fu_215_a_ce0,
        a_q0 => pts_Z_q0,
        a_offset => i_reg_282,
        a_offset2 => grp_fpsub503_144_1_fu_215_a_offset2,
        c_address0 => grp_fpsub503_144_1_fu_215_c_address0,
        c_ce0 => grp_fpsub503_144_1_fu_215_c_ce0,
        c_we0 => grp_fpsub503_144_1_fu_215_c_we0,
        c_d0 => grp_fpsub503_144_1_fu_215_c_d0,
        c_address1 => grp_fpsub503_144_1_fu_215_c_address1,
        c_ce1 => grp_fpsub503_144_1_fu_215_c_ce1,
        c_q1 => t0_q1,
        c_offset => grp_fpsub503_144_1_fu_215_c_offset);

    grp_fp2mul503_mont_133_1_fu_231 : component sikep503_kem_enc_hw_fp2mul503_mont_133_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_fp2mul503_mont_133_1_fu_231_ap_start,
        ap_done => grp_fp2mul503_mont_133_1_fu_231_ap_done,
        ap_idle => grp_fp2mul503_mont_133_1_fu_231_ap_idle,
        ap_ready => grp_fp2mul503_mont_133_1_fu_231_ap_ready,
        c_address0 => grp_fp2mul503_mont_133_1_fu_231_c_address0,
        c_ce0 => grp_fp2mul503_mont_133_1_fu_231_c_ce0,
        c_we0 => grp_fp2mul503_mont_133_1_fu_231_c_we0,
        c_d0 => grp_fp2mul503_mont_133_1_fu_231_c_d0,
        c_q0 => grp_fp2mul503_mont_133_1_fu_231_c_q0,
        c_address1 => grp_fp2mul503_mont_133_1_fu_231_c_address1,
        c_ce1 => grp_fp2mul503_mont_133_1_fu_231_c_ce1,
        c_q1 => grp_fp2mul503_mont_133_1_fu_231_c_q1,
        c_offset => i_reg_282,
        b_address0 => grp_fp2mul503_mont_133_1_fu_231_b_address0,
        b_ce0 => grp_fp2mul503_mont_133_1_fu_231_b_ce0,
        b_q0 => grp_fp2mul503_mont_133_1_fu_231_b_q0,
        b_address1 => grp_fp2mul503_mont_133_1_fu_231_b_address1,
        b_ce1 => grp_fp2mul503_mont_133_1_fu_231_b_ce1,
        b_q1 => grp_fp2mul503_mont_133_1_fu_231_b_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_fp2mul503_mont_133_1_fu_231_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fp2mul503_mont_133_1_fu_231_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                    grp_fp2mul503_mont_133_1_fu_231_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fp2mul503_mont_133_1_fu_231_ap_ready = ap_const_logic_1)) then 
                    grp_fp2mul503_mont_133_1_fu_231_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fp2mul503_mont_133_2_fu_136_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fp2mul503_mont_133_2_fu_136_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_fp2mul503_mont_133_2_fu_136_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fp2mul503_mont_133_2_fu_136_ap_ready = ap_const_logic_1)) then 
                    grp_fp2mul503_mont_133_2_fu_136_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fp2mul503_mont_78_fu_118_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fp2mul503_mont_78_fu_118_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    grp_fp2mul503_mont_78_fu_118_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fp2mul503_mont_78_fu_118_ap_ready = ap_const_logic_1)) then 
                    grp_fp2mul503_mont_78_fu_118_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fp2mul503_mont_7_fu_146_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fp2mul503_mont_7_fu_146_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_fp2mul503_mont_7_fu_146_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fp2mul503_mont_7_fu_146_ap_ready = ap_const_logic_1)) then 
                    grp_fp2mul503_mont_7_fu_146_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fp2sqr503_mont_136_1_fu_184_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fp2sqr503_mont_136_1_fu_184_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    grp_fp2sqr503_mont_136_1_fu_184_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fp2sqr503_mont_136_1_fu_184_ap_ready = ap_const_logic_1)) then 
                    grp_fp2sqr503_mont_136_1_fu_184_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fp2sqr503_mont_136_2_fu_175_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fp2sqr503_mont_136_2_fu_175_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    grp_fp2sqr503_mont_136_2_fu_175_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fp2sqr503_mont_136_2_fu_175_ap_ready = ap_const_logic_1)) then 
                    grp_fp2sqr503_mont_136_2_fu_175_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fpadd503_149_fu_195_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fpadd503_149_fu_195_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                    grp_fpadd503_149_fu_195_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fpadd503_149_fu_195_ap_ready = ap_const_logic_1)) then 
                    grp_fpadd503_149_fu_195_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fpadd503_150_fu_74_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fpadd503_150_fu_74_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state4) or ((icmp_ln261_fu_254_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
                    grp_fpadd503_150_fu_74_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fpadd503_150_fu_74_ap_ready = ap_const_logic_1)) then 
                    grp_fpadd503_150_fu_74_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fpsub503_144_1_fu_215_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fpsub503_144_1_fu_215_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                    grp_fpsub503_144_1_fu_215_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fpsub503_144_1_fu_215_ap_ready = ap_const_logic_1)) then 
                    grp_fpsub503_144_1_fu_215_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fpsub503_144_275_fu_157_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fpsub503_144_275_fu_157_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    grp_fpsub503_144_275_fu_157_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fpsub503_144_275_fu_157_ap_ready = ap_const_logic_1)) then 
                    grp_fpsub503_144_275_fu_157_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fpsub503_144_fu_96_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_fpsub503_144_fu_96_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_fpsub503_144_fu_96_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fpsub503_144_fu_96_ap_ready = ap_const_logic_1)) then 
                    grp_fpsub503_144_fu_96_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_284_fu_56_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_284_fu_56 <= ap_const_lv32_0;
            elsif (((icmp_ln261_fu_254_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_284_fu_56 <= add_ln261_fu_259_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_282 <= i_284_fu_56;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, grp_fpadd503_150_fu_74_ap_done, grp_fpsub503_144_fu_96_ap_done, grp_fp2mul503_mont_78_fu_118_ap_done, grp_fp2mul503_mont_133_2_fu_136_ap_done, grp_fpsub503_144_275_fu_157_ap_done, grp_fpadd503_149_fu_195_ap_done, grp_fpsub503_144_1_fu_215_ap_done, grp_fp2mul503_mont_133_1_fu_231_ap_done, icmp_ln261_fu_254_p2, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state31, ap_CS_fsm_state33, ap_block_state17_on_subcall_done, ap_block_state21_on_subcall_done, ap_block_state25_on_subcall_done, ap_block_state29_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln261_fu_254_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_fpadd503_150_fu_74_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (grp_fpadd503_150_fu_74_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_fpsub503_144_fu_96_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (grp_fpsub503_144_fu_96_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (grp_fp2mul503_mont_78_fu_118_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (grp_fp2mul503_mont_78_fu_118_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_fp2mul503_mont_133_2_fu_136_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state19) and (grp_fpadd503_150_fu_74_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((ap_const_boolean_0 = ap_block_state21_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_fpsub503_144_275_fu_157_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((ap_const_boolean_0 = ap_block_state25_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((grp_fpadd503_149_fu_195_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((ap_const_boolean_0 = ap_block_state29_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((grp_fpsub503_144_1_fu_215_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                if (((grp_fp2mul503_mont_133_1_fu_231_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln261_fu_259_p2 <= std_logic_vector(unsigned(i_284_fu_56) + unsigned(ap_const_lv32_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_fp2mul503_mont_78_fu_118_ap_done)
    begin
        if ((grp_fp2mul503_mont_78_fu_118_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(grp_fp2mul503_mont_78_fu_118_ap_done)
    begin
        if ((grp_fp2mul503_mont_78_fu_118_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_fp2mul503_mont_133_2_fu_136_ap_done)
    begin
        if ((grp_fp2mul503_mont_133_2_fu_136_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(ap_block_state17_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state17_on_subcall_done)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(grp_fpadd503_150_fu_74_ap_done)
    begin
        if ((grp_fpadd503_150_fu_74_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(ap_block_state21_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state21_on_subcall_done)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(grp_fpsub503_144_275_fu_157_ap_done)
    begin
        if ((grp_fpsub503_144_275_fu_157_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state24_blk <= ap_const_logic_0;

    ap_ST_fsm_state25_blk_assign_proc : process(ap_block_state25_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state25_on_subcall_done)) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(grp_fpadd503_149_fu_195_ap_done)
    begin
        if ((grp_fpadd503_149_fu_195_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state29_blk_assign_proc : process(ap_block_state29_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state29_on_subcall_done)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;

    ap_ST_fsm_state31_blk_assign_proc : process(grp_fpsub503_144_1_fu_215_ap_done)
    begin
        if ((grp_fpsub503_144_1_fu_215_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state31_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state31_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state32_blk <= ap_const_logic_0;

    ap_ST_fsm_state33_blk_assign_proc : process(grp_fp2mul503_mont_133_1_fu_231_ap_done)
    begin
        if ((grp_fp2mul503_mont_133_1_fu_231_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state33_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state33_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(grp_fpadd503_150_fu_74_ap_done)
    begin
        if ((grp_fpadd503_150_fu_74_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_fpadd503_150_fu_74_ap_done)
    begin
        if ((grp_fpadd503_150_fu_74_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_fpsub503_144_fu_96_ap_done)
    begin
        if ((grp_fpsub503_144_fu_96_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_fpsub503_144_fu_96_ap_done)
    begin
        if ((grp_fpsub503_144_fu_96_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state17_on_subcall_done_assign_proc : process(grp_fpadd503_150_fu_74_ap_done, grp_fp2mul503_mont_7_fu_146_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_fp2mul503_mont_7_fu_146_ap_done = ap_const_logic_0) or (grp_fpadd503_150_fu_74_ap_done = ap_const_logic_0));
    end process;


    ap_block_state21_on_subcall_done_assign_proc : process(grp_fpsub503_144_275_fu_157_ap_done, grp_fp2sqr503_mont_136_2_fu_175_ap_done)
    begin
                ap_block_state21_on_subcall_done <= ((grp_fp2sqr503_mont_136_2_fu_175_ap_done = ap_const_logic_0) or (grp_fpsub503_144_275_fu_157_ap_done = ap_const_logic_0));
    end process;


    ap_block_state25_on_subcall_done_assign_proc : process(grp_fp2sqr503_mont_136_1_fu_184_ap_done, grp_fpadd503_149_fu_195_ap_done)
    begin
                ap_block_state25_on_subcall_done <= ((grp_fpadd503_149_fu_195_ap_done = ap_const_logic_0) or (grp_fp2sqr503_mont_136_1_fu_184_ap_done = ap_const_logic_0));
    end process;


    ap_block_state29_on_subcall_done_assign_proc : process(grp_fpsub503_144_1_fu_215_ap_done, grp_fp2mul503_mont_133_1_fu_231_ap_done)
    begin
                ap_block_state29_on_subcall_done <= ((grp_fp2mul503_mont_133_1_fu_231_ap_done = ap_const_logic_0) or (grp_fpsub503_144_1_fu_215_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln261_fu_254_p2)
    begin
        if ((((icmp_ln261_fu_254_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln261_fu_254_p2)
    begin
        if (((icmp_ln261_fu_254_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    coeff_address0_assign_proc : process(grp_fp2mul503_mont_78_fu_118_coeff_address0, grp_fp2mul503_mont_7_fu_146_coeff_address0, ap_CS_fsm_state17, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            coeff_address0 <= grp_fp2mul503_mont_7_fu_146_coeff_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            coeff_address0 <= grp_fp2mul503_mont_78_fu_118_coeff_address0;
        else 
            coeff_address0 <= "XXXXXX";
        end if; 
    end process;


    coeff_address1_assign_proc : process(grp_fp2mul503_mont_78_fu_118_coeff_address1, grp_fp2mul503_mont_7_fu_146_coeff_address1, ap_CS_fsm_state17, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            coeff_address1 <= grp_fp2mul503_mont_7_fu_146_coeff_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            coeff_address1 <= grp_fp2mul503_mont_78_fu_118_coeff_address1;
        else 
            coeff_address1 <= "XXXXXX";
        end if; 
    end process;


    coeff_ce0_assign_proc : process(grp_fp2mul503_mont_78_fu_118_coeff_ce0, grp_fp2mul503_mont_7_fu_146_coeff_ce0, ap_CS_fsm_state17, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            coeff_ce0 <= grp_fp2mul503_mont_7_fu_146_coeff_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            coeff_ce0 <= grp_fp2mul503_mont_78_fu_118_coeff_ce0;
        else 
            coeff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    coeff_ce1_assign_proc : process(grp_fp2mul503_mont_78_fu_118_coeff_ce1, grp_fp2mul503_mont_7_fu_146_coeff_ce1, ap_CS_fsm_state17, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            coeff_ce1 <= grp_fp2mul503_mont_7_fu_146_coeff_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            coeff_ce1 <= grp_fp2mul503_mont_78_fu_118_coeff_ce1;
        else 
            coeff_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_fp2mul503_mont_133_1_fu_231_ap_start <= grp_fp2mul503_mont_133_1_fu_231_ap_start_reg;

    grp_fp2mul503_mont_133_1_fu_231_b_q0_assign_proc : process(t1_q0, t0_q0, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_fp2mul503_mont_133_1_fu_231_b_q0 <= t0_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fp2mul503_mont_133_1_fu_231_b_q0 <= t1_q0;
        else 
            grp_fp2mul503_mont_133_1_fu_231_b_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fp2mul503_mont_133_1_fu_231_b_q1_assign_proc : process(t1_q1, t0_q1, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_fp2mul503_mont_133_1_fu_231_b_q1 <= t0_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fp2mul503_mont_133_1_fu_231_b_q1 <= t1_q1;
        else 
            grp_fp2mul503_mont_133_1_fu_231_b_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fp2mul503_mont_133_1_fu_231_c_q0_assign_proc : process(pts_X_q0, pts_Z_q0, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_fp2mul503_mont_133_1_fu_231_c_q0 <= pts_Z_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fp2mul503_mont_133_1_fu_231_c_q0 <= pts_X_q0;
        else 
            grp_fp2mul503_mont_133_1_fu_231_c_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fp2mul503_mont_133_1_fu_231_c_q1_assign_proc : process(pts_X_q1, pts_Z_q1, ap_CS_fsm_state29, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            grp_fp2mul503_mont_133_1_fu_231_c_q1 <= pts_Z_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fp2mul503_mont_133_1_fu_231_c_q1 <= pts_X_q1;
        else 
            grp_fp2mul503_mont_133_1_fu_231_c_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fp2mul503_mont_133_2_fu_136_ap_start <= grp_fp2mul503_mont_133_2_fu_136_ap_start_reg;

    grp_fp2mul503_mont_78_fu_118_a_q0_assign_proc : process(t1_q0, t0_q0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fp2mul503_mont_78_fu_118_a_q0 <= t1_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fp2mul503_mont_78_fu_118_a_q0 <= t0_q0;
        else 
            grp_fp2mul503_mont_78_fu_118_a_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fp2mul503_mont_78_fu_118_a_q1_assign_proc : process(t1_q1, t0_q1, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fp2mul503_mont_78_fu_118_a_q1 <= t1_q1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fp2mul503_mont_78_fu_118_a_q1 <= t0_q1;
        else 
            grp_fp2mul503_mont_78_fu_118_a_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fp2mul503_mont_78_fu_118_ap_start <= grp_fp2mul503_mont_78_fu_118_ap_start_reg;

    grp_fp2mul503_mont_78_fu_118_b_offset_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fp2mul503_mont_78_fu_118_b_offset <= ap_const_lv9_100;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fp2mul503_mont_78_fu_118_b_offset <= ap_const_lv9_80;
        else 
            grp_fp2mul503_mont_78_fu_118_b_offset <= "XXXXXXXXX";
        end if; 
    end process;


    grp_fp2mul503_mont_78_fu_118_c_q0_assign_proc : process(pts_X_q0, pts_Z_q0, ap_CS_fsm_state11, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fp2mul503_mont_78_fu_118_c_q0 <= pts_Z_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            grp_fp2mul503_mont_78_fu_118_c_q0 <= pts_X_q0;
        else 
            grp_fp2mul503_mont_78_fu_118_c_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fp2mul503_mont_7_fu_146_ap_start <= grp_fp2mul503_mont_7_fu_146_ap_start_reg;
    grp_fp2sqr503_mont_136_1_fu_184_ap_start <= grp_fp2sqr503_mont_136_1_fu_184_ap_start_reg;
    grp_fp2sqr503_mont_136_2_fu_175_ap_start <= grp_fp2sqr503_mont_136_2_fu_175_ap_start_reg;

    grp_fpadd503_149_fu_195_a_offset_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fpadd503_149_fu_195_a_offset <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fpadd503_149_fu_195_a_offset <= ap_const_lv1_0;
        else 
            grp_fpadd503_149_fu_195_a_offset <= "X";
        end if; 
    end process;

    grp_fpadd503_149_fu_195_ap_start <= grp_fpadd503_149_fu_195_ap_start_reg;

    grp_fpadd503_149_fu_195_b_offset_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fpadd503_149_fu_195_b_offset <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fpadd503_149_fu_195_b_offset <= ap_const_lv1_0;
        else 
            grp_fpadd503_149_fu_195_b_offset <= "X";
        end if; 
    end process;


    grp_fpadd503_149_fu_195_c_offset2_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fpadd503_149_fu_195_c_offset2 <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fpadd503_149_fu_195_c_offset2 <= ap_const_lv1_0;
        else 
            grp_fpadd503_149_fu_195_c_offset2 <= "X";
        end if; 
    end process;


    grp_fpadd503_150_fu_74_a_offset2_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_fpadd503_150_fu_74_a_offset2 <= ap_const_lv1_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_fpadd503_150_fu_74_a_offset2 <= ap_const_lv1_0;
        else 
            grp_fpadd503_150_fu_74_a_offset2 <= "X";
        end if; 
    end process;

    grp_fpadd503_150_fu_74_ap_start <= grp_fpadd503_150_fu_74_ap_start_reg;

    grp_fpadd503_150_fu_74_b_offset4_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_fpadd503_150_fu_74_b_offset4 <= ap_const_lv1_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_fpadd503_150_fu_74_b_offset4 <= ap_const_lv1_0;
        else 
            grp_fpadd503_150_fu_74_b_offset4 <= "X";
        end if; 
    end process;


    grp_fpadd503_150_fu_74_c_offset_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            grp_fpadd503_150_fu_74_c_offset <= ap_const_lv1_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_fpadd503_150_fu_74_c_offset <= ap_const_lv1_0;
        else 
            grp_fpadd503_150_fu_74_c_offset <= "X";
        end if; 
    end process;


    grp_fpadd503_150_fu_74_c_q1_assign_proc : process(t1_q1, t0_q1, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_fpadd503_150_fu_74_c_q1 <= t1_q1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            grp_fpadd503_150_fu_74_c_q1 <= t0_q1;
        else 
            grp_fpadd503_150_fu_74_c_q1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fpsub503_144_1_fu_215_a_offset2_assign_proc : process(ap_CS_fsm_state29, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_fpsub503_144_1_fu_215_a_offset2 <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fpsub503_144_1_fu_215_a_offset2 <= ap_const_lv1_0;
        else 
            grp_fpsub503_144_1_fu_215_a_offset2 <= "X";
        end if; 
    end process;

    grp_fpsub503_144_1_fu_215_ap_start <= grp_fpsub503_144_1_fu_215_ap_start_reg;

    grp_fpsub503_144_1_fu_215_c_offset_assign_proc : process(ap_CS_fsm_state29, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_fpsub503_144_1_fu_215_c_offset <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fpsub503_144_1_fu_215_c_offset <= ap_const_lv1_0;
        else 
            grp_fpsub503_144_1_fu_215_c_offset <= "X";
        end if; 
    end process;


    grp_fpsub503_144_275_fu_157_a_offset2_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fpsub503_144_275_fu_157_a_offset2 <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fpsub503_144_275_fu_157_a_offset2 <= ap_const_lv1_0;
        else 
            grp_fpsub503_144_275_fu_157_a_offset2 <= "X";
        end if; 
    end process;

    grp_fpsub503_144_275_fu_157_ap_start <= grp_fpsub503_144_275_fu_157_ap_start_reg;

    grp_fpsub503_144_275_fu_157_c_offset4_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            grp_fpsub503_144_275_fu_157_c_offset4 <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fpsub503_144_275_fu_157_c_offset4 <= ap_const_lv1_0;
        else 
            grp_fpsub503_144_275_fu_157_c_offset4 <= "X";
        end if; 
    end process;


    grp_fpsub503_144_fu_96_a_offset2_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fpsub503_144_fu_96_a_offset2 <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fpsub503_144_fu_96_a_offset2 <= ap_const_lv1_0;
        else 
            grp_fpsub503_144_fu_96_a_offset2 <= "X";
        end if; 
    end process;

    grp_fpsub503_144_fu_96_ap_start <= grp_fpsub503_144_fu_96_ap_start_reg;

    grp_fpsub503_144_fu_96_b_offset4_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fpsub503_144_fu_96_b_offset4 <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fpsub503_144_fu_96_b_offset4 <= ap_const_lv1_0;
        else 
            grp_fpsub503_144_fu_96_b_offset4 <= "X";
        end if; 
    end process;


    grp_fpsub503_144_fu_96_c_offset_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fpsub503_144_fu_96_c_offset <= ap_const_lv1_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            grp_fpsub503_144_fu_96_c_offset <= ap_const_lv1_0;
        else 
            grp_fpsub503_144_fu_96_c_offset <= "X";
        end if; 
    end process;

    icmp_ln261_fu_254_p2 <= "1" when (i_284_fu_56 = npts_1) else "0";

    pts_X_address0_assign_proc : process(grp_fpadd503_150_fu_74_a_address0, grp_fpsub503_144_fu_96_a_address0, grp_fp2mul503_mont_78_fu_118_c_address0, grp_fpsub503_144_275_fu_157_a_address0, grp_fpadd503_149_fu_195_c_address0, grp_fp2mul503_mont_133_1_fu_231_c_address0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            pts_X_address0 <= grp_fp2mul503_mont_133_1_fu_231_c_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            pts_X_address0 <= grp_fpadd503_149_fu_195_c_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            pts_X_address0 <= grp_fpsub503_144_275_fu_157_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            pts_X_address0 <= grp_fp2mul503_mont_78_fu_118_c_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            pts_X_address0 <= grp_fpsub503_144_fu_96_a_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            pts_X_address0 <= grp_fpadd503_150_fu_74_a_address0;
        else 
            pts_X_address0 <= "XXXXXXX";
        end if; 
    end process;


    pts_X_address1_assign_proc : process(grp_fpadd503_149_fu_195_c_address1, grp_fp2mul503_mont_133_1_fu_231_c_address1, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            pts_X_address1 <= grp_fp2mul503_mont_133_1_fu_231_c_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            pts_X_address1 <= grp_fpadd503_149_fu_195_c_address1;
        else 
            pts_X_address1 <= "XXXXXXX";
        end if; 
    end process;


    pts_X_ce0_assign_proc : process(grp_fpadd503_150_fu_74_a_ce0, grp_fpsub503_144_fu_96_a_ce0, grp_fp2mul503_mont_78_fu_118_c_ce0, grp_fpsub503_144_275_fu_157_a_ce0, grp_fpadd503_149_fu_195_c_ce0, grp_fp2mul503_mont_133_1_fu_231_c_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state11, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            pts_X_ce0 <= grp_fp2mul503_mont_133_1_fu_231_c_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            pts_X_ce0 <= grp_fpadd503_149_fu_195_c_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            pts_X_ce0 <= grp_fpsub503_144_275_fu_157_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            pts_X_ce0 <= grp_fp2mul503_mont_78_fu_118_c_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            pts_X_ce0 <= grp_fpsub503_144_fu_96_a_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            pts_X_ce0 <= grp_fpadd503_150_fu_74_a_ce0;
        else 
            pts_X_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pts_X_ce1_assign_proc : process(grp_fpadd503_149_fu_195_c_ce1, grp_fp2mul503_mont_133_1_fu_231_c_ce1, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            pts_X_ce1 <= grp_fp2mul503_mont_133_1_fu_231_c_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            pts_X_ce1 <= grp_fpadd503_149_fu_195_c_ce1;
        else 
            pts_X_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    pts_X_d0_assign_proc : process(grp_fp2mul503_mont_78_fu_118_c_d0, grp_fpadd503_149_fu_195_c_d0, grp_fp2mul503_mont_133_1_fu_231_c_d0, ap_CS_fsm_state11, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            pts_X_d0 <= grp_fp2mul503_mont_133_1_fu_231_c_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            pts_X_d0 <= grp_fpadd503_149_fu_195_c_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            pts_X_d0 <= grp_fp2mul503_mont_78_fu_118_c_d0;
        else 
            pts_X_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    pts_X_we0_assign_proc : process(grp_fp2mul503_mont_78_fu_118_c_we0, grp_fpadd503_149_fu_195_c_we0, grp_fp2mul503_mont_133_1_fu_231_c_we0, ap_CS_fsm_state11, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            pts_X_we0 <= grp_fp2mul503_mont_133_1_fu_231_c_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            pts_X_we0 <= grp_fpadd503_149_fu_195_c_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            pts_X_we0 <= grp_fp2mul503_mont_78_fu_118_c_we0;
        else 
            pts_X_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pts_Z_address0_assign_proc : process(grp_fpadd503_150_fu_74_b_address0, grp_fpsub503_144_fu_96_b_address0, grp_fp2mul503_mont_78_fu_118_c_address0, grp_fpsub503_144_275_fu_157_c_address0, grp_fp2sqr503_mont_136_1_fu_184_c_address0, grp_fpsub503_144_1_fu_215_a_address0, grp_fp2mul503_mont_133_1_fu_231_c_address0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_CS_fsm_state31, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            pts_Z_address0 <= grp_fp2mul503_mont_133_1_fu_231_c_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            pts_Z_address0 <= grp_fpsub503_144_1_fu_215_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            pts_Z_address0 <= grp_fp2sqr503_mont_136_1_fu_184_c_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            pts_Z_address0 <= grp_fpsub503_144_275_fu_157_c_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            pts_Z_address0 <= grp_fp2mul503_mont_78_fu_118_c_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            pts_Z_address0 <= grp_fpsub503_144_fu_96_b_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            pts_Z_address0 <= grp_fpadd503_150_fu_74_b_address0;
        else 
            pts_Z_address0 <= "XXXXXXX";
        end if; 
    end process;


    pts_Z_address1_assign_proc : process(grp_fpsub503_144_275_fu_157_c_address1, grp_fp2sqr503_mont_136_1_fu_184_c_address1, grp_fp2mul503_mont_133_1_fu_231_c_address1, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            pts_Z_address1 <= grp_fp2mul503_mont_133_1_fu_231_c_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            pts_Z_address1 <= grp_fp2sqr503_mont_136_1_fu_184_c_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            pts_Z_address1 <= grp_fpsub503_144_275_fu_157_c_address1;
        else 
            pts_Z_address1 <= "XXXXXXX";
        end if; 
    end process;


    pts_Z_ce0_assign_proc : process(grp_fpadd503_150_fu_74_b_ce0, grp_fpsub503_144_fu_96_b_ce0, grp_fp2mul503_mont_78_fu_118_c_ce0, grp_fpsub503_144_275_fu_157_c_ce0, grp_fp2sqr503_mont_136_1_fu_184_c_ce0, grp_fpsub503_144_1_fu_215_a_ce0, grp_fp2mul503_mont_133_1_fu_231_c_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state29, ap_CS_fsm_state31, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            pts_Z_ce0 <= grp_fp2mul503_mont_133_1_fu_231_c_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            pts_Z_ce0 <= grp_fpsub503_144_1_fu_215_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            pts_Z_ce0 <= grp_fp2sqr503_mont_136_1_fu_184_c_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            pts_Z_ce0 <= grp_fpsub503_144_275_fu_157_c_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            pts_Z_ce0 <= grp_fp2mul503_mont_78_fu_118_c_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            pts_Z_ce0 <= grp_fpsub503_144_fu_96_b_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            pts_Z_ce0 <= grp_fpadd503_150_fu_74_b_ce0;
        else 
            pts_Z_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pts_Z_ce1_assign_proc : process(grp_fpsub503_144_275_fu_157_c_ce1, grp_fp2sqr503_mont_136_1_fu_184_c_ce1, grp_fp2mul503_mont_133_1_fu_231_c_ce1, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            pts_Z_ce1 <= grp_fp2mul503_mont_133_1_fu_231_c_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            pts_Z_ce1 <= grp_fp2sqr503_mont_136_1_fu_184_c_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            pts_Z_ce1 <= grp_fpsub503_144_275_fu_157_c_ce1;
        else 
            pts_Z_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    pts_Z_d0_assign_proc : process(grp_fp2mul503_mont_78_fu_118_c_d0, grp_fpsub503_144_275_fu_157_c_d0, grp_fp2sqr503_mont_136_1_fu_184_c_d0, grp_fp2mul503_mont_133_1_fu_231_c_d0, ap_CS_fsm_state13, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            pts_Z_d0 <= grp_fp2mul503_mont_133_1_fu_231_c_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            pts_Z_d0 <= grp_fp2sqr503_mont_136_1_fu_184_c_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            pts_Z_d0 <= grp_fpsub503_144_275_fu_157_c_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            pts_Z_d0 <= grp_fp2mul503_mont_78_fu_118_c_d0;
        else 
            pts_Z_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    pts_Z_we0_assign_proc : process(grp_fp2mul503_mont_78_fu_118_c_we0, grp_fpsub503_144_275_fu_157_c_we0, grp_fp2sqr503_mont_136_1_fu_184_c_we0, grp_fp2mul503_mont_133_1_fu_231_c_we0, ap_CS_fsm_state13, ap_CS_fsm_state21, ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            pts_Z_we0 <= grp_fp2mul503_mont_133_1_fu_231_c_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            pts_Z_we0 <= grp_fp2sqr503_mont_136_1_fu_184_c_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            pts_Z_we0 <= grp_fpsub503_144_275_fu_157_c_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            pts_Z_we0 <= grp_fp2mul503_mont_78_fu_118_c_we0;
        else 
            pts_Z_we0 <= ap_const_logic_0;
        end if; 
    end process;


    t0_address0_assign_proc : process(grp_fpadd503_150_fu_74_c_address0, grp_fp2mul503_mont_78_fu_118_a_address0, grp_fp2mul503_mont_133_2_fu_136_c_address0, grp_fp2mul503_mont_7_fu_146_c_address0, grp_fpadd503_149_fu_195_b_address0, grp_fpsub503_144_1_fu_215_c_address0, grp_fp2mul503_mont_133_1_fu_231_b_address0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state31, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            t0_address0 <= grp_fp2mul503_mont_133_1_fu_231_b_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            t0_address0 <= grp_fpsub503_144_1_fu_215_c_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            t0_address0 <= grp_fpadd503_149_fu_195_b_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            t0_address0 <= grp_fp2mul503_mont_7_fu_146_c_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            t0_address0 <= grp_fp2mul503_mont_133_2_fu_136_c_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            t0_address0 <= grp_fp2mul503_mont_78_fu_118_a_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            t0_address0 <= grp_fpadd503_150_fu_74_c_address0;
        else 
            t0_address0 <= "XXXX";
        end if; 
    end process;


    t0_address1_assign_proc : process(grp_fpadd503_150_fu_74_c_address1, grp_fp2mul503_mont_78_fu_118_a_address1, grp_fp2mul503_mont_133_2_fu_136_c_address1, grp_fp2mul503_mont_7_fu_146_c_address1, grp_fpsub503_144_1_fu_215_c_address1, grp_fp2mul503_mont_133_1_fu_231_b_address1, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state29, ap_CS_fsm_state31, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            t0_address1 <= grp_fp2mul503_mont_133_1_fu_231_b_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            t0_address1 <= grp_fpsub503_144_1_fu_215_c_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            t0_address1 <= grp_fp2mul503_mont_7_fu_146_c_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            t0_address1 <= grp_fp2mul503_mont_133_2_fu_136_c_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            t0_address1 <= grp_fp2mul503_mont_78_fu_118_a_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            t0_address1 <= grp_fpadd503_150_fu_74_c_address1;
        else 
            t0_address1 <= "XXXX";
        end if; 
    end process;


    t0_ce0_assign_proc : process(grp_fpadd503_150_fu_74_c_ce0, grp_fp2mul503_mont_78_fu_118_a_ce0, grp_fp2mul503_mont_133_2_fu_136_c_ce0, grp_fp2mul503_mont_7_fu_146_c_ce0, grp_fpadd503_149_fu_195_b_ce0, grp_fpsub503_144_1_fu_215_c_ce0, grp_fp2mul503_mont_133_1_fu_231_b_ce0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state31, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            t0_ce0 <= grp_fp2mul503_mont_133_1_fu_231_b_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            t0_ce0 <= grp_fpsub503_144_1_fu_215_c_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            t0_ce0 <= grp_fpadd503_149_fu_195_b_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            t0_ce0 <= grp_fp2mul503_mont_7_fu_146_c_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            t0_ce0 <= grp_fp2mul503_mont_133_2_fu_136_c_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            t0_ce0 <= grp_fp2mul503_mont_78_fu_118_a_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            t0_ce0 <= grp_fpadd503_150_fu_74_c_ce0;
        else 
            t0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t0_ce1_assign_proc : process(grp_fpadd503_150_fu_74_c_ce1, grp_fp2mul503_mont_78_fu_118_a_ce1, grp_fp2mul503_mont_133_2_fu_136_c_ce1, grp_fp2mul503_mont_7_fu_146_c_ce1, grp_fpsub503_144_1_fu_215_c_ce1, grp_fp2mul503_mont_133_1_fu_231_b_ce1, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state11, ap_CS_fsm_state15, ap_CS_fsm_state29, ap_CS_fsm_state31, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            t0_ce1 <= grp_fp2mul503_mont_133_1_fu_231_b_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            t0_ce1 <= grp_fpsub503_144_1_fu_215_c_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            t0_ce1 <= grp_fp2mul503_mont_7_fu_146_c_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            t0_ce1 <= grp_fp2mul503_mont_133_2_fu_136_c_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            t0_ce1 <= grp_fp2mul503_mont_78_fu_118_a_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            t0_ce1 <= grp_fpadd503_150_fu_74_c_ce1;
        else 
            t0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    t0_d0_assign_proc : process(grp_fpadd503_150_fu_74_c_d0, grp_fp2mul503_mont_133_2_fu_136_c_d0, grp_fp2mul503_mont_7_fu_146_c_d0, grp_fpsub503_144_1_fu_215_c_d0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state15, ap_CS_fsm_state29, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            t0_d0 <= grp_fpsub503_144_1_fu_215_c_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            t0_d0 <= grp_fp2mul503_mont_7_fu_146_c_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            t0_d0 <= grp_fp2mul503_mont_133_2_fu_136_c_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            t0_d0 <= grp_fpadd503_150_fu_74_c_d0;
        else 
            t0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    t0_we0_assign_proc : process(grp_fpadd503_150_fu_74_c_we0, grp_fp2mul503_mont_133_2_fu_136_c_we0, grp_fp2mul503_mont_7_fu_146_c_we0, grp_fpsub503_144_1_fu_215_c_we0, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state17, ap_CS_fsm_state15, ap_CS_fsm_state29, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            t0_we0 <= grp_fpsub503_144_1_fu_215_c_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            t0_we0 <= grp_fp2mul503_mont_7_fu_146_c_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            t0_we0 <= grp_fp2mul503_mont_133_2_fu_136_c_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            t0_we0 <= grp_fpadd503_150_fu_74_c_we0;
        else 
            t0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    t1_address0_assign_proc : process(grp_fpadd503_150_fu_74_c_address0, grp_fpsub503_144_fu_96_c_address0, grp_fp2mul503_mont_78_fu_118_a_address0, grp_fp2mul503_mont_133_2_fu_136_b_address0, grp_fp2sqr503_mont_136_2_fu_175_c_address0, grp_fpadd503_149_fu_195_a_address0, grp_fp2mul503_mont_133_1_fu_231_b_address0, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state21, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            t1_address0 <= grp_fp2mul503_mont_133_1_fu_231_b_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            t1_address0 <= grp_fpadd503_149_fu_195_a_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            t1_address0 <= grp_fp2sqr503_mont_136_2_fu_175_c_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            t1_address0 <= grp_fp2mul503_mont_133_2_fu_136_b_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            t1_address0 <= grp_fp2mul503_mont_78_fu_118_a_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            t1_address0 <= grp_fpsub503_144_fu_96_c_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            t1_address0 <= grp_fpadd503_150_fu_74_c_address0;
        else 
            t1_address0 <= "XXXX";
        end if; 
    end process;


    t1_address1_assign_proc : process(grp_fpadd503_150_fu_74_c_address1, grp_fpsub503_144_fu_96_c_address1, grp_fp2mul503_mont_78_fu_118_a_address1, grp_fp2mul503_mont_133_2_fu_136_b_address1, grp_fp2sqr503_mont_136_2_fu_175_c_address1, grp_fp2mul503_mont_133_1_fu_231_b_address1, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state21, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            t1_address1 <= grp_fp2mul503_mont_133_1_fu_231_b_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            t1_address1 <= grp_fp2sqr503_mont_136_2_fu_175_c_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            t1_address1 <= grp_fp2mul503_mont_133_2_fu_136_b_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            t1_address1 <= grp_fp2mul503_mont_78_fu_118_a_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            t1_address1 <= grp_fpsub503_144_fu_96_c_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            t1_address1 <= grp_fpadd503_150_fu_74_c_address1;
        else 
            t1_address1 <= "XXXX";
        end if; 
    end process;


    t1_ce0_assign_proc : process(grp_fpadd503_150_fu_74_c_ce0, grp_fpsub503_144_fu_96_c_ce0, grp_fp2mul503_mont_78_fu_118_a_ce0, grp_fp2mul503_mont_133_2_fu_136_b_ce0, grp_fp2sqr503_mont_136_2_fu_175_c_ce0, grp_fpadd503_149_fu_195_a_ce0, grp_fp2mul503_mont_133_1_fu_231_b_ce0, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state21, ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            t1_ce0 <= grp_fp2mul503_mont_133_1_fu_231_b_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            t1_ce0 <= grp_fpadd503_149_fu_195_a_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            t1_ce0 <= grp_fp2sqr503_mont_136_2_fu_175_c_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            t1_ce0 <= grp_fp2mul503_mont_133_2_fu_136_b_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            t1_ce0 <= grp_fp2mul503_mont_78_fu_118_a_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            t1_ce0 <= grp_fpsub503_144_fu_96_c_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            t1_ce0 <= grp_fpadd503_150_fu_74_c_ce0;
        else 
            t1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t1_ce1_assign_proc : process(grp_fpadd503_150_fu_74_c_ce1, grp_fpsub503_144_fu_96_c_ce1, grp_fp2mul503_mont_78_fu_118_a_ce1, grp_fp2mul503_mont_133_2_fu_136_b_ce1, grp_fp2sqr503_mont_136_2_fu_175_c_ce1, grp_fp2mul503_mont_133_1_fu_231_b_ce1, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state21, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            t1_ce1 <= grp_fp2mul503_mont_133_1_fu_231_b_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            t1_ce1 <= grp_fp2sqr503_mont_136_2_fu_175_c_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            t1_ce1 <= grp_fp2mul503_mont_133_2_fu_136_b_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            t1_ce1 <= grp_fp2mul503_mont_78_fu_118_a_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            t1_ce1 <= grp_fpsub503_144_fu_96_c_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            t1_ce1 <= grp_fpadd503_150_fu_74_c_ce1;
        else 
            t1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    t1_d0_assign_proc : process(grp_fpadd503_150_fu_74_c_d0, grp_fpsub503_144_fu_96_c_d0, grp_fp2sqr503_mont_136_2_fu_175_c_d0, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            t1_d0 <= grp_fp2sqr503_mont_136_2_fu_175_c_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            t1_d0 <= grp_fpsub503_144_fu_96_c_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            t1_d0 <= grp_fpadd503_150_fu_74_c_d0;
        else 
            t1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    t1_we0_assign_proc : process(grp_fpadd503_150_fu_74_c_we0, grp_fpsub503_144_fu_96_c_we0, grp_fp2sqr503_mont_136_2_fu_175_c_we0, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state21)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            t1_we0 <= grp_fp2sqr503_mont_136_2_fu_175_c_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            t1_we0 <= grp_fpsub503_144_fu_96_c_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            t1_we0 <= grp_fpadd503_150_fu_74_c_we0;
        else 
            t1_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
