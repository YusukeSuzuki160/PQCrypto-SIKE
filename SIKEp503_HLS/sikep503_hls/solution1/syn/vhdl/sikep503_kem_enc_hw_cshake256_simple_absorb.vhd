-- ==============================================================
-- Generated by Vitis HLS v2024.2.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sikep503_kem_enc_hw_cshake256_simple_absorb is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    s_ce0 : OUT STD_LOGIC;
    s_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    s_ce1 : OUT STD_LOGIC;
    s_we1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    cstm : IN STD_LOGIC_VECTOR (0 downto 0);
    in_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_0_ce0 : OUT STD_LOGIC;
    in_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_0_ce1 : OUT STD_LOGIC;
    in_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_1_ce0 : OUT STD_LOGIC;
    in_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_1_ce1 : OUT STD_LOGIC;
    in_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_2_ce0 : OUT STD_LOGIC;
    in_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_2_ce1 : OUT STD_LOGIC;
    in_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_3_ce0 : OUT STD_LOGIC;
    in_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_3_ce1 : OUT STD_LOGIC;
    in_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of sikep503_kem_enc_hw_cshake256_simple_absorb is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (8 downto 0) := "000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (8 downto 0) := "000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (8 downto 0) := "000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (8 downto 0) := "001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (8 downto 0) := "010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv48_100100018801 : STD_LOGIC_VECTOR (47 downto 0) := "000100000000000100000000000000011000100000000001";
    constant ap_const_lv64_88 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000010001000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal empty_fu_119_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_reg_142 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_start : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_done : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_idle : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_ready : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_75_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_75_ap_done : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_75_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_75_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_75_s_i_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_75_s_i_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_75_s_i_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_75_s_i_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_75_s_i_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_75_s_i_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_75_s_i_we1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_75_s_i_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_start : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_done : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_idle : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_ready : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_0_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_0_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_0_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_0_ce1 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_1_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_1_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_1_ce1 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_2_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_2_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_2_ce1 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_3_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_3_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_3_ce1 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_ce1 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal s_we0_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_75_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal idx_fu_46 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal add_ln349_fu_124_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_ce0_local : STD_LOGIC;
    signal s_we0_local : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln540_fu_111_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln_fu_103_p3 : STD_LOGIC_VECTOR (48 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sikep503_kem_enc_hw_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_ce0 : OUT STD_LOGIC;
        s_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sikep503_kem_enc_hw_KeccakF1600_StatePermute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_i_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_i_ce0 : OUT STD_LOGIC;
        s_i_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        s_i_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_i_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        s_i_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_i_ce1 : OUT STD_LOGIC;
        s_i_we1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        s_i_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_i_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sikep503_kem_enc_hw_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        idx : IN STD_LOGIC_VECTOR (8 downto 0);
        in_0_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_0_ce0 : OUT STD_LOGIC;
        in_0_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_0_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_0_ce1 : OUT STD_LOGIC;
        in_0_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_1_ce0 : OUT STD_LOGIC;
        in_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_1_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_1_ce1 : OUT STD_LOGIC;
        in_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_2_ce0 : OUT STD_LOGIC;
        in_2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_2_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_2_ce1 : OUT STD_LOGIC;
        in_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_3_ce0 : OUT STD_LOGIC;
        in_3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_3_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_3_ce1 : OUT STD_LOGIC;
        in_3_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_ce0 : OUT STD_LOGIC;
        s_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_ce1 : OUT STD_LOGIC;
        s_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69 : component sikep503_kem_enc_hw_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_start,
        ap_done => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_done,
        ap_idle => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_idle,
        ap_ready => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_ready,
        s_address0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_address0,
        s_ce0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_ce0,
        s_we0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_we0,
        s_d0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_d0);

    grp_KeccakF1600_StatePermute_fu_75 : component sikep503_kem_enc_hw_KeccakF1600_StatePermute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePermute_fu_75_ap_start,
        ap_done => grp_KeccakF1600_StatePermute_fu_75_ap_done,
        ap_idle => grp_KeccakF1600_StatePermute_fu_75_ap_idle,
        ap_ready => grp_KeccakF1600_StatePermute_fu_75_ap_ready,
        s_i_address0 => grp_KeccakF1600_StatePermute_fu_75_s_i_address0,
        s_i_ce0 => grp_KeccakF1600_StatePermute_fu_75_s_i_ce0,
        s_i_we0 => grp_KeccakF1600_StatePermute_fu_75_s_i_we0,
        s_i_d0 => grp_KeccakF1600_StatePermute_fu_75_s_i_d0,
        s_i_q0 => s_q0,
        s_i_address1 => grp_KeccakF1600_StatePermute_fu_75_s_i_address1,
        s_i_ce1 => grp_KeccakF1600_StatePermute_fu_75_s_i_ce1,
        s_i_we1 => grp_KeccakF1600_StatePermute_fu_75_s_i_we1,
        s_i_d1 => grp_KeccakF1600_StatePermute_fu_75_s_i_d1,
        s_i_q1 => s_q1);

    grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83 : component sikep503_kem_enc_hw_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_start,
        ap_done => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_done,
        ap_idle => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_idle,
        ap_ready => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_ready,
        idx => empty_reg_142,
        in_0_address0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_0_address0,
        in_0_ce0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_0_ce0,
        in_0_q0 => in_0_q0,
        in_0_address1 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_0_address1,
        in_0_ce1 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_0_ce1,
        in_0_q1 => in_0_q1,
        in_1_address0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_1_address0,
        in_1_ce0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_1_ce0,
        in_1_q0 => in_1_q0,
        in_1_address1 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_1_address1,
        in_1_ce1 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_1_ce1,
        in_1_q1 => in_1_q1,
        in_2_address0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_2_address0,
        in_2_ce0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_2_ce0,
        in_2_q0 => in_2_q0,
        in_2_address1 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_2_address1,
        in_2_ce1 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_2_ce1,
        in_2_q1 => in_2_q1,
        in_3_address0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_3_address0,
        in_3_ce0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_3_ce0,
        in_3_q0 => in_3_q0,
        in_3_address1 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_3_address1,
        in_3_ce1 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_3_ce1,
        in_3_q1 => in_3_q1,
        s_address0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_address0,
        s_ce0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_ce0,
        s_we0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_we0,
        s_d0 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_d0,
        s_address1 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_address1,
        s_ce1 => grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_ce1,
        s_q1 => s_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePermute_fu_75_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePermute_fu_75_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_KeccakF1600_StatePermute_fu_75_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePermute_fu_75_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePermute_fu_75_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_ready = ap_const_logic_1)) then 
                    grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_ready = ap_const_logic_1)) then 
                    grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    idx_fu_46_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                idx_fu_46 <= ap_const_lv64_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                idx_fu_46 <= add_ln349_fu_124_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                empty_reg_142 <= empty_fu_119_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_done, grp_KeccakF1600_StatePermute_fu_75_ap_done, grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((grp_KeccakF1600_StatePermute_fu_75_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_KeccakF1600_StatePermute_fu_75_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXX";
        end case;
    end process;
    add_ln349_fu_124_p2 <= std_logic_vector(unsigned(idx_fu_46) + unsigned(ap_const_lv64_88));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_done)
    begin
        if ((grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(grp_KeccakF1600_StatePermute_fu_75_ap_done)
    begin
        if ((grp_KeccakF1600_StatePermute_fu_75_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;

    ap_ST_fsm_state7_blk_assign_proc : process(grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_done)
    begin
        if ((grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state7_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state7_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_KeccakF1600_StatePermute_fu_75_ap_done)
    begin
        if ((grp_KeccakF1600_StatePermute_fu_75_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= ap_const_logic_0;
    empty_fu_119_p1 <= idx_fu_46(9 - 1 downto 0);
    grp_KeccakF1600_StatePermute_fu_75_ap_start <= grp_KeccakF1600_StatePermute_fu_75_ap_start_reg;
    grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_start <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_ap_start_reg;
    grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_start <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_ap_start_reg;
    in_0_address0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_0_address0;
    in_0_address1 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_0_address1;
    in_0_ce0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_0_ce0;
    in_0_ce1 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_0_ce1;
    in_1_address0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_1_address0;
    in_1_address1 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_1_address1;
    in_1_ce0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_1_ce0;
    in_1_ce1 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_1_ce1;
    in_2_address0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_2_address0;
    in_2_address1 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_2_address1;
    in_2_ce0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_2_ce0;
    in_2_ce1 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_2_ce1;
    in_3_address0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_3_address0;
    in_3_address1 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_3_address1;
    in_3_ce0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_3_ce0;
    in_3_ce1 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_in_3_ce1;
    or_ln_fu_103_p3 <= (cstm & ap_const_lv48_100100018801);

    s_address0_assign_proc : process(grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_address0, grp_KeccakF1600_StatePermute_fu_75_s_i_address0, grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_address0, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            s_address0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            s_address0 <= grp_KeccakF1600_StatePermute_fu_75_s_i_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_address0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_address0;
        else 
            s_address0 <= ap_const_lv32_0(5 - 1 downto 0);
        end if; 
    end process;


    s_address1_assign_proc : process(grp_KeccakF1600_StatePermute_fu_75_s_i_address1, grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_address1, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            s_address1 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_address1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            s_address1 <= grp_KeccakF1600_StatePermute_fu_75_s_i_address1;
        else 
            s_address1 <= "XXXXX";
        end if; 
    end process;


    s_ce0_assign_proc : process(grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_ce0, grp_KeccakF1600_StatePermute_fu_75_s_i_ce0, grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_ce0, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state7, s_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            s_ce0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            s_ce0 <= grp_KeccakF1600_StatePermute_fu_75_s_i_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_ce0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_ce0;
        else 
            s_ce0 <= s_ce0_local;
        end if; 
    end process;


    s_ce0_local_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            s_ce0_local <= ap_const_logic_1;
        else 
            s_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    s_ce1_assign_proc : process(grp_KeccakF1600_StatePermute_fu_75_s_i_ce1, grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_ce1, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            s_ce1 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_ce1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            s_ce1 <= grp_KeccakF1600_StatePermute_fu_75_s_i_ce1;
        else 
            s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    s_d0_assign_proc : process(grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_d0, grp_KeccakF1600_StatePermute_fu_75_s_i_d0, grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_d0, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state7, zext_ln540_fu_111_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            s_d0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_d0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            s_d0 <= grp_KeccakF1600_StatePermute_fu_75_s_i_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_d0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_d0;
        else 
            s_d0 <= zext_ln540_fu_111_p1;
        end if; 
    end process;

    s_d1 <= grp_KeccakF1600_StatePermute_fu_75_s_i_d1;

    s_we0_assign_proc : process(grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_we0, grp_KeccakF1600_StatePermute_fu_75_s_i_we0, grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_we0, ap_CS_fsm_state2, s_we0_out, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            s_we0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_351_2_fu_83_s_we0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            s_we0 <= grp_KeccakF1600_StatePermute_fu_75_s_i_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_we0 <= grp_cshake256_simple_absorb_Pipeline_VITIS_LOOP_529_1_fu_69_s_we0;
        else 
            s_we0 <= (s_we0_out or ap_const_lv8_0);
        end if; 
    end process;


    s_we0_local_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            s_we0_local <= ap_const_lv8_FF;
        else 
            s_we0_local <= ap_const_lv8_0;
        end if; 
    end process;

    s_we0_out <= s_we0_local;

    s_we1_assign_proc : process(grp_KeccakF1600_StatePermute_fu_75_s_i_we1, ap_CS_fsm_state5, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            s_we1 <= grp_KeccakF1600_StatePermute_fu_75_s_i_we1;
        else 
            s_we1 <= ap_const_lv8_0;
        end if; 
    end process;

    zext_ln540_fu_111_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_103_p3),64));
end behav;
