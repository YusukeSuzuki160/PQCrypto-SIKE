-- ==============================================================
-- Generated by Vitis HLS v2024.2.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sikep503_kem_enc_hw_KeccakF1600_StatePermute_Pipeline_VITIS_LOOP_117_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Asu : IN STD_LOGIC_VECTOR (63 downto 0);
    Aba : IN STD_LOGIC_VECTOR (63 downto 0);
    Abe : IN STD_LOGIC_VECTOR (63 downto 0);
    Abi : IN STD_LOGIC_VECTOR (63 downto 0);
    Abo : IN STD_LOGIC_VECTOR (63 downto 0);
    Abu : IN STD_LOGIC_VECTOR (63 downto 0);
    Aga : IN STD_LOGIC_VECTOR (63 downto 0);
    Age : IN STD_LOGIC_VECTOR (63 downto 0);
    Agi : IN STD_LOGIC_VECTOR (63 downto 0);
    Ago : IN STD_LOGIC_VECTOR (63 downto 0);
    Agu : IN STD_LOGIC_VECTOR (63 downto 0);
    Aka : IN STD_LOGIC_VECTOR (63 downto 0);
    Ake : IN STD_LOGIC_VECTOR (63 downto 0);
    Aki : IN STD_LOGIC_VECTOR (63 downto 0);
    Ako : IN STD_LOGIC_VECTOR (63 downto 0);
    Aku : IN STD_LOGIC_VECTOR (63 downto 0);
    Ama : IN STD_LOGIC_VECTOR (63 downto 0);
    Ame : IN STD_LOGIC_VECTOR (63 downto 0);
    Ami : IN STD_LOGIC_VECTOR (63 downto 0);
    Amo : IN STD_LOGIC_VECTOR (63 downto 0);
    Amu : IN STD_LOGIC_VECTOR (63 downto 0);
    Asa : IN STD_LOGIC_VECTOR (63 downto 0);
    Ase : IN STD_LOGIC_VECTOR (63 downto 0);
    Asi : IN STD_LOGIC_VECTOR (63 downto 0);
    Aso : IN STD_LOGIC_VECTOR (63 downto 0);
    Asu_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Asu_1_out_ap_vld : OUT STD_LOGIC;
    Aba_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Aba_1_out_ap_vld : OUT STD_LOGIC;
    Abe_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Abe_1_out_ap_vld : OUT STD_LOGIC;
    Abi_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Abi_1_out_ap_vld : OUT STD_LOGIC;
    Abo_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Abo_1_out_ap_vld : OUT STD_LOGIC;
    Abu_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Abu_1_out_ap_vld : OUT STD_LOGIC;
    Aga_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Aga_1_out_ap_vld : OUT STD_LOGIC;
    Age_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Age_1_out_ap_vld : OUT STD_LOGIC;
    Agi_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Agi_1_out_ap_vld : OUT STD_LOGIC;
    Ago_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ago_1_out_ap_vld : OUT STD_LOGIC;
    Agu_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Agu_1_out_ap_vld : OUT STD_LOGIC;
    Aka_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Aka_1_out_ap_vld : OUT STD_LOGIC;
    Ake_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ake_1_out_ap_vld : OUT STD_LOGIC;
    Aki_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Aki_1_out_ap_vld : OUT STD_LOGIC;
    Ako_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ako_1_out_ap_vld : OUT STD_LOGIC;
    Aku_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Aku_1_out_ap_vld : OUT STD_LOGIC;
    Ama_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ama_1_out_ap_vld : OUT STD_LOGIC;
    Ame_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ame_1_out_ap_vld : OUT STD_LOGIC;
    Ami_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ami_1_out_ap_vld : OUT STD_LOGIC;
    Amo_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Amo_1_out_ap_vld : OUT STD_LOGIC;
    Amu_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Amu_1_out_ap_vld : OUT STD_LOGIC;
    Asa_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Asa_1_out_ap_vld : OUT STD_LOGIC;
    Ase_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Ase_1_out_ap_vld : OUT STD_LOGIC;
    Asi_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Asi_1_out_ap_vld : OUT STD_LOGIC;
    Aso_1_out : OUT STD_LOGIC_VECTOR (63 downto 0);
    Aso_1_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of sikep503_kem_enc_hw_KeccakF1600_StatePermute_Pipeline_VITIS_LOOP_117_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln117_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal KeccakF_RoundConstants_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal KeccakF_RoundConstants_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal KeccakF_RoundConstants_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal KeccakF_RoundConstants_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln117_reg_4135 : STD_LOGIC_VECTOR (0 downto 0);
    signal Eba_2_fu_2623_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eba_2_reg_4149 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln231_fu_2635_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln231_reg_4156 : STD_LOGIC_VECTOR (19 downto 0);
    signal lshr_ln24_reg_4161 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln233_fu_2655_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln233_reg_4166 : STD_LOGIC_VECTOR (20 downto 0);
    signal lshr_ln25_reg_4171 : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln235_fu_2675_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal trunc_ln235_reg_4176 : STD_LOGIC_VECTOR (42 downto 0);
    signal lshr_ln26_reg_4181 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln237_fu_2695_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal trunc_ln237_reg_4186 : STD_LOGIC_VECTOR (49 downto 0);
    signal lshr_ln27_reg_4191 : STD_LOGIC_VECTOR (13 downto 0);
    signal KeccakF_RoundConstants_load_1_reg_4196 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln246_fu_2715_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln246_reg_4201 : STD_LOGIC_VECTOR (35 downto 0);
    signal lshr_ln28_reg_4206 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln248_fu_2735_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal trunc_ln248_reg_4211 : STD_LOGIC_VECTOR (43 downto 0);
    signal lshr_ln29_reg_4216 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln250_fu_2755_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln250_reg_4221 : STD_LOGIC_VECTOR (60 downto 0);
    signal lshr_ln30_reg_4226 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln252_fu_2775_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln252_reg_4231 : STD_LOGIC_VECTOR (18 downto 0);
    signal lshr_ln31_reg_4236 : STD_LOGIC_VECTOR (44 downto 0);
    signal trunc_ln254_fu_2795_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln254_reg_4241 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln32_reg_4246 : STD_LOGIC_VECTOR (60 downto 0);
    signal trunc_ln262_fu_2815_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln262_reg_4251 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_308_reg_4256 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln264_fu_2833_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal trunc_ln264_reg_4261 : STD_LOGIC_VECTOR (57 downto 0);
    signal lshr_ln33_reg_4266 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln266_fu_2853_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal trunc_ln266_reg_4271 : STD_LOGIC_VECTOR (38 downto 0);
    signal lshr_ln34_reg_4276 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln268_fu_2873_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal trunc_ln268_reg_4281 : STD_LOGIC_VECTOR (55 downto 0);
    signal lshr_ln35_reg_4286 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln270_fu_2893_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal trunc_ln270_reg_4291 : STD_LOGIC_VECTOR (45 downto 0);
    signal lshr_ln36_reg_4296 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln278_fu_2913_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal trunc_ln278_reg_4301 : STD_LOGIC_VECTOR (36 downto 0);
    signal lshr_ln37_reg_4306 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln280_fu_2933_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln280_reg_4311 : STD_LOGIC_VECTOR (27 downto 0);
    signal lshr_ln38_reg_4316 : STD_LOGIC_VECTOR (35 downto 0);
    signal trunc_ln282_fu_2953_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal trunc_ln282_reg_4321 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln39_reg_4326 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln284_fu_2973_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal trunc_ln284_reg_4331 : STD_LOGIC_VECTOR (48 downto 0);
    signal lshr_ln40_reg_4336 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln286_fu_2993_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln286_reg_4341 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln41_reg_4346 : STD_LOGIC_VECTOR (55 downto 0);
    signal trunc_ln294_fu_3013_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln294_reg_4351 : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln42_reg_4356 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln296_fu_3033_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln296_reg_4361 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln43_reg_4366 : STD_LOGIC_VECTOR (54 downto 0);
    signal trunc_ln298_fu_3053_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln298_reg_4371 : STD_LOGIC_VECTOR (24 downto 0);
    signal lshr_ln44_reg_4376 : STD_LOGIC_VECTOR (38 downto 0);
    signal trunc_ln300_fu_3073_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln300_reg_4381 : STD_LOGIC_VECTOR (22 downto 0);
    signal lshr_ln45_reg_4386 : STD_LOGIC_VECTOR (40 downto 0);
    signal trunc_ln302_fu_3093_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln302_reg_4391 : STD_LOGIC_VECTOR (61 downto 0);
    signal lshr_ln46_reg_4396 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln144_fu_877_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln239_fu_900_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal Aso_1_fu_284 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Aso_3_fu_3679_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Aso_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal Asi_1_fu_288 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Asi_3_fu_3661_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Asi_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ase_1_fu_292 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ase_3_fu_3643_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ase_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Asa_1_fu_296 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Asa_3_fu_3625_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Asa_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Amu_1_fu_300 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Amu_3_fu_3577_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Amu_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Amo_1_fu_304 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Amo_3_fu_3559_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Amo_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ami_1_fu_308 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ami_3_fu_3541_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ami_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ame_1_fu_312 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ame_3_fu_3523_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ame_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ama_1_fu_316 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ama_3_fu_3505_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ama_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Aku_1_fu_320 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Aku_3_fu_3457_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Aku_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ako_1_fu_324 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ako_3_fu_3439_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ako_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Aki_1_fu_328 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Aki_3_fu_3421_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Aki_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ake_1_fu_332 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ake_3_fu_3403_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ake_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Aka_1_fu_336 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Aka_3_fu_3385_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Aka_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Agu_1_fu_340 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Agu_3_fu_3337_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Agu_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Ago_1_fu_344 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Ago_3_fu_3319_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Ago_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Agi_1_fu_348 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Agi_3_fu_3301_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Agi_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Age_1_fu_352 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Age_3_fu_3283_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Age_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Aga_1_fu_356 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Aga_3_fu_3265_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Aga_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Abu_1_fu_360 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Abu_3_fu_3217_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Abu_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Abo_1_fu_364 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Abo_3_fu_3200_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Abo_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Abi_1_fu_368 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Abi_3_fu_3183_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Abi_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Abe_1_fu_372 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Abe_3_fu_3165_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Abe_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Aba_1_fu_376 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Aba_3_fu_3147_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Aba_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal Asu_1_fu_380 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal Asu_3_fu_3697_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_sig_allocacmp_Asu_1_load : STD_LOGIC_VECTOR (63 downto 0);
    signal round_fu_384 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    signal add_ln117_fu_905_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_round_1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal KeccakF_RoundConstants_ce1_local : STD_LOGIC;
    signal KeccakF_RoundConstants_ce0_local : STD_LOGIC;
    signal tmp_s_fu_882_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln68_fu_892_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln120_fu_991_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln120_1_fu_1003_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln120_2_fu_997_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln121_fu_1015_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln121_1_fu_1027_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln121_2_fu_1021_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln122_fu_1039_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln122_1_fu_1045_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln122_2_fu_1051_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln123_fu_1063_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln123_1_fu_1069_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln123_2_fu_1075_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln124_fu_1087_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln124_1_fu_1099_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln124_2_fu_1093_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_fu_1033_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln127_fu_1111_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_fu_1115_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln_fu_1123_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_fu_1105_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_fu_1057_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln128_fu_1137_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_298_fu_1141_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln59_fu_1149_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_fu_1009_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_fu_1081_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln129_fu_1163_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_299_fu_1167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln60_fu_1175_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln130_fu_1189_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_300_fu_1193_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln61_fu_1201_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln131_fu_1215_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_301_fu_1219_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln62_fu_1227_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal Da_fu_1131_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal De_fu_1157_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Age_2_fu_1247_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln136_fu_1253_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal lshr_ln_fu_1257_p4 : STD_LOGIC_VECTOR (43 downto 0);
    signal Di_fu_1183_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Aki_2_fu_1275_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln138_fu_1281_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal lshr_ln2_fu_1285_p4 : STD_LOGIC_VECTOR (42 downto 0);
    signal Do_fu_1209_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Amo_2_fu_1303_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln140_fu_1309_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal lshr_ln3_fu_1313_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal Du_fu_1235_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Asu_2_fu_1331_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln142_fu_1337_p1 : STD_LOGIC_VECTOR (49 downto 0);
    signal lshr_ln4_fu_1341_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal BCe_1_fu_1267_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_1_fu_1295_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln144_fu_1359_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Aba_4_fu_1241_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln144_1_fu_1371_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln144_fu_1365_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_1_fu_1323_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln145_fu_1383_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln145_fu_1389_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_1_fu_1351_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln146_fu_1401_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln146_fu_1407_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln147_fu_1419_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln147_fu_1425_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln148_fu_1437_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln148_fu_1443_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Abo_2_fu_1455_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln151_fu_1461_p1 : STD_LOGIC_VECTOR (35 downto 0);
    signal lshr_ln5_fu_1465_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal Agu_2_fu_1483_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln153_fu_1489_p1 : STD_LOGIC_VECTOR (43 downto 0);
    signal lshr_ln6_fu_1493_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal Aka_2_fu_1511_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln155_fu_1517_p1 : STD_LOGIC_VECTOR (60 downto 0);
    signal lshr_ln7_fu_1521_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal Ame_2_fu_1539_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln157_fu_1545_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal lshr_ln8_fu_1549_p4 : STD_LOGIC_VECTOR (44 downto 0);
    signal Asi_2_fu_1567_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln159_fu_1573_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln9_fu_1577_p4 : STD_LOGIC_VECTOR (60 downto 0);
    signal BCe_2_fu_1503_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_2_fu_1531_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln160_fu_1595_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln160_fu_1601_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_2_fu_1475_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_2_fu_1559_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln161_fu_1613_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln161_fu_1619_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_2_fu_1587_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln162_fu_1631_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln162_fu_1637_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln163_fu_1649_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln163_fu_1655_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln164_fu_1667_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln164_fu_1673_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Abe_2_fu_1685_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln167_fu_1691_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_302_fu_1695_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal Agi_2_fu_1711_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln169_fu_1717_p1 : STD_LOGIC_VECTOR (57 downto 0);
    signal lshr_ln10_fu_1721_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal Ako_2_fu_1739_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln171_fu_1745_p1 : STD_LOGIC_VECTOR (38 downto 0);
    signal lshr_ln11_fu_1749_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal Amu_2_fu_1767_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln173_fu_1773_p1 : STD_LOGIC_VECTOR (55 downto 0);
    signal lshr_ln12_fu_1777_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal Asa_2_fu_1795_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln175_fu_1801_p1 : STD_LOGIC_VECTOR (45 downto 0);
    signal lshr_ln13_fu_1805_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal BCe_3_fu_1731_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_3_fu_1759_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln176_fu_1823_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln176_fu_1829_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_3_fu_1703_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_3_fu_1787_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln177_fu_1841_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln177_fu_1847_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_3_fu_1815_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln178_fu_1859_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln178_fu_1865_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln179_fu_1877_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln179_fu_1883_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln180_fu_1895_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln180_fu_1901_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Abu_2_fu_1913_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln183_fu_1919_p1 : STD_LOGIC_VECTOR (36 downto 0);
    signal lshr_ln14_fu_1923_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal Aga_2_fu_1941_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln185_fu_1947_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal lshr_ln15_fu_1951_p4 : STD_LOGIC_VECTOR (35 downto 0);
    signal Ake_2_fu_1969_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln187_fu_1975_p1 : STD_LOGIC_VECTOR (53 downto 0);
    signal lshr_ln16_fu_1979_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal Ami_2_fu_1997_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln189_fu_2003_p1 : STD_LOGIC_VECTOR (48 downto 0);
    signal lshr_ln17_fu_2007_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal Aso_2_fu_2025_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln191_fu_2031_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln18_fu_2035_p4 : STD_LOGIC_VECTOR (55 downto 0);
    signal BCe_4_fu_1961_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_4_fu_1989_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln192_fu_2053_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln192_fu_2059_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_4_fu_1933_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_4_fu_2017_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln193_fu_2071_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln193_fu_2077_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_4_fu_2045_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln194_fu_2089_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln194_fu_2095_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln195_fu_2107_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln195_fu_2113_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln196_fu_2125_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln196_fu_2131_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Abi_2_fu_2143_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln199_fu_2149_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln19_fu_2153_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal Ago_2_fu_2171_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln201_fu_2177_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal lshr_ln20_fu_2181_p4 : STD_LOGIC_VECTOR (54 downto 0);
    signal Aku_2_fu_2199_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln203_fu_2205_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal lshr_ln21_fu_2209_p4 : STD_LOGIC_VECTOR (38 downto 0);
    signal Ama_2_fu_2227_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln205_fu_2233_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal lshr_ln22_fu_2237_p4 : STD_LOGIC_VECTOR (40 downto 0);
    signal Ase_2_fu_2255_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln207_fu_2261_p1 : STD_LOGIC_VECTOR (61 downto 0);
    signal lshr_ln23_fu_2265_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal BCe_5_fu_2191_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_5_fu_2219_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln208_fu_2283_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_5_fu_2163_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln208_fu_2289_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_5_fu_2247_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln209_fu_2301_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln209_fu_2307_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_5_fu_2275_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln210_fu_2319_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln210_fu_2325_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln211_fu_2337_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln211_fu_2343_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln212_fu_2355_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln212_fu_2361_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Esa_fu_2295_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eka_fu_1835_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ema_fu_2065_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eba_fu_1377_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln215_1_fu_2379_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ega_fu_1607_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln215_2_fu_2385_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln215_fu_2373_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ege_fu_1625_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebe_fu_1395_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eke_fu_1853_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eme_fu_2083_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln216_fu_2403_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ese_fu_2313_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln216_2_fu_2409_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln216_1_fu_2397_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Esi_fu_2331_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Emi_fu_2101_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebi_fu_1413_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Egi_fu_1643_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln217_fu_2427_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eki_fu_1871_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln217_2_fu_2433_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln217_1_fu_2421_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eko_fu_1889_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ego_fu_1661_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebo_fu_1431_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eso_fu_2349_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln218_1_fu_2451_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Emo_fu_2119_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln218_2_fu_2457_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln218_fu_2445_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebu_fu_1449_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Esu_fu_2367_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Egu_fu_1679_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eku_fu_1907_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln219_1_fu_2475_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Emu_fu_2137_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln219_2_fu_2481_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln219_fu_2469_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_6_fu_2415_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln222_fu_2493_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_303_fu_2497_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln63_fu_2505_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_6_fu_2487_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_6_fu_2439_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln223_fu_2519_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_304_fu_2523_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal BCa_6_fu_2391_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln64_fu_2531_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_6_fu_2463_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln224_fu_2545_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_305_fu_2549_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln65_fu_2557_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln225_fu_2571_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_306_fu_2575_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln66_fu_2583_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln226_fu_2597_p1 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp_307_fu_2601_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln67_fu_2609_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal Da_1_fu_2513_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal De_1_fu_2539_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ege_1_fu_2629_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Di_1_fu_2565_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eki_1_fu_2649_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Do_1_fu_2591_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Emo_1_fu_2669_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Du_1_fu_2617_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Esu_1_fu_2689_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebo_1_fu_2709_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Egu_1_fu_2729_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eka_1_fu_2749_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eme_1_fu_2769_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Esi_1_fu_2789_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebe_1_fu_2809_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Egi_1_fu_2827_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eko_1_fu_2847_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Emu_1_fu_2867_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Esa_1_fu_2887_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebu_1_fu_2907_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ega_1_fu_2927_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eke_1_fu_2947_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Emi_1_fu_2967_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eso_1_fu_2987_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ebi_1_fu_3007_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ego_1_fu_3027_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Eku_1_fu_3047_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ema_1_fu_3067_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal Ese_1_fu_3087_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_7_fu_3107_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_7_fu_3113_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln239_fu_3131_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln239_1_fu_3143_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln239_fu_3137_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_7_fu_3119_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln240_fu_3153_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln240_fu_3159_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_7_fu_3125_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln241_fu_3171_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln241_fu_3177_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln242_fu_3189_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln242_fu_3195_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln243_fu_3206_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln243_fu_3211_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_8_fu_3229_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_8_fu_3235_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln255_fu_3253_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln255_fu_3259_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_8_fu_3223_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_8_fu_3241_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln256_fu_3271_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln256_fu_3277_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_8_fu_3247_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln257_fu_3289_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln257_fu_3295_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln258_fu_3307_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln258_fu_3313_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln259_fu_3325_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln259_fu_3331_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_9_fu_3349_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_9_fu_3355_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln271_fu_3373_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_9_fu_3343_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln271_fu_3379_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_9_fu_3361_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln272_fu_3391_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln272_fu_3397_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_9_fu_3367_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln273_fu_3409_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln273_fu_3415_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln274_fu_3427_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln274_fu_3433_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln275_fu_3445_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln275_fu_3451_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_10_fu_3469_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_10_fu_3475_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln287_fu_3493_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_10_fu_3463_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln287_fu_3499_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_10_fu_3481_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln288_fu_3511_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln288_fu_3517_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_10_fu_3487_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln289_fu_3529_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln289_fu_3535_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln290_fu_3547_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln290_fu_3553_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln291_fu_3565_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln291_fu_3571_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCe_11_fu_3589_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCi_11_fu_3595_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln303_fu_3613_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln303_fu_3619_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCa_11_fu_3583_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCo_11_fu_3601_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln304_fu_3631_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln304_fu_3637_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal BCu_11_fu_3607_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln305_fu_3649_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln305_fu_3655_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln306_fu_3667_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln306_fu_3673_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln307_fu_3685_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal and_ln307_fu_3691_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sikep503_kem_enc_hw_KeccakF1600_StatePermute_Pipeline_VITIS_LOOP_117_1_KeccakF_RoundConstants_ROM_AUTO_1R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    KeccakF_RoundConstants_U : component sikep503_kem_enc_hw_KeccakF1600_StatePermute_Pipeline_VITIS_LOOP_117_1_KeccakF_RoundConstants_ROM_AUTO_1R
    generic map (
        DataWidth => 64,
        AddressRange => 24,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => KeccakF_RoundConstants_address0,
        ce0 => KeccakF_RoundConstants_ce0_local,
        q0 => KeccakF_RoundConstants_q0,
        address1 => KeccakF_RoundConstants_address1,
        ce1 => KeccakF_RoundConstants_ce1_local,
        q1 => KeccakF_RoundConstants_q1);

    flow_control_loop_pipe_sequential_init_U : component sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    Aba_1_fu_376_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Aba_1_fu_376 <= Aba;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Aba_1_fu_376 <= Aba_3_fu_3147_p2;
                end if;
            end if; 
        end if;
    end process;

    Abe_1_fu_372_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Abe_1_fu_372 <= Abe;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Abe_1_fu_372 <= Abe_3_fu_3165_p2;
                end if;
            end if; 
        end if;
    end process;

    Abi_1_fu_368_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Abi_1_fu_368 <= Abi;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Abi_1_fu_368 <= Abi_3_fu_3183_p2;
                end if;
            end if; 
        end if;
    end process;

    Abo_1_fu_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Abo_1_fu_364 <= Abo;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Abo_1_fu_364 <= Abo_3_fu_3200_p2;
                end if;
            end if; 
        end if;
    end process;

    Abu_1_fu_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Abu_1_fu_360 <= Abu;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Abu_1_fu_360 <= Abu_3_fu_3217_p2;
                end if;
            end if; 
        end if;
    end process;

    Aga_1_fu_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Aga_1_fu_356 <= Aga;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Aga_1_fu_356 <= Aga_3_fu_3265_p2;
                end if;
            end if; 
        end if;
    end process;

    Age_1_fu_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Age_1_fu_352 <= Age;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Age_1_fu_352 <= Age_3_fu_3283_p2;
                end if;
            end if; 
        end if;
    end process;

    Agi_1_fu_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Agi_1_fu_348 <= Agi;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Agi_1_fu_348 <= Agi_3_fu_3301_p2;
                end if;
            end if; 
        end if;
    end process;

    Ago_1_fu_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ago_1_fu_344 <= Ago;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ago_1_fu_344 <= Ago_3_fu_3319_p2;
                end if;
            end if; 
        end if;
    end process;

    Agu_1_fu_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Agu_1_fu_340 <= Agu;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Agu_1_fu_340 <= Agu_3_fu_3337_p2;
                end if;
            end if; 
        end if;
    end process;

    Aka_1_fu_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Aka_1_fu_336 <= Aka;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Aka_1_fu_336 <= Aka_3_fu_3385_p2;
                end if;
            end if; 
        end if;
    end process;

    Ake_1_fu_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ake_1_fu_332 <= Ake;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ake_1_fu_332 <= Ake_3_fu_3403_p2;
                end if;
            end if; 
        end if;
    end process;

    Aki_1_fu_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Aki_1_fu_328 <= Aki;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Aki_1_fu_328 <= Aki_3_fu_3421_p2;
                end if;
            end if; 
        end if;
    end process;

    Ako_1_fu_324_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ako_1_fu_324 <= Ako;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ako_1_fu_324 <= Ako_3_fu_3439_p2;
                end if;
            end if; 
        end if;
    end process;

    Aku_1_fu_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Aku_1_fu_320 <= Aku;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Aku_1_fu_320 <= Aku_3_fu_3457_p2;
                end if;
            end if; 
        end if;
    end process;

    Ama_1_fu_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ama_1_fu_316 <= Ama;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ama_1_fu_316 <= Ama_3_fu_3505_p2;
                end if;
            end if; 
        end if;
    end process;

    Ame_1_fu_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ame_1_fu_312 <= Ame;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ame_1_fu_312 <= Ame_3_fu_3523_p2;
                end if;
            end if; 
        end if;
    end process;

    Ami_1_fu_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ami_1_fu_308 <= Ami;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ami_1_fu_308 <= Ami_3_fu_3541_p2;
                end if;
            end if; 
        end if;
    end process;

    Amo_1_fu_304_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Amo_1_fu_304 <= Amo;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Amo_1_fu_304 <= Amo_3_fu_3559_p2;
                end if;
            end if; 
        end if;
    end process;

    Amu_1_fu_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Amu_1_fu_300 <= Amu;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Amu_1_fu_300 <= Amu_3_fu_3577_p2;
                end if;
            end if; 
        end if;
    end process;

    Asa_1_fu_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Asa_1_fu_296 <= Asa;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Asa_1_fu_296 <= Asa_3_fu_3625_p2;
                end if;
            end if; 
        end if;
    end process;

    Ase_1_fu_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Ase_1_fu_292 <= Ase;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Ase_1_fu_292 <= Ase_3_fu_3643_p2;
                end if;
            end if; 
        end if;
    end process;

    Asi_1_fu_288_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Asi_1_fu_288 <= Asi;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Asi_1_fu_288 <= Asi_3_fu_3661_p2;
                end if;
            end if; 
        end if;
    end process;

    Aso_1_fu_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Aso_1_fu_284 <= Aso;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Aso_1_fu_284 <= Aso_3_fu_3679_p2;
                end if;
            end if; 
        end if;
    end process;

    Asu_1_fu_380_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    Asu_1_fu_380 <= Asu;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    Asu_1_fu_380 <= Asu_3_fu_3697_p2;
                end if;
            end if; 
        end if;
    end process;

    round_fu_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln117_fu_871_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    round_fu_384 <= add_ln117_fu_905_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    round_fu_384 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                Eba_2_reg_4149 <= Eba_2_fu_2623_p2;
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln117_reg_4135 <= icmp_ln117_fu_871_p2;
                lshr_ln24_reg_4161 <= Ege_1_fu_2629_p2(63 downto 20);
                lshr_ln25_reg_4171 <= Eki_1_fu_2649_p2(63 downto 21);
                lshr_ln26_reg_4181 <= Emo_1_fu_2669_p2(63 downto 43);
                lshr_ln27_reg_4191 <= Esu_1_fu_2689_p2(63 downto 50);
                lshr_ln28_reg_4206 <= Ebo_1_fu_2709_p2(63 downto 36);
                lshr_ln29_reg_4216 <= Egu_1_fu_2729_p2(63 downto 44);
                lshr_ln30_reg_4226 <= Eka_1_fu_2749_p2(63 downto 61);
                lshr_ln31_reg_4236 <= Eme_1_fu_2769_p2(63 downto 19);
                lshr_ln32_reg_4246 <= Esi_1_fu_2789_p2(63 downto 3);
                lshr_ln33_reg_4266 <= Egi_1_fu_2827_p2(63 downto 58);
                lshr_ln34_reg_4276 <= Eko_1_fu_2847_p2(63 downto 39);
                lshr_ln35_reg_4286 <= Emu_1_fu_2867_p2(63 downto 56);
                lshr_ln36_reg_4296 <= Esa_1_fu_2887_p2(63 downto 46);
                lshr_ln37_reg_4306 <= Ebu_1_fu_2907_p2(63 downto 37);
                lshr_ln38_reg_4316 <= Ega_1_fu_2927_p2(63 downto 28);
                lshr_ln39_reg_4326 <= Eke_1_fu_2947_p2(63 downto 54);
                lshr_ln40_reg_4336 <= Emi_1_fu_2967_p2(63 downto 49);
                lshr_ln41_reg_4346 <= Eso_1_fu_2987_p2(63 downto 8);
                lshr_ln42_reg_4356 <= Ebi_1_fu_3007_p2(63 downto 2);
                lshr_ln43_reg_4366 <= Ego_1_fu_3027_p2(63 downto 9);
                lshr_ln44_reg_4376 <= Eku_1_fu_3047_p2(63 downto 25);
                lshr_ln45_reg_4386 <= Ema_1_fu_3067_p2(63 downto 23);
                lshr_ln46_reg_4396 <= Ese_1_fu_3087_p2(63 downto 62);
                tmp_308_reg_4256 <= Ebe_1_fu_2809_p2(63 downto 63);
                trunc_ln231_reg_4156 <= trunc_ln231_fu_2635_p1;
                trunc_ln233_reg_4166 <= trunc_ln233_fu_2655_p1;
                trunc_ln235_reg_4176 <= trunc_ln235_fu_2675_p1;
                trunc_ln237_reg_4186 <= trunc_ln237_fu_2695_p1;
                trunc_ln246_reg_4201 <= trunc_ln246_fu_2715_p1;
                trunc_ln248_reg_4211 <= trunc_ln248_fu_2735_p1;
                trunc_ln250_reg_4221 <= trunc_ln250_fu_2755_p1;
                trunc_ln252_reg_4231 <= trunc_ln252_fu_2775_p1;
                trunc_ln254_reg_4241 <= trunc_ln254_fu_2795_p1;
                trunc_ln262_reg_4251 <= trunc_ln262_fu_2815_p1;
                trunc_ln264_reg_4261 <= trunc_ln264_fu_2833_p1;
                trunc_ln266_reg_4271 <= trunc_ln266_fu_2853_p1;
                trunc_ln268_reg_4281 <= trunc_ln268_fu_2873_p1;
                trunc_ln270_reg_4291 <= trunc_ln270_fu_2893_p1;
                trunc_ln278_reg_4301 <= trunc_ln278_fu_2913_p1;
                trunc_ln280_reg_4311 <= trunc_ln280_fu_2933_p1;
                trunc_ln282_reg_4321 <= trunc_ln282_fu_2953_p1;
                trunc_ln284_reg_4331 <= trunc_ln284_fu_2973_p1;
                trunc_ln286_reg_4341 <= trunc_ln286_fu_2993_p1;
                trunc_ln294_reg_4351 <= trunc_ln294_fu_3013_p1;
                trunc_ln296_reg_4361 <= trunc_ln296_fu_3033_p1;
                trunc_ln298_reg_4371 <= trunc_ln298_fu_3053_p1;
                trunc_ln300_reg_4381 <= trunc_ln300_fu_3073_p1;
                trunc_ln302_reg_4391 <= trunc_ln302_fu_3093_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                KeccakF_RoundConstants_load_1_reg_4196 <= KeccakF_RoundConstants_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    Aba_1_out <= Aba_1_fu_376;

    Aba_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Aba_1_out_ap_vld <= ap_const_logic_1;
        else 
            Aba_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Aba_3_fu_3147_p2 <= (xor_ln239_1_fu_3143_p2 xor and_ln239_fu_3137_p2);
    Aba_4_fu_1241_p2 <= (ap_sig_allocacmp_Aba_1_load xor Da_fu_1131_p2);
    Abe_1_out <= Abe_1_fu_372;

    Abe_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Abe_1_out_ap_vld <= ap_const_logic_1;
        else 
            Abe_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Abe_2_fu_1685_p2 <= (ap_sig_allocacmp_Abe_1_load xor De_fu_1157_p2);
    Abe_3_fu_3165_p2 <= (and_ln240_fu_3159_p2 xor BCe_7_fu_3107_p3);
    Abi_1_out <= Abi_1_fu_368;

    Abi_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Abi_1_out_ap_vld <= ap_const_logic_1;
        else 
            Abi_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Abi_2_fu_2143_p2 <= (ap_sig_allocacmp_Abi_1_load xor Di_fu_1183_p2);
    Abi_3_fu_3183_p2 <= (and_ln241_fu_3177_p2 xor BCi_7_fu_3113_p3);
    Abo_1_out <= Abo_1_fu_364;

    Abo_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Abo_1_out_ap_vld <= ap_const_logic_1;
        else 
            Abo_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Abo_2_fu_1455_p2 <= (ap_sig_allocacmp_Abo_1_load xor Do_fu_1209_p2);
    Abo_3_fu_3200_p2 <= (and_ln242_fu_3195_p2 xor BCo_7_fu_3119_p3);
    Abu_1_out <= Abu_1_fu_360;

    Abu_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Abu_1_out_ap_vld <= ap_const_logic_1;
        else 
            Abu_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Abu_2_fu_1913_p2 <= (ap_sig_allocacmp_Abu_1_load xor Du_fu_1235_p2);
    Abu_3_fu_3217_p2 <= (and_ln243_fu_3211_p2 xor BCu_7_fu_3125_p3);
    Aga_1_out <= Aga_1_fu_356;

    Aga_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Aga_1_out_ap_vld <= ap_const_logic_1;
        else 
            Aga_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Aga_2_fu_1941_p2 <= (ap_sig_allocacmp_Aga_1_load xor Da_fu_1131_p2);
    Aga_3_fu_3265_p2 <= (and_ln255_fu_3259_p2 xor BCa_8_fu_3223_p3);
    Age_1_out <= Age_1_fu_352;

    Age_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Age_1_out_ap_vld <= ap_const_logic_1;
        else 
            Age_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Age_2_fu_1247_p2 <= (ap_sig_allocacmp_Age_1_load xor De_fu_1157_p2);
    Age_3_fu_3283_p2 <= (and_ln256_fu_3277_p2 xor BCe_8_fu_3229_p3);
    Agi_1_out <= Agi_1_fu_348;

    Agi_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Agi_1_out_ap_vld <= ap_const_logic_1;
        else 
            Agi_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Agi_2_fu_1711_p2 <= (ap_sig_allocacmp_Agi_1_load xor Di_fu_1183_p2);
    Agi_3_fu_3301_p2 <= (and_ln257_fu_3295_p2 xor BCi_8_fu_3235_p3);
    Ago_1_out <= Ago_1_fu_344;

    Ago_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ago_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ago_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ago_2_fu_2171_p2 <= (ap_sig_allocacmp_Ago_1_load xor Do_fu_1209_p2);
    Ago_3_fu_3319_p2 <= (and_ln258_fu_3313_p2 xor BCo_8_fu_3241_p3);
    Agu_1_out <= Agu_1_fu_340;

    Agu_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Agu_1_out_ap_vld <= ap_const_logic_1;
        else 
            Agu_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Agu_2_fu_1483_p2 <= (ap_sig_allocacmp_Agu_1_load xor Du_fu_1235_p2);
    Agu_3_fu_3337_p2 <= (and_ln259_fu_3331_p2 xor BCu_8_fu_3247_p3);
    Aka_1_out <= Aka_1_fu_336;

    Aka_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Aka_1_out_ap_vld <= ap_const_logic_1;
        else 
            Aka_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Aka_2_fu_1511_p2 <= (ap_sig_allocacmp_Aka_1_load xor Da_fu_1131_p2);
    Aka_3_fu_3385_p2 <= (and_ln271_fu_3379_p2 xor BCa_9_fu_3343_p3);
    Ake_1_out <= Ake_1_fu_332;

    Ake_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ake_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ake_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ake_2_fu_1969_p2 <= (ap_sig_allocacmp_Ake_1_load xor De_fu_1157_p2);
    Ake_3_fu_3403_p2 <= (and_ln272_fu_3397_p2 xor BCe_9_fu_3349_p3);
    Aki_1_out <= Aki_1_fu_328;

    Aki_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Aki_1_out_ap_vld <= ap_const_logic_1;
        else 
            Aki_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Aki_2_fu_1275_p2 <= (ap_sig_allocacmp_Aki_1_load xor Di_fu_1183_p2);
    Aki_3_fu_3421_p2 <= (and_ln273_fu_3415_p2 xor BCi_9_fu_3355_p3);
    Ako_1_out <= Ako_1_fu_324;

    Ako_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ako_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ako_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ako_2_fu_1739_p2 <= (ap_sig_allocacmp_Ako_1_load xor Do_fu_1209_p2);
    Ako_3_fu_3439_p2 <= (and_ln274_fu_3433_p2 xor BCo_9_fu_3361_p3);
    Aku_1_out <= Aku_1_fu_320;

    Aku_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Aku_1_out_ap_vld <= ap_const_logic_1;
        else 
            Aku_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Aku_2_fu_2199_p2 <= (ap_sig_allocacmp_Aku_1_load xor Du_fu_1235_p2);
    Aku_3_fu_3457_p2 <= (and_ln275_fu_3451_p2 xor BCu_9_fu_3367_p3);
    Ama_1_out <= Ama_1_fu_316;

    Ama_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ama_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ama_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ama_2_fu_2227_p2 <= (ap_sig_allocacmp_Ama_1_load xor Da_fu_1131_p2);
    Ama_3_fu_3505_p2 <= (and_ln287_fu_3499_p2 xor BCa_10_fu_3463_p3);
    Ame_1_out <= Ame_1_fu_312;

    Ame_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ame_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ame_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ame_2_fu_1539_p2 <= (ap_sig_allocacmp_Ame_1_load xor De_fu_1157_p2);
    Ame_3_fu_3523_p2 <= (and_ln288_fu_3517_p2 xor BCe_10_fu_3469_p3);
    Ami_1_out <= Ami_1_fu_308;

    Ami_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ami_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ami_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ami_2_fu_1997_p2 <= (ap_sig_allocacmp_Ami_1_load xor Di_fu_1183_p2);
    Ami_3_fu_3541_p2 <= (and_ln289_fu_3535_p2 xor BCi_10_fu_3475_p3);
    Amo_1_out <= Amo_1_fu_304;

    Amo_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Amo_1_out_ap_vld <= ap_const_logic_1;
        else 
            Amo_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Amo_2_fu_1303_p2 <= (ap_sig_allocacmp_Amo_1_load xor Do_fu_1209_p2);
    Amo_3_fu_3559_p2 <= (and_ln290_fu_3553_p2 xor BCo_10_fu_3481_p3);
    Amu_1_out <= Amu_1_fu_300;

    Amu_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Amu_1_out_ap_vld <= ap_const_logic_1;
        else 
            Amu_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Amu_2_fu_1767_p2 <= (ap_sig_allocacmp_Amu_1_load xor Du_fu_1235_p2);
    Amu_3_fu_3577_p2 <= (and_ln291_fu_3571_p2 xor BCu_10_fu_3487_p3);
    Asa_1_out <= Asa_1_fu_296;

    Asa_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Asa_1_out_ap_vld <= ap_const_logic_1;
        else 
            Asa_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Asa_2_fu_1795_p2 <= (ap_sig_allocacmp_Asa_1_load xor Da_fu_1131_p2);
    Asa_3_fu_3625_p2 <= (and_ln303_fu_3619_p2 xor BCa_11_fu_3583_p3);
    Ase_1_out <= Ase_1_fu_292;

    Ase_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Ase_1_out_ap_vld <= ap_const_logic_1;
        else 
            Ase_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Ase_2_fu_2255_p2 <= (ap_sig_allocacmp_Ase_1_load xor De_fu_1157_p2);
    Ase_3_fu_3643_p2 <= (and_ln304_fu_3637_p2 xor BCe_11_fu_3589_p3);
    Asi_1_out <= Asi_1_fu_288;

    Asi_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Asi_1_out_ap_vld <= ap_const_logic_1;
        else 
            Asi_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Asi_2_fu_1567_p2 <= (ap_sig_allocacmp_Asi_1_load xor Di_fu_1183_p2);
    Asi_3_fu_3661_p2 <= (and_ln305_fu_3655_p2 xor BCi_11_fu_3595_p3);
    Aso_1_out <= Aso_1_fu_284;

    Aso_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Aso_1_out_ap_vld <= ap_const_logic_1;
        else 
            Aso_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Aso_2_fu_2025_p2 <= (ap_sig_allocacmp_Aso_1_load xor Do_fu_1209_p2);
    Aso_3_fu_3679_p2 <= (and_ln306_fu_3673_p2 xor BCo_11_fu_3601_p3);
    Asu_1_out <= Asu_1_fu_380;

    Asu_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln117_reg_4135, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (icmp_ln117_reg_4135 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Asu_1_out_ap_vld <= ap_const_logic_1;
        else 
            Asu_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    Asu_2_fu_1331_p2 <= (ap_sig_allocacmp_Asu_1_load xor Du_fu_1235_p2);
    Asu_3_fu_3697_p2 <= (and_ln307_fu_3691_p2 xor BCu_11_fu_3607_p3);
    BCa_10_fu_3463_p3 <= (trunc_ln278_reg_4301 & lshr_ln37_reg_4306);
    BCa_11_fu_3583_p3 <= (trunc_ln294_reg_4351 & lshr_ln42_reg_4356);
    BCa_2_fu_1475_p3 <= (trunc_ln151_fu_1461_p1 & lshr_ln5_fu_1465_p4);
    BCa_3_fu_1703_p3 <= (trunc_ln167_fu_1691_p1 & tmp_302_fu_1695_p3);
    BCa_4_fu_1933_p3 <= (trunc_ln183_fu_1919_p1 & lshr_ln14_fu_1923_p4);
    BCa_5_fu_2163_p3 <= (trunc_ln199_fu_2149_p1 & lshr_ln19_fu_2153_p4);
    BCa_6_fu_2391_p2 <= (xor_ln215_fu_2373_p2 xor xor_ln215_2_fu_2385_p2);
    BCa_8_fu_3223_p3 <= (trunc_ln246_reg_4201 & lshr_ln28_reg_4206);
    BCa_9_fu_3343_p3 <= (trunc_ln262_reg_4251 & tmp_308_reg_4256);
    BCa_fu_1009_p2 <= (xor_ln120_2_fu_997_p2 xor xor_ln120_1_fu_1003_p2);
    BCe_10_fu_3469_p3 <= (trunc_ln280_reg_4311 & lshr_ln38_reg_4316);
    BCe_11_fu_3589_p3 <= (trunc_ln296_reg_4361 & lshr_ln43_reg_4366);
    BCe_1_fu_1267_p3 <= (trunc_ln136_fu_1253_p1 & lshr_ln_fu_1257_p4);
    BCe_2_fu_1503_p3 <= (trunc_ln153_fu_1489_p1 & lshr_ln6_fu_1493_p4);
    BCe_3_fu_1731_p3 <= (trunc_ln169_fu_1717_p1 & lshr_ln10_fu_1721_p4);
    BCe_4_fu_1961_p3 <= (trunc_ln185_fu_1947_p1 & lshr_ln15_fu_1951_p4);
    BCe_5_fu_2191_p3 <= (trunc_ln201_fu_2177_p1 & lshr_ln20_fu_2181_p4);
    BCe_6_fu_2415_p2 <= (xor_ln216_2_fu_2409_p2 xor xor_ln216_1_fu_2397_p2);
    BCe_7_fu_3107_p3 <= (trunc_ln231_reg_4156 & lshr_ln24_reg_4161);
    BCe_8_fu_3229_p3 <= (trunc_ln248_reg_4211 & lshr_ln29_reg_4216);
    BCe_9_fu_3349_p3 <= (trunc_ln264_reg_4261 & lshr_ln33_reg_4266);
    BCe_fu_1033_p2 <= (xor_ln121_2_fu_1021_p2 xor xor_ln121_1_fu_1027_p2);
    BCi_10_fu_3475_p3 <= (trunc_ln282_reg_4321 & lshr_ln39_reg_4326);
    BCi_11_fu_3595_p3 <= (trunc_ln298_reg_4371 & lshr_ln44_reg_4376);
    BCi_1_fu_1295_p3 <= (trunc_ln138_fu_1281_p1 & lshr_ln2_fu_1285_p4);
    BCi_2_fu_1531_p3 <= (trunc_ln155_fu_1517_p1 & lshr_ln7_fu_1521_p4);
    BCi_3_fu_1759_p3 <= (trunc_ln171_fu_1745_p1 & lshr_ln11_fu_1749_p4);
    BCi_4_fu_1989_p3 <= (trunc_ln187_fu_1975_p1 & lshr_ln16_fu_1979_p4);
    BCi_5_fu_2219_p3 <= (trunc_ln203_fu_2205_p1 & lshr_ln21_fu_2209_p4);
    BCi_6_fu_2439_p2 <= (xor_ln217_2_fu_2433_p2 xor xor_ln217_1_fu_2421_p2);
    BCi_7_fu_3113_p3 <= (trunc_ln233_reg_4166 & lshr_ln25_reg_4171);
    BCi_8_fu_3235_p3 <= (trunc_ln250_reg_4221 & lshr_ln30_reg_4226);
    BCi_9_fu_3355_p3 <= (trunc_ln266_reg_4271 & lshr_ln34_reg_4276);
    BCi_fu_1057_p2 <= (xor_ln122_2_fu_1051_p2 xor ap_sig_allocacmp_Abi_1_load);
    BCo_10_fu_3481_p3 <= (trunc_ln284_reg_4331 & lshr_ln40_reg_4336);
    BCo_11_fu_3601_p3 <= (trunc_ln300_reg_4381 & lshr_ln45_reg_4386);
    BCo_1_fu_1323_p3 <= (trunc_ln140_fu_1309_p1 & lshr_ln3_fu_1313_p4);
    BCo_2_fu_1559_p3 <= (trunc_ln157_fu_1545_p1 & lshr_ln8_fu_1549_p4);
    BCo_3_fu_1787_p3 <= (trunc_ln173_fu_1773_p1 & lshr_ln12_fu_1777_p4);
    BCo_4_fu_2017_p3 <= (trunc_ln189_fu_2003_p1 & lshr_ln17_fu_2007_p4);
    BCo_5_fu_2247_p3 <= (trunc_ln205_fu_2233_p1 & lshr_ln22_fu_2237_p4);
    BCo_6_fu_2463_p2 <= (xor_ln218_fu_2445_p2 xor xor_ln218_2_fu_2457_p2);
    BCo_7_fu_3119_p3 <= (trunc_ln235_reg_4176 & lshr_ln26_reg_4181);
    BCo_8_fu_3241_p3 <= (trunc_ln252_reg_4231 & lshr_ln31_reg_4236);
    BCo_9_fu_3361_p3 <= (trunc_ln268_reg_4281 & lshr_ln35_reg_4286);
    BCo_fu_1081_p2 <= (xor_ln123_2_fu_1075_p2 xor ap_sig_allocacmp_Abo_1_load);
    BCu_10_fu_3487_p3 <= (trunc_ln286_reg_4341 & lshr_ln41_reg_4346);
    BCu_11_fu_3607_p3 <= (trunc_ln302_reg_4391 & lshr_ln46_reg_4396);
    BCu_1_fu_1351_p3 <= (trunc_ln142_fu_1337_p1 & lshr_ln4_fu_1341_p4);
    BCu_2_fu_1587_p3 <= (trunc_ln159_fu_1573_p1 & lshr_ln9_fu_1577_p4);
    BCu_3_fu_1815_p3 <= (trunc_ln175_fu_1801_p1 & lshr_ln13_fu_1805_p4);
    BCu_4_fu_2045_p3 <= (trunc_ln191_fu_2031_p1 & lshr_ln18_fu_2035_p4);
    BCu_5_fu_2275_p3 <= (trunc_ln207_fu_2261_p1 & lshr_ln23_fu_2265_p4);
    BCu_6_fu_2487_p2 <= (xor_ln219_fu_2469_p2 xor xor_ln219_2_fu_2481_p2);
    BCu_7_fu_3125_p3 <= (trunc_ln237_reg_4186 & lshr_ln27_reg_4191);
    BCu_8_fu_3247_p3 <= (trunc_ln254_reg_4241 & lshr_ln32_reg_4246);
    BCu_9_fu_3367_p3 <= (trunc_ln270_reg_4291 & lshr_ln36_reg_4296);
    BCu_fu_1105_p2 <= (xor_ln124_2_fu_1093_p2 xor xor_ln124_1_fu_1099_p2);
    Da_1_fu_2513_p2 <= (or_ln63_fu_2505_p3 xor BCu_6_fu_2487_p2);
    Da_fu_1131_p2 <= (or_ln_fu_1123_p3 xor BCu_fu_1105_p2);
    De_1_fu_2539_p2 <= (or_ln64_fu_2531_p3 xor BCa_6_fu_2391_p2);
    De_fu_1157_p2 <= (or_ln59_fu_1149_p3 xor BCa_fu_1009_p2);
    Di_1_fu_2565_p2 <= (or_ln65_fu_2557_p3 xor BCe_6_fu_2415_p2);
    Di_fu_1183_p2 <= (or_ln60_fu_1175_p3 xor BCe_fu_1033_p2);
    Do_1_fu_2591_p2 <= (or_ln66_fu_2583_p3 xor BCi_6_fu_2439_p2);
    Do_fu_1209_p2 <= (or_ln61_fu_1201_p3 xor BCi_fu_1057_p2);
    Du_1_fu_2617_p2 <= (or_ln67_fu_2609_p3 xor BCo_6_fu_2463_p2);
    Du_fu_1235_p2 <= (or_ln62_fu_1227_p3 xor BCo_fu_1081_p2);
    Eba_2_fu_2623_p2 <= (Eba_fu_1377_p2 xor Da_1_fu_2513_p2);
    Eba_fu_1377_p2 <= (xor_ln144_1_fu_1371_p2 xor and_ln144_fu_1365_p2);
    Ebe_1_fu_2809_p2 <= (Ebe_fu_1395_p2 xor De_1_fu_2539_p2);
    Ebe_fu_1395_p2 <= (and_ln145_fu_1389_p2 xor BCe_1_fu_1267_p3);
    Ebi_1_fu_3007_p2 <= (Ebi_fu_1413_p2 xor Di_1_fu_2565_p2);
    Ebi_fu_1413_p2 <= (and_ln146_fu_1407_p2 xor BCi_1_fu_1295_p3);
    Ebo_1_fu_2709_p2 <= (Ebo_fu_1431_p2 xor Do_1_fu_2591_p2);
    Ebo_fu_1431_p2 <= (and_ln147_fu_1425_p2 xor BCo_1_fu_1323_p3);
    Ebu_1_fu_2907_p2 <= (Ebu_fu_1449_p2 xor Du_1_fu_2617_p2);
    Ebu_fu_1449_p2 <= (and_ln148_fu_1443_p2 xor BCu_1_fu_1351_p3);
    Ega_1_fu_2927_p2 <= (Ega_fu_1607_p2 xor Da_1_fu_2513_p2);
    Ega_fu_1607_p2 <= (and_ln160_fu_1601_p2 xor BCa_2_fu_1475_p3);
    Ege_1_fu_2629_p2 <= (Ege_fu_1625_p2 xor De_1_fu_2539_p2);
    Ege_fu_1625_p2 <= (and_ln161_fu_1619_p2 xor BCe_2_fu_1503_p3);
    Egi_1_fu_2827_p2 <= (Egi_fu_1643_p2 xor Di_1_fu_2565_p2);
    Egi_fu_1643_p2 <= (and_ln162_fu_1637_p2 xor BCi_2_fu_1531_p3);
    Ego_1_fu_3027_p2 <= (Ego_fu_1661_p2 xor Do_1_fu_2591_p2);
    Ego_fu_1661_p2 <= (and_ln163_fu_1655_p2 xor BCo_2_fu_1559_p3);
    Egu_1_fu_2729_p2 <= (Egu_fu_1679_p2 xor Du_1_fu_2617_p2);
    Egu_fu_1679_p2 <= (and_ln164_fu_1673_p2 xor BCu_2_fu_1587_p3);
    Eka_1_fu_2749_p2 <= (Eka_fu_1835_p2 xor Da_1_fu_2513_p2);
    Eka_fu_1835_p2 <= (and_ln176_fu_1829_p2 xor BCa_3_fu_1703_p3);
    Eke_1_fu_2947_p2 <= (Eke_fu_1853_p2 xor De_1_fu_2539_p2);
    Eke_fu_1853_p2 <= (and_ln177_fu_1847_p2 xor BCe_3_fu_1731_p3);
    Eki_1_fu_2649_p2 <= (Eki_fu_1871_p2 xor Di_1_fu_2565_p2);
    Eki_fu_1871_p2 <= (and_ln178_fu_1865_p2 xor BCi_3_fu_1759_p3);
    Eko_1_fu_2847_p2 <= (Eko_fu_1889_p2 xor Do_1_fu_2591_p2);
    Eko_fu_1889_p2 <= (and_ln179_fu_1883_p2 xor BCo_3_fu_1787_p3);
    Eku_1_fu_3047_p2 <= (Eku_fu_1907_p2 xor Du_1_fu_2617_p2);
    Eku_fu_1907_p2 <= (and_ln180_fu_1901_p2 xor BCu_3_fu_1815_p3);
    Ema_1_fu_3067_p2 <= (Ema_fu_2065_p2 xor Da_1_fu_2513_p2);
    Ema_fu_2065_p2 <= (and_ln192_fu_2059_p2 xor BCa_4_fu_1933_p3);
    Eme_1_fu_2769_p2 <= (Eme_fu_2083_p2 xor De_1_fu_2539_p2);
    Eme_fu_2083_p2 <= (and_ln193_fu_2077_p2 xor BCe_4_fu_1961_p3);
    Emi_1_fu_2967_p2 <= (Emi_fu_2101_p2 xor Di_1_fu_2565_p2);
    Emi_fu_2101_p2 <= (and_ln194_fu_2095_p2 xor BCi_4_fu_1989_p3);
    Emo_1_fu_2669_p2 <= (Emo_fu_2119_p2 xor Do_1_fu_2591_p2);
    Emo_fu_2119_p2 <= (and_ln195_fu_2113_p2 xor BCo_4_fu_2017_p3);
    Emu_1_fu_2867_p2 <= (Emu_fu_2137_p2 xor Du_1_fu_2617_p2);
    Emu_fu_2137_p2 <= (and_ln196_fu_2131_p2 xor BCu_4_fu_2045_p3);
    Esa_1_fu_2887_p2 <= (Esa_fu_2295_p2 xor Da_1_fu_2513_p2);
    Esa_fu_2295_p2 <= (and_ln208_fu_2289_p2 xor BCa_5_fu_2163_p3);
    Ese_1_fu_3087_p2 <= (Ese_fu_2313_p2 xor De_1_fu_2539_p2);
    Ese_fu_2313_p2 <= (and_ln209_fu_2307_p2 xor BCe_5_fu_2191_p3);
    Esi_1_fu_2789_p2 <= (Esi_fu_2331_p2 xor Di_1_fu_2565_p2);
    Esi_fu_2331_p2 <= (and_ln210_fu_2325_p2 xor BCi_5_fu_2219_p3);
    Eso_1_fu_2987_p2 <= (Eso_fu_2349_p2 xor Do_1_fu_2591_p2);
    Eso_fu_2349_p2 <= (and_ln211_fu_2343_p2 xor BCo_5_fu_2247_p3);
    Esu_1_fu_2689_p2 <= (Esu_fu_2367_p2 xor Du_1_fu_2617_p2);
    Esu_fu_2367_p2 <= (and_ln212_fu_2361_p2 xor BCu_5_fu_2275_p3);
    KeccakF_RoundConstants_address0 <= zext_ln239_fu_900_p1(5 - 1 downto 0);
    KeccakF_RoundConstants_address1 <= zext_ln144_fu_877_p1(5 - 1 downto 0);

    KeccakF_RoundConstants_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            KeccakF_RoundConstants_ce0_local <= ap_const_logic_1;
        else 
            KeccakF_RoundConstants_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    KeccakF_RoundConstants_ce1_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            KeccakF_RoundConstants_ce1_local <= ap_const_logic_1;
        else 
            KeccakF_RoundConstants_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    add_ln117_fu_905_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_round_1) + unsigned(ap_const_lv5_2));
    and_ln144_fu_1365_p2 <= (xor_ln144_fu_1359_p2 and BCi_1_fu_1295_p3);
    and_ln145_fu_1389_p2 <= (xor_ln145_fu_1383_p2 and BCo_1_fu_1323_p3);
    and_ln146_fu_1407_p2 <= (xor_ln146_fu_1401_p2 and BCu_1_fu_1351_p3);
    and_ln147_fu_1425_p2 <= (xor_ln147_fu_1419_p2 and Aba_4_fu_1241_p2);
    and_ln148_fu_1443_p2 <= (xor_ln148_fu_1437_p2 and BCe_1_fu_1267_p3);
    and_ln160_fu_1601_p2 <= (xor_ln160_fu_1595_p2 and BCi_2_fu_1531_p3);
    and_ln161_fu_1619_p2 <= (xor_ln161_fu_1613_p2 and BCo_2_fu_1559_p3);
    and_ln162_fu_1637_p2 <= (xor_ln162_fu_1631_p2 and BCu_2_fu_1587_p3);
    and_ln163_fu_1655_p2 <= (xor_ln163_fu_1649_p2 and BCa_2_fu_1475_p3);
    and_ln164_fu_1673_p2 <= (xor_ln164_fu_1667_p2 and BCe_2_fu_1503_p3);
    and_ln176_fu_1829_p2 <= (xor_ln176_fu_1823_p2 and BCi_3_fu_1759_p3);
    and_ln177_fu_1847_p2 <= (xor_ln177_fu_1841_p2 and BCo_3_fu_1787_p3);
    and_ln178_fu_1865_p2 <= (xor_ln178_fu_1859_p2 and BCu_3_fu_1815_p3);
    and_ln179_fu_1883_p2 <= (xor_ln179_fu_1877_p2 and BCa_3_fu_1703_p3);
    and_ln180_fu_1901_p2 <= (xor_ln180_fu_1895_p2 and BCe_3_fu_1731_p3);
    and_ln192_fu_2059_p2 <= (xor_ln192_fu_2053_p2 and BCi_4_fu_1989_p3);
    and_ln193_fu_2077_p2 <= (xor_ln193_fu_2071_p2 and BCo_4_fu_2017_p3);
    and_ln194_fu_2095_p2 <= (xor_ln194_fu_2089_p2 and BCu_4_fu_2045_p3);
    and_ln195_fu_2113_p2 <= (xor_ln195_fu_2107_p2 and BCa_4_fu_1933_p3);
    and_ln196_fu_2131_p2 <= (xor_ln196_fu_2125_p2 and BCe_4_fu_1961_p3);
    and_ln208_fu_2289_p2 <= (xor_ln208_fu_2283_p2 and BCi_5_fu_2219_p3);
    and_ln209_fu_2307_p2 <= (xor_ln209_fu_2301_p2 and BCo_5_fu_2247_p3);
    and_ln210_fu_2325_p2 <= (xor_ln210_fu_2319_p2 and BCu_5_fu_2275_p3);
    and_ln211_fu_2343_p2 <= (xor_ln211_fu_2337_p2 and BCa_5_fu_2163_p3);
    and_ln212_fu_2361_p2 <= (xor_ln212_fu_2355_p2 and BCe_5_fu_2191_p3);
    and_ln239_fu_3137_p2 <= (xor_ln239_fu_3131_p2 and BCi_7_fu_3113_p3);
    and_ln240_fu_3159_p2 <= (xor_ln240_fu_3153_p2 and BCo_7_fu_3119_p3);
    and_ln241_fu_3177_p2 <= (xor_ln241_fu_3171_p2 and BCu_7_fu_3125_p3);
    and_ln242_fu_3195_p2 <= (xor_ln242_fu_3189_p2 and Eba_2_reg_4149);
    and_ln243_fu_3211_p2 <= (xor_ln243_fu_3206_p2 and BCe_7_fu_3107_p3);
    and_ln255_fu_3259_p2 <= (xor_ln255_fu_3253_p2 and BCi_8_fu_3235_p3);
    and_ln256_fu_3277_p2 <= (xor_ln256_fu_3271_p2 and BCo_8_fu_3241_p3);
    and_ln257_fu_3295_p2 <= (xor_ln257_fu_3289_p2 and BCu_8_fu_3247_p3);
    and_ln258_fu_3313_p2 <= (xor_ln258_fu_3307_p2 and BCa_8_fu_3223_p3);
    and_ln259_fu_3331_p2 <= (xor_ln259_fu_3325_p2 and BCe_8_fu_3229_p3);
    and_ln271_fu_3379_p2 <= (xor_ln271_fu_3373_p2 and BCi_9_fu_3355_p3);
    and_ln272_fu_3397_p2 <= (xor_ln272_fu_3391_p2 and BCo_9_fu_3361_p3);
    and_ln273_fu_3415_p2 <= (xor_ln273_fu_3409_p2 and BCu_9_fu_3367_p3);
    and_ln274_fu_3433_p2 <= (xor_ln274_fu_3427_p2 and BCa_9_fu_3343_p3);
    and_ln275_fu_3451_p2 <= (xor_ln275_fu_3445_p2 and BCe_9_fu_3349_p3);
    and_ln287_fu_3499_p2 <= (xor_ln287_fu_3493_p2 and BCi_10_fu_3475_p3);
    and_ln288_fu_3517_p2 <= (xor_ln288_fu_3511_p2 and BCo_10_fu_3481_p3);
    and_ln289_fu_3535_p2 <= (xor_ln289_fu_3529_p2 and BCu_10_fu_3487_p3);
    and_ln290_fu_3553_p2 <= (xor_ln290_fu_3547_p2 and BCa_10_fu_3463_p3);
    and_ln291_fu_3571_p2 <= (xor_ln291_fu_3565_p2 and BCe_10_fu_3469_p3);
    and_ln303_fu_3619_p2 <= (xor_ln303_fu_3613_p2 and BCi_11_fu_3595_p3);
    and_ln304_fu_3637_p2 <= (xor_ln304_fu_3631_p2 and BCo_11_fu_3601_p3);
    and_ln305_fu_3655_p2 <= (xor_ln305_fu_3649_p2 and BCu_11_fu_3607_p3);
    and_ln306_fu_3673_p2 <= (xor_ln306_fu_3667_p2 and BCa_11_fu_3583_p3);
    and_ln307_fu_3691_p2 <= (xor_ln307_fu_3685_p2 and BCe_11_fu_3589_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln117_fu_871_p2)
    begin
        if (((icmp_ln117_fu_871_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready_pp0_iter1_reg, ap_done_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_Aba_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Aba_1_fu_376, Aba_3_fu_3147_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Aba_1_load <= Aba_3_fu_3147_p2;
        else 
            ap_sig_allocacmp_Aba_1_load <= Aba_1_fu_376;
        end if; 
    end process;


    ap_sig_allocacmp_Abe_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Abe_1_fu_372, Abe_3_fu_3165_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Abe_1_load <= Abe_3_fu_3165_p2;
        else 
            ap_sig_allocacmp_Abe_1_load <= Abe_1_fu_372;
        end if; 
    end process;


    ap_sig_allocacmp_Abi_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Abi_1_fu_368, Abi_3_fu_3183_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Abi_1_load <= Abi_3_fu_3183_p2;
        else 
            ap_sig_allocacmp_Abi_1_load <= Abi_1_fu_368;
        end if; 
    end process;


    ap_sig_allocacmp_Abo_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Abo_1_fu_364, Abo_3_fu_3200_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Abo_1_load <= Abo_3_fu_3200_p2;
        else 
            ap_sig_allocacmp_Abo_1_load <= Abo_1_fu_364;
        end if; 
    end process;


    ap_sig_allocacmp_Abu_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Abu_1_fu_360, Abu_3_fu_3217_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Abu_1_load <= Abu_3_fu_3217_p2;
        else 
            ap_sig_allocacmp_Abu_1_load <= Abu_1_fu_360;
        end if; 
    end process;


    ap_sig_allocacmp_Aga_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Aga_1_fu_356, Aga_3_fu_3265_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Aga_1_load <= Aga_3_fu_3265_p2;
        else 
            ap_sig_allocacmp_Aga_1_load <= Aga_1_fu_356;
        end if; 
    end process;


    ap_sig_allocacmp_Age_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Age_1_fu_352, Age_3_fu_3283_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Age_1_load <= Age_3_fu_3283_p2;
        else 
            ap_sig_allocacmp_Age_1_load <= Age_1_fu_352;
        end if; 
    end process;


    ap_sig_allocacmp_Agi_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Agi_1_fu_348, Agi_3_fu_3301_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Agi_1_load <= Agi_3_fu_3301_p2;
        else 
            ap_sig_allocacmp_Agi_1_load <= Agi_1_fu_348;
        end if; 
    end process;


    ap_sig_allocacmp_Ago_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ago_1_fu_344, Ago_3_fu_3319_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ago_1_load <= Ago_3_fu_3319_p2;
        else 
            ap_sig_allocacmp_Ago_1_load <= Ago_1_fu_344;
        end if; 
    end process;


    ap_sig_allocacmp_Agu_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Agu_1_fu_340, Agu_3_fu_3337_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Agu_1_load <= Agu_3_fu_3337_p2;
        else 
            ap_sig_allocacmp_Agu_1_load <= Agu_1_fu_340;
        end if; 
    end process;


    ap_sig_allocacmp_Aka_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Aka_1_fu_336, Aka_3_fu_3385_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Aka_1_load <= Aka_3_fu_3385_p2;
        else 
            ap_sig_allocacmp_Aka_1_load <= Aka_1_fu_336;
        end if; 
    end process;


    ap_sig_allocacmp_Ake_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ake_1_fu_332, Ake_3_fu_3403_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ake_1_load <= Ake_3_fu_3403_p2;
        else 
            ap_sig_allocacmp_Ake_1_load <= Ake_1_fu_332;
        end if; 
    end process;


    ap_sig_allocacmp_Aki_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Aki_1_fu_328, Aki_3_fu_3421_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Aki_1_load <= Aki_3_fu_3421_p2;
        else 
            ap_sig_allocacmp_Aki_1_load <= Aki_1_fu_328;
        end if; 
    end process;


    ap_sig_allocacmp_Ako_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ako_1_fu_324, Ako_3_fu_3439_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ako_1_load <= Ako_3_fu_3439_p2;
        else 
            ap_sig_allocacmp_Ako_1_load <= Ako_1_fu_324;
        end if; 
    end process;


    ap_sig_allocacmp_Aku_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Aku_1_fu_320, Aku_3_fu_3457_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Aku_1_load <= Aku_3_fu_3457_p2;
        else 
            ap_sig_allocacmp_Aku_1_load <= Aku_1_fu_320;
        end if; 
    end process;


    ap_sig_allocacmp_Ama_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ama_1_fu_316, Ama_3_fu_3505_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ama_1_load <= Ama_3_fu_3505_p2;
        else 
            ap_sig_allocacmp_Ama_1_load <= Ama_1_fu_316;
        end if; 
    end process;


    ap_sig_allocacmp_Ame_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ame_1_fu_312, Ame_3_fu_3523_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ame_1_load <= Ame_3_fu_3523_p2;
        else 
            ap_sig_allocacmp_Ame_1_load <= Ame_1_fu_312;
        end if; 
    end process;


    ap_sig_allocacmp_Ami_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ami_1_fu_308, Ami_3_fu_3541_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ami_1_load <= Ami_3_fu_3541_p2;
        else 
            ap_sig_allocacmp_Ami_1_load <= Ami_1_fu_308;
        end if; 
    end process;


    ap_sig_allocacmp_Amo_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Amo_1_fu_304, Amo_3_fu_3559_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Amo_1_load <= Amo_3_fu_3559_p2;
        else 
            ap_sig_allocacmp_Amo_1_load <= Amo_1_fu_304;
        end if; 
    end process;


    ap_sig_allocacmp_Amu_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Amu_1_fu_300, Amu_3_fu_3577_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Amu_1_load <= Amu_3_fu_3577_p2;
        else 
            ap_sig_allocacmp_Amu_1_load <= Amu_1_fu_300;
        end if; 
    end process;


    ap_sig_allocacmp_Asa_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Asa_1_fu_296, Asa_3_fu_3625_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Asa_1_load <= Asa_3_fu_3625_p2;
        else 
            ap_sig_allocacmp_Asa_1_load <= Asa_1_fu_296;
        end if; 
    end process;


    ap_sig_allocacmp_Ase_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Ase_1_fu_292, Ase_3_fu_3643_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Ase_1_load <= Ase_3_fu_3643_p2;
        else 
            ap_sig_allocacmp_Ase_1_load <= Ase_1_fu_292;
        end if; 
    end process;


    ap_sig_allocacmp_Asi_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Asi_1_fu_288, Asi_3_fu_3661_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Asi_1_load <= Asi_3_fu_3661_p2;
        else 
            ap_sig_allocacmp_Asi_1_load <= Asi_1_fu_288;
        end if; 
    end process;


    ap_sig_allocacmp_Aso_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Aso_1_fu_284, Aso_3_fu_3679_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Aso_1_load <= Aso_3_fu_3679_p2;
        else 
            ap_sig_allocacmp_Aso_1_load <= Aso_1_fu_284;
        end if; 
    end process;


    ap_sig_allocacmp_Asu_1_load_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, Asu_1_fu_380, Asu_3_fu_3697_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_Asu_1_load <= Asu_3_fu_3697_p2;
        else 
            ap_sig_allocacmp_Asu_1_load <= Asu_1_fu_380;
        end if; 
    end process;


    ap_sig_allocacmp_round_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, round_fu_384)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_round_1 <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_round_1 <= round_fu_384;
        end if; 
    end process;

    icmp_ln117_fu_871_p2 <= "1" when (unsigned(ap_sig_allocacmp_round_1) < unsigned(ap_const_lv5_18)) else "0";
    lshr_ln10_fu_1721_p4 <= Agi_2_fu_1711_p2(63 downto 58);
    lshr_ln11_fu_1749_p4 <= Ako_2_fu_1739_p2(63 downto 39);
    lshr_ln12_fu_1777_p4 <= Amu_2_fu_1767_p2(63 downto 56);
    lshr_ln13_fu_1805_p4 <= Asa_2_fu_1795_p2(63 downto 46);
    lshr_ln14_fu_1923_p4 <= Abu_2_fu_1913_p2(63 downto 37);
    lshr_ln15_fu_1951_p4 <= Aga_2_fu_1941_p2(63 downto 28);
    lshr_ln16_fu_1979_p4 <= Ake_2_fu_1969_p2(63 downto 54);
    lshr_ln17_fu_2007_p4 <= Ami_2_fu_1997_p2(63 downto 49);
    lshr_ln18_fu_2035_p4 <= Aso_2_fu_2025_p2(63 downto 8);
    lshr_ln19_fu_2153_p4 <= Abi_2_fu_2143_p2(63 downto 2);
    lshr_ln20_fu_2181_p4 <= Ago_2_fu_2171_p2(63 downto 9);
    lshr_ln21_fu_2209_p4 <= Aku_2_fu_2199_p2(63 downto 25);
    lshr_ln22_fu_2237_p4 <= Ama_2_fu_2227_p2(63 downto 23);
    lshr_ln23_fu_2265_p4 <= Ase_2_fu_2255_p2(63 downto 62);
    lshr_ln2_fu_1285_p4 <= Aki_2_fu_1275_p2(63 downto 21);
    lshr_ln3_fu_1313_p4 <= Amo_2_fu_1303_p2(63 downto 43);
    lshr_ln4_fu_1341_p4 <= Asu_2_fu_1331_p2(63 downto 50);
    lshr_ln5_fu_1465_p4 <= Abo_2_fu_1455_p2(63 downto 36);
    lshr_ln6_fu_1493_p4 <= Agu_2_fu_1483_p2(63 downto 44);
    lshr_ln7_fu_1521_p4 <= Aka_2_fu_1511_p2(63 downto 61);
    lshr_ln8_fu_1549_p4 <= Ame_2_fu_1539_p2(63 downto 19);
    lshr_ln9_fu_1577_p4 <= Asi_2_fu_1567_p2(63 downto 3);
    lshr_ln_fu_1257_p4 <= Age_2_fu_1247_p2(63 downto 20);
    or_ln59_fu_1149_p3 <= (trunc_ln128_fu_1137_p1 & tmp_298_fu_1141_p3);
    or_ln60_fu_1175_p3 <= (trunc_ln129_fu_1163_p1 & tmp_299_fu_1167_p3);
    or_ln61_fu_1201_p3 <= (trunc_ln130_fu_1189_p1 & tmp_300_fu_1193_p3);
    or_ln62_fu_1227_p3 <= (trunc_ln131_fu_1215_p1 & tmp_301_fu_1219_p3);
    or_ln63_fu_2505_p3 <= (trunc_ln222_fu_2493_p1 & tmp_303_fu_2497_p3);
    or_ln64_fu_2531_p3 <= (trunc_ln223_fu_2519_p1 & tmp_304_fu_2523_p3);
    or_ln65_fu_2557_p3 <= (trunc_ln224_fu_2545_p1 & tmp_305_fu_2549_p3);
    or_ln66_fu_2583_p3 <= (trunc_ln225_fu_2571_p1 & tmp_306_fu_2575_p3);
    or_ln67_fu_2609_p3 <= (trunc_ln226_fu_2597_p1 & tmp_307_fu_2601_p3);
    or_ln68_fu_892_p3 <= (tmp_s_fu_882_p4 & ap_const_lv1_1);
    or_ln_fu_1123_p3 <= (trunc_ln127_fu_1111_p1 & tmp_fu_1115_p3);
    tmp_298_fu_1141_p3 <= BCi_fu_1057_p2(63 downto 63);
    tmp_299_fu_1167_p3 <= BCo_fu_1081_p2(63 downto 63);
    tmp_300_fu_1193_p3 <= BCu_fu_1105_p2(63 downto 63);
    tmp_301_fu_1219_p3 <= BCa_fu_1009_p2(63 downto 63);
    tmp_302_fu_1695_p3 <= Abe_2_fu_1685_p2(63 downto 63);
    tmp_303_fu_2497_p3 <= BCe_6_fu_2415_p2(63 downto 63);
    tmp_304_fu_2523_p3 <= BCi_6_fu_2439_p2(63 downto 63);
    tmp_305_fu_2549_p3 <= BCo_6_fu_2463_p2(63 downto 63);
    tmp_306_fu_2575_p3 <= BCu_6_fu_2487_p2(63 downto 63);
    tmp_307_fu_2601_p3 <= BCa_6_fu_2391_p2(63 downto 63);
    tmp_fu_1115_p3 <= BCe_fu_1033_p2(63 downto 63);
    tmp_s_fu_882_p4 <= ap_sig_allocacmp_round_1(4 downto 1);
    trunc_ln127_fu_1111_p1 <= BCe_fu_1033_p2(63 - 1 downto 0);
    trunc_ln128_fu_1137_p1 <= BCi_fu_1057_p2(63 - 1 downto 0);
    trunc_ln129_fu_1163_p1 <= BCo_fu_1081_p2(63 - 1 downto 0);
    trunc_ln130_fu_1189_p1 <= BCu_fu_1105_p2(63 - 1 downto 0);
    trunc_ln131_fu_1215_p1 <= BCa_fu_1009_p2(63 - 1 downto 0);
    trunc_ln136_fu_1253_p1 <= Age_2_fu_1247_p2(20 - 1 downto 0);
    trunc_ln138_fu_1281_p1 <= Aki_2_fu_1275_p2(21 - 1 downto 0);
    trunc_ln140_fu_1309_p1 <= Amo_2_fu_1303_p2(43 - 1 downto 0);
    trunc_ln142_fu_1337_p1 <= Asu_2_fu_1331_p2(50 - 1 downto 0);
    trunc_ln151_fu_1461_p1 <= Abo_2_fu_1455_p2(36 - 1 downto 0);
    trunc_ln153_fu_1489_p1 <= Agu_2_fu_1483_p2(44 - 1 downto 0);
    trunc_ln155_fu_1517_p1 <= Aka_2_fu_1511_p2(61 - 1 downto 0);
    trunc_ln157_fu_1545_p1 <= Ame_2_fu_1539_p2(19 - 1 downto 0);
    trunc_ln159_fu_1573_p1 <= Asi_2_fu_1567_p2(3 - 1 downto 0);
    trunc_ln167_fu_1691_p1 <= Abe_2_fu_1685_p2(63 - 1 downto 0);
    trunc_ln169_fu_1717_p1 <= Agi_2_fu_1711_p2(58 - 1 downto 0);
    trunc_ln171_fu_1745_p1 <= Ako_2_fu_1739_p2(39 - 1 downto 0);
    trunc_ln173_fu_1773_p1 <= Amu_2_fu_1767_p2(56 - 1 downto 0);
    trunc_ln175_fu_1801_p1 <= Asa_2_fu_1795_p2(46 - 1 downto 0);
    trunc_ln183_fu_1919_p1 <= Abu_2_fu_1913_p2(37 - 1 downto 0);
    trunc_ln185_fu_1947_p1 <= Aga_2_fu_1941_p2(28 - 1 downto 0);
    trunc_ln187_fu_1975_p1 <= Ake_2_fu_1969_p2(54 - 1 downto 0);
    trunc_ln189_fu_2003_p1 <= Ami_2_fu_1997_p2(49 - 1 downto 0);
    trunc_ln191_fu_2031_p1 <= Aso_2_fu_2025_p2(8 - 1 downto 0);
    trunc_ln199_fu_2149_p1 <= Abi_2_fu_2143_p2(2 - 1 downto 0);
    trunc_ln201_fu_2177_p1 <= Ago_2_fu_2171_p2(9 - 1 downto 0);
    trunc_ln203_fu_2205_p1 <= Aku_2_fu_2199_p2(25 - 1 downto 0);
    trunc_ln205_fu_2233_p1 <= Ama_2_fu_2227_p2(23 - 1 downto 0);
    trunc_ln207_fu_2261_p1 <= Ase_2_fu_2255_p2(62 - 1 downto 0);
    trunc_ln222_fu_2493_p1 <= BCe_6_fu_2415_p2(63 - 1 downto 0);
    trunc_ln223_fu_2519_p1 <= BCi_6_fu_2439_p2(63 - 1 downto 0);
    trunc_ln224_fu_2545_p1 <= BCo_6_fu_2463_p2(63 - 1 downto 0);
    trunc_ln225_fu_2571_p1 <= BCu_6_fu_2487_p2(63 - 1 downto 0);
    trunc_ln226_fu_2597_p1 <= BCa_6_fu_2391_p2(63 - 1 downto 0);
    trunc_ln231_fu_2635_p1 <= Ege_1_fu_2629_p2(20 - 1 downto 0);
    trunc_ln233_fu_2655_p1 <= Eki_1_fu_2649_p2(21 - 1 downto 0);
    trunc_ln235_fu_2675_p1 <= Emo_1_fu_2669_p2(43 - 1 downto 0);
    trunc_ln237_fu_2695_p1 <= Esu_1_fu_2689_p2(50 - 1 downto 0);
    trunc_ln246_fu_2715_p1 <= Ebo_1_fu_2709_p2(36 - 1 downto 0);
    trunc_ln248_fu_2735_p1 <= Egu_1_fu_2729_p2(44 - 1 downto 0);
    trunc_ln250_fu_2755_p1 <= Eka_1_fu_2749_p2(61 - 1 downto 0);
    trunc_ln252_fu_2775_p1 <= Eme_1_fu_2769_p2(19 - 1 downto 0);
    trunc_ln254_fu_2795_p1 <= Esi_1_fu_2789_p2(3 - 1 downto 0);
    trunc_ln262_fu_2815_p1 <= Ebe_1_fu_2809_p2(63 - 1 downto 0);
    trunc_ln264_fu_2833_p1 <= Egi_1_fu_2827_p2(58 - 1 downto 0);
    trunc_ln266_fu_2853_p1 <= Eko_1_fu_2847_p2(39 - 1 downto 0);
    trunc_ln268_fu_2873_p1 <= Emu_1_fu_2867_p2(56 - 1 downto 0);
    trunc_ln270_fu_2893_p1 <= Esa_1_fu_2887_p2(46 - 1 downto 0);
    trunc_ln278_fu_2913_p1 <= Ebu_1_fu_2907_p2(37 - 1 downto 0);
    trunc_ln280_fu_2933_p1 <= Ega_1_fu_2927_p2(28 - 1 downto 0);
    trunc_ln282_fu_2953_p1 <= Eke_1_fu_2947_p2(54 - 1 downto 0);
    trunc_ln284_fu_2973_p1 <= Emi_1_fu_2967_p2(49 - 1 downto 0);
    trunc_ln286_fu_2993_p1 <= Eso_1_fu_2987_p2(8 - 1 downto 0);
    trunc_ln294_fu_3013_p1 <= Ebi_1_fu_3007_p2(2 - 1 downto 0);
    trunc_ln296_fu_3033_p1 <= Ego_1_fu_3027_p2(9 - 1 downto 0);
    trunc_ln298_fu_3053_p1 <= Eku_1_fu_3047_p2(25 - 1 downto 0);
    trunc_ln300_fu_3073_p1 <= Ema_1_fu_3067_p2(23 - 1 downto 0);
    trunc_ln302_fu_3093_p1 <= Ese_1_fu_3087_p2(62 - 1 downto 0);
    xor_ln120_1_fu_1003_p2 <= (ap_sig_allocacmp_Asa_1_load xor ap_sig_allocacmp_Aga_1_load);
    xor_ln120_2_fu_997_p2 <= (xor_ln120_fu_991_p2 xor ap_sig_allocacmp_Aba_1_load);
    xor_ln120_fu_991_p2 <= (ap_sig_allocacmp_Ama_1_load xor ap_sig_allocacmp_Aka_1_load);
    xor_ln121_1_fu_1027_p2 <= (ap_sig_allocacmp_Ase_1_load xor ap_sig_allocacmp_Age_1_load);
    xor_ln121_2_fu_1021_p2 <= (xor_ln121_fu_1015_p2 xor ap_sig_allocacmp_Abe_1_load);
    xor_ln121_fu_1015_p2 <= (ap_sig_allocacmp_Ame_1_load xor ap_sig_allocacmp_Ake_1_load);
    xor_ln122_1_fu_1045_p2 <= (ap_sig_allocacmp_Asi_1_load xor ap_sig_allocacmp_Agi_1_load);
    xor_ln122_2_fu_1051_p2 <= (xor_ln122_fu_1039_p2 xor xor_ln122_1_fu_1045_p2);
    xor_ln122_fu_1039_p2 <= (ap_sig_allocacmp_Ami_1_load xor ap_sig_allocacmp_Aki_1_load);
    xor_ln123_1_fu_1069_p2 <= (ap_sig_allocacmp_Aso_1_load xor ap_sig_allocacmp_Ago_1_load);
    xor_ln123_2_fu_1075_p2 <= (xor_ln123_fu_1063_p2 xor xor_ln123_1_fu_1069_p2);
    xor_ln123_fu_1063_p2 <= (ap_sig_allocacmp_Amo_1_load xor ap_sig_allocacmp_Ako_1_load);
    xor_ln124_1_fu_1099_p2 <= (ap_sig_allocacmp_Amu_1_load xor ap_sig_allocacmp_Abu_1_load);
    xor_ln124_2_fu_1093_p2 <= (xor_ln124_fu_1087_p2 xor ap_sig_allocacmp_Asu_1_load);
    xor_ln124_fu_1087_p2 <= (ap_sig_allocacmp_Aku_1_load xor ap_sig_allocacmp_Agu_1_load);
    xor_ln144_1_fu_1371_p2 <= (KeccakF_RoundConstants_q1 xor Aba_4_fu_1241_p2);
    xor_ln144_fu_1359_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_1_fu_1267_p3);
    xor_ln145_fu_1383_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_1_fu_1295_p3);
    xor_ln146_fu_1401_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_1_fu_1323_p3);
    xor_ln147_fu_1419_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_1_fu_1351_p3);
    xor_ln148_fu_1437_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor Aba_4_fu_1241_p2);
    xor_ln160_fu_1595_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_2_fu_1503_p3);
    xor_ln161_fu_1613_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_2_fu_1531_p3);
    xor_ln162_fu_1631_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_2_fu_1559_p3);
    xor_ln163_fu_1649_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_2_fu_1587_p3);
    xor_ln164_fu_1667_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_2_fu_1475_p3);
    xor_ln176_fu_1823_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_3_fu_1731_p3);
    xor_ln177_fu_1841_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_3_fu_1759_p3);
    xor_ln178_fu_1859_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_3_fu_1787_p3);
    xor_ln179_fu_1877_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_3_fu_1815_p3);
    xor_ln180_fu_1895_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_3_fu_1703_p3);
    xor_ln192_fu_2053_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_4_fu_1961_p3);
    xor_ln193_fu_2071_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_4_fu_1989_p3);
    xor_ln194_fu_2089_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_4_fu_2017_p3);
    xor_ln195_fu_2107_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_4_fu_2045_p3);
    xor_ln196_fu_2125_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_4_fu_1933_p3);
    xor_ln208_fu_2283_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_5_fu_2191_p3);
    xor_ln209_fu_2301_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_5_fu_2219_p3);
    xor_ln210_fu_2319_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_5_fu_2247_p3);
    xor_ln211_fu_2337_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_5_fu_2275_p3);
    xor_ln212_fu_2355_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_5_fu_2163_p3);
    xor_ln215_1_fu_2379_p2 <= (Ema_fu_2065_p2 xor Eba_fu_1377_p2);
    xor_ln215_2_fu_2385_p2 <= (xor_ln215_1_fu_2379_p2 xor Ega_fu_1607_p2);
    xor_ln215_fu_2373_p2 <= (Esa_fu_2295_p2 xor Eka_fu_1835_p2);
    xor_ln216_1_fu_2397_p2 <= (Ege_fu_1625_p2 xor Ebe_fu_1395_p2);
    xor_ln216_2_fu_2409_p2 <= (xor_ln216_fu_2403_p2 xor Ese_fu_2313_p2);
    xor_ln216_fu_2403_p2 <= (Eme_fu_2083_p2 xor Eke_fu_1853_p2);
    xor_ln217_1_fu_2421_p2 <= (Esi_fu_2331_p2 xor Emi_fu_2101_p2);
    xor_ln217_2_fu_2433_p2 <= (xor_ln217_fu_2427_p2 xor Eki_fu_1871_p2);
    xor_ln217_fu_2427_p2 <= (Egi_fu_1643_p2 xor Ebi_fu_1413_p2);
    xor_ln218_1_fu_2451_p2 <= (Eso_fu_2349_p2 xor Ebo_fu_1431_p2);
    xor_ln218_2_fu_2457_p2 <= (xor_ln218_1_fu_2451_p2 xor Emo_fu_2119_p2);
    xor_ln218_fu_2445_p2 <= (Eko_fu_1889_p2 xor Ego_fu_1661_p2);
    xor_ln219_1_fu_2475_p2 <= (Eku_fu_1907_p2 xor Egu_fu_1679_p2);
    xor_ln219_2_fu_2481_p2 <= (xor_ln219_1_fu_2475_p2 xor Emu_fu_2137_p2);
    xor_ln219_fu_2469_p2 <= (Esu_fu_2367_p2 xor Ebu_fu_1449_p2);
    xor_ln239_1_fu_3143_p2 <= (KeccakF_RoundConstants_load_1_reg_4196 xor Eba_2_reg_4149);
    xor_ln239_fu_3131_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_7_fu_3107_p3);
    xor_ln240_fu_3153_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_7_fu_3113_p3);
    xor_ln241_fu_3171_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_7_fu_3119_p3);
    xor_ln242_fu_3189_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_7_fu_3125_p3);
    xor_ln243_fu_3206_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor Eba_2_reg_4149);
    xor_ln255_fu_3253_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_8_fu_3229_p3);
    xor_ln256_fu_3271_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_8_fu_3235_p3);
    xor_ln257_fu_3289_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_8_fu_3241_p3);
    xor_ln258_fu_3307_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_8_fu_3247_p3);
    xor_ln259_fu_3325_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_8_fu_3223_p3);
    xor_ln271_fu_3373_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_9_fu_3349_p3);
    xor_ln272_fu_3391_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_9_fu_3355_p3);
    xor_ln273_fu_3409_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_9_fu_3361_p3);
    xor_ln274_fu_3427_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_9_fu_3367_p3);
    xor_ln275_fu_3445_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_9_fu_3343_p3);
    xor_ln287_fu_3493_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_10_fu_3469_p3);
    xor_ln288_fu_3511_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_10_fu_3475_p3);
    xor_ln289_fu_3529_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_10_fu_3481_p3);
    xor_ln290_fu_3547_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_10_fu_3487_p3);
    xor_ln291_fu_3565_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_10_fu_3463_p3);
    xor_ln303_fu_3613_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCe_11_fu_3589_p3);
    xor_ln304_fu_3631_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCi_11_fu_3595_p3);
    xor_ln305_fu_3649_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCo_11_fu_3601_p3);
    xor_ln306_fu_3667_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCu_11_fu_3607_p3);
    xor_ln307_fu_3685_p2 <= (ap_const_lv64_FFFFFFFFFFFFFFFF xor BCa_11_fu_3583_p3);
    zext_ln144_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_round_1),32));
    zext_ln239_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln68_fu_892_p3),32));
end behav;
