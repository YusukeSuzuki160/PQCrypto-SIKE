// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_mp_mul_9_Pipeline_VITIS_LOOP_144_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_017,
        zext_ln143,
        indvars_iv31,
        PKB_address0,
        PKB_ce0,
        PKB_q0,
        PKB_address1,
        PKB_ce1,
        PKB_q1,
        i,
        v_66_out,
        v_66_out_ap_vld,
        u_59_out_i,
        u_59_out_o,
        u_59_out_o_ap_vld,
        t_out_i,
        t_out_o,
        t_out_o_ap_vld,
        grp_fu_418_p_din0,
        grp_fu_418_p_din1,
        grp_fu_418_p_dout0,
        grp_fu_418_p_ce,
        grp_fu_422_p_din0,
        grp_fu_422_p_din1,
        grp_fu_422_p_dout0,
        grp_fu_422_p_ce,
        grp_fu_426_p_din0,
        grp_fu_426_p_din1,
        grp_fu_426_p_dout0,
        grp_fu_426_p_ce,
        grp_fu_430_p_din0,
        grp_fu_430_p_din1,
        grp_fu_430_p_dout0,
        grp_fu_430_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] v_017;
input  [3:0] zext_ln143;
input  [3:0] indvars_iv31;
output  [5:0] PKB_address0;
output   PKB_ce0;
input  [63:0] PKB_q0;
output  [5:0] PKB_address1;
output   PKB_ce1;
input  [63:0] PKB_q1;
input  [2:0] i;
output  [63:0] v_66_out;
output   v_66_out_ap_vld;
input  [63:0] u_59_out_i;
output  [63:0] u_59_out_o;
output   u_59_out_o_ap_vld;
input  [3:0] t_out_i;
output  [3:0] t_out_o;
output   t_out_o_ap_vld;
output  [31:0] grp_fu_418_p_din0;
output  [31:0] grp_fu_418_p_din1;
input  [63:0] grp_fu_418_p_dout0;
output   grp_fu_418_p_ce;
output  [31:0] grp_fu_422_p_din0;
output  [31:0] grp_fu_422_p_din1;
input  [63:0] grp_fu_422_p_dout0;
output   grp_fu_422_p_ce;
output  [31:0] grp_fu_426_p_din0;
output  [31:0] grp_fu_426_p_din1;
input  [63:0] grp_fu_426_p_dout0;
output   grp_fu_426_p_ce;
output  [31:0] grp_fu_430_p_din0;
output  [31:0] grp_fu_430_p_din1;
input  [63:0] grp_fu_430_p_dout0;
output   grp_fu_430_p_ce;

reg ap_idle;
reg v_66_out_ap_vld;
reg[63:0] u_59_out_o;
reg u_59_out_o_ap_vld;
reg[3:0] t_out_o;
reg t_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln144_fu_203_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] i_cast_fu_170_p1;
reg   [3:0] i_cast_reg_704;
reg   [3:0] j_15_reg_709;
reg   [0:0] icmp_ln144_reg_715;
reg   [0:0] icmp_ln144_reg_715_pp0_iter1_reg;
reg   [0:0] icmp_ln144_reg_715_pp0_iter2_reg;
reg   [0:0] icmp_ln144_reg_715_pp0_iter3_reg;
reg   [0:0] icmp_ln144_reg_715_pp0_iter4_reg;
reg   [0:0] icmp_ln144_reg_715_pp0_iter5_reg;
reg   [0:0] icmp_ln144_reg_715_pp0_iter6_reg;
reg   [0:0] icmp_ln144_reg_715_pp0_iter7_reg;
wire   [31:0] al_fu_273_p1;
reg   [31:0] al_reg_729;
wire   [31:0] bl_fu_277_p1;
reg   [31:0] bl_reg_734;
reg   [31:0] ah_reg_739;
reg   [31:0] bh_reg_744;
wire   [63:0] zext_ln105_fu_301_p1;
wire   [63:0] zext_ln110_fu_306_p1;
wire   [63:0] zext_ln105_56_fu_311_p1;
wire   [63:0] zext_ln112_fu_316_p1;
wire   [31:0] trunc_ln106_fu_321_p1;
reg   [31:0] trunc_ln106_reg_773;
reg   [31:0] trunc_ln106_reg_773_pp0_iter5_reg;
reg   [31:0] trunc_ln106_reg_773_pp0_iter6_reg;
wire   [31:0] trunc_ln106_81_fu_325_p1;
reg   [31:0] trunc_ln106_81_reg_778;
wire   [31:0] trunc_ln106_82_fu_329_p1;
reg   [31:0] trunc_ln106_82_reg_783;
wire   [31:0] trunc_ln106_83_fu_333_p1;
reg   [31:0] trunc_ln106_83_reg_788;
reg   [31:0] trunc_ln106_83_reg_788_pp0_iter5_reg;
reg   [31:0] tmp_124_reg_794;
reg   [31:0] tmp_126_reg_799;
reg   [31:0] tmp_126_reg_799_pp0_iter5_reg;
reg   [31:0] tmp_127_reg_805;
reg   [31:0] tmp_127_reg_805_pp0_iter5_reg;
reg   [31:0] tmp_128_reg_810;
reg   [31:0] tmp_128_reg_810_pp0_iter5_reg;
reg   [31:0] tmp_128_reg_810_pp0_iter6_reg;
reg   [1:0] tmp_125_reg_815;
wire   [31:0] trunc_ln125_fu_412_p1;
reg   [31:0] trunc_ln125_reg_820;
reg   [31:0] trunc_ln125_reg_820_pp0_iter6_reg;
wire   [31:0] add_ln105_fu_456_p2;
reg   [31:0] add_ln105_reg_826;
reg   [1:0] tmp_129_reg_831;
wire   [63:0] add_ln133_fu_506_p2;
reg   [63:0] add_ln133_reg_836;
reg   [63:0] add_ln133_reg_836_pp0_iter8_reg;
wire   [63:0] tempReg_fu_577_p2;
reg   [63:0] tempReg_reg_841;
reg   [63:0] tempReg_reg_841_pp0_iter8_reg;
reg   [63:0] u_59_out_load_reg_850;
wire   [63:0] v_fu_592_p2;
reg   [63:0] v_reg_855;
wire   [31:0] zext_ln145_fu_231_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln145_1_fu_268_p1;
wire   [63:0] zext_ln143_cast_fu_174_p1;
wire    ap_loop_init;
wire   [3:0] u_fu_673_p2;
reg   [63:0] v_66_fu_90;
wire   [63:0] v_111_fu_518_p2;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [3:0] j_fu_94;
wire   [3:0] add_ln144_fu_209_p2;
reg   [3:0] ap_sig_allocacmp_j_15;
wire    ap_block_pp0_stage0_01001;
reg    PKB_ce1_local;
reg    PKB_ce0_local;
wire   [2:0] trunc_ln145_fu_220_p1;
wire   [3:0] zext_ln_fu_223_p3;
wire   [3:0] sub_ln145_fu_236_p2;
wire   [6:0] tmp_123_fu_240_p3;
wire  signed [7:0] sext_ln145_fu_248_p1;
wire   [7:0] add_ln145_fu_252_p2;
wire   [4:0] tmp_fu_258_p4;
wire   [32:0] zext_ln123_fu_380_p1;
wire   [32:0] zext_ln123_45_fu_383_p1;
wire   [32:0] add_ln123_fu_386_p2;
wire   [33:0] zext_ln123_46_fu_392_p1;
wire   [33:0] zext_ln106_fu_377_p1;
wire   [33:0] temp_fu_396_p2;
wire   [32:0] zext_ln130_fu_425_p1;
wire   [32:0] zext_ln106_49_fu_419_p1;
wire   [32:0] add_ln130_fu_432_p2;
wire   [32:0] zext_ln106_50_fu_422_p1;
wire   [32:0] zext_ln106_48_fu_416_p1;
wire   [32:0] add_ln130_50_fu_442_p2;
wire   [31:0] trunc_ln130_fu_448_p1;
wire   [31:0] add_ln130_49_fu_428_p2;
wire   [33:0] zext_ln130_46_fu_452_p1;
wire   [33:0] zext_ln130_45_fu_438_p1;
wire   [33:0] temp_26_fu_462_p2;
wire   [33:0] and_ln133_1_fu_495_p3;
wire   [63:0] zext_ln133_fu_502_p1;
wire   [63:0] and_ln_fu_488_p3;
wire   [63:0] or_ln_fu_512_p3;
wire   [63:0] shl_ln_fu_481_p3;
wire   [63:0] xor_ln105_fu_524_p2;
wire   [63:0] xor_ln105_1_fu_530_p2;
wire   [63:0] or_ln105_fu_536_p2;
wire   [63:0] xor_ln105_2_fu_542_p2;
wire   [0:0] carry_fu_548_p3;
wire   [31:0] tmp_s_fu_560_p4;
wire   [63:0] or_ln1_fu_570_p3;
wire   [63:0] zext_ln105_60_fu_556_p1;
wire   [63:0] xor_ln147_fu_607_p2;
wire   [63:0] xor_ln147_1_fu_611_p2;
wire   [0:0] bit_sel_fu_621_p3;
wire   [0:0] xor_ln147_4_fu_628_p2;
wire   [62:0] trunc_ln147_fu_634_p1;
wire   [63:0] xor_ln147_2_fu_637_p3;
wire   [63:0] or_ln147_fu_615_p2;
wire   [63:0] xor_ln147_3_fu_650_p2;
wire   [63:0] and_ln147_fu_645_p2;
wire   [63:0] or_ln147_1_fu_655_p2;
wire   [0:0] tmp_120_fu_661_p3;
wire   [3:0] zext_ln148_fu_669_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 v_66_fu_90 = 64'd0;
#0 j_fu_94 = 4'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln144_fu_203_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_94 <= add_ln144_fu_209_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_94 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            v_66_fu_90 <= v_017;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            v_66_fu_90 <= v_111_fu_518_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln105_reg_826 <= add_ln105_fu_456_p2;
        add_ln133_reg_836[63 : 32] <= add_ln133_fu_506_p2[63 : 32];
        add_ln133_reg_836_pp0_iter8_reg[63 : 32] <= add_ln133_reg_836[63 : 32];
        ah_reg_739 <= {{PKB_q1[63:32]}};
        al_reg_729 <= al_fu_273_p1;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        bh_reg_744 <= {{PKB_q0[63:32]}};
        bl_reg_734 <= bl_fu_277_p1;
        icmp_ln144_reg_715_pp0_iter2_reg <= icmp_ln144_reg_715_pp0_iter1_reg;
        icmp_ln144_reg_715_pp0_iter3_reg <= icmp_ln144_reg_715_pp0_iter2_reg;
        icmp_ln144_reg_715_pp0_iter4_reg <= icmp_ln144_reg_715_pp0_iter3_reg;
        icmp_ln144_reg_715_pp0_iter5_reg <= icmp_ln144_reg_715_pp0_iter4_reg;
        icmp_ln144_reg_715_pp0_iter6_reg <= icmp_ln144_reg_715_pp0_iter5_reg;
        icmp_ln144_reg_715_pp0_iter7_reg <= icmp_ln144_reg_715_pp0_iter6_reg;
        tempReg_reg_841 <= tempReg_fu_577_p2;
        tempReg_reg_841_pp0_iter8_reg <= tempReg_reg_841;
        tmp_124_reg_794 <= {{grp_fu_418_p_dout0[63:32]}};
        tmp_125_reg_815 <= {{temp_fu_396_p2[33:32]}};
        tmp_126_reg_799 <= {{grp_fu_426_p_dout0[63:32]}};
        tmp_126_reg_799_pp0_iter5_reg <= tmp_126_reg_799;
        tmp_127_reg_805 <= {{grp_fu_422_p_dout0[63:32]}};
        tmp_127_reg_805_pp0_iter5_reg <= tmp_127_reg_805;
        tmp_128_reg_810 <= {{grp_fu_430_p_dout0[63:32]}};
        tmp_128_reg_810_pp0_iter5_reg <= tmp_128_reg_810;
        tmp_128_reg_810_pp0_iter6_reg <= tmp_128_reg_810_pp0_iter5_reg;
        tmp_129_reg_831 <= {{temp_26_fu_462_p2[33:32]}};
        trunc_ln106_81_reg_778 <= trunc_ln106_81_fu_325_p1;
        trunc_ln106_82_reg_783 <= trunc_ln106_82_fu_329_p1;
        trunc_ln106_83_reg_788 <= trunc_ln106_83_fu_333_p1;
        trunc_ln106_83_reg_788_pp0_iter5_reg <= trunc_ln106_83_reg_788;
        trunc_ln106_reg_773 <= trunc_ln106_fu_321_p1;
        trunc_ln106_reg_773_pp0_iter5_reg <= trunc_ln106_reg_773;
        trunc_ln106_reg_773_pp0_iter6_reg <= trunc_ln106_reg_773_pp0_iter5_reg;
        trunc_ln125_reg_820 <= trunc_ln125_fu_412_p1;
        trunc_ln125_reg_820_pp0_iter6_reg <= trunc_ln125_reg_820;
        u_59_out_load_reg_850 <= u_59_out_i;
        v_reg_855 <= v_fu_592_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_cast_reg_704[2 : 0] <= i_cast_fu_170_p1[2 : 0];
        icmp_ln144_reg_715 <= icmp_ln144_fu_203_p2;
        icmp_ln144_reg_715_pp0_iter1_reg <= icmp_ln144_reg_715;
        j_15_reg_709 <= ap_sig_allocacmp_j_15;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PKB_ce0_local = 1'b1;
    end else begin
        PKB_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PKB_ce1_local = 1'b1;
    end else begin
        PKB_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln144_fu_203_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_15 = 4'd0;
    end else begin
        ap_sig_allocacmp_j_15 = j_fu_94;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            t_out_o = 4'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            t_out_o = u_fu_673_p2;
        end else begin
            t_out_o = t_out_i;
        end
    end else begin
        t_out_o = t_out_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1)))) begin
        t_out_o_ap_vld = 1'b1;
    end else begin
        t_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            u_59_out_o = zext_ln143_cast_fu_174_p1;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            u_59_out_o = v_fu_592_p2;
        end else begin
            u_59_out_o = u_59_out_i;
        end
    end else begin
        u_59_out_o = u_59_out_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1)))) begin
        u_59_out_o_ap_vld = 1'b1;
    end else begin
        u_59_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln144_reg_715_pp0_iter7_reg == 1'd1))) begin
        v_66_out_ap_vld = 1'b1;
    end else begin
        v_66_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign PKB_address0 = zext_ln145_1_fu_268_p1;

assign PKB_address1 = zext_ln145_fu_231_p1;

assign PKB_ce0 = PKB_ce0_local;

assign PKB_ce1 = PKB_ce1_local;

assign add_ln105_fu_456_p2 = (trunc_ln130_fu_448_p1 + add_ln130_49_fu_428_p2);

assign add_ln123_fu_386_p2 = (zext_ln123_fu_380_p1 + zext_ln123_45_fu_383_p1);

assign add_ln130_49_fu_428_p2 = (trunc_ln106_83_reg_788_pp0_iter5_reg + tmp_126_reg_799_pp0_iter5_reg);

assign add_ln130_50_fu_442_p2 = (zext_ln106_50_fu_422_p1 + zext_ln106_48_fu_416_p1);

assign add_ln130_fu_432_p2 = (zext_ln130_fu_425_p1 + zext_ln106_49_fu_419_p1);

assign add_ln133_fu_506_p2 = (zext_ln133_fu_502_p1 + and_ln_fu_488_p3);

assign add_ln144_fu_209_p2 = (ap_sig_allocacmp_j_15 + 4'd1);

assign add_ln145_fu_252_p2 = ($signed(sext_ln145_fu_248_p1) + $signed(8'd192));

assign al_fu_273_p1 = PKB_q1[31:0];

assign and_ln133_1_fu_495_p3 = {{tmp_129_reg_831}, {32'd0}};

assign and_ln147_fu_645_p2 = (xor_ln147_2_fu_637_p3 & add_ln133_reg_836_pp0_iter8_reg);

assign and_ln_fu_488_p3 = {{tmp_128_reg_810_pp0_iter6_reg}, {32'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bit_sel_fu_621_p3 = tempReg_reg_841_pp0_iter8_reg[64'd63];

assign bl_fu_277_p1 = PKB_q0[31:0];

assign carry_fu_548_p3 = xor_ln105_2_fu_542_p2[32'd63];

assign grp_fu_418_p_ce = 1'b1;

assign grp_fu_418_p_din0 = zext_ln105_56_fu_311_p1;

assign grp_fu_418_p_din1 = zext_ln105_fu_301_p1;

assign grp_fu_422_p_ce = 1'b1;

assign grp_fu_422_p_din0 = zext_ln112_fu_316_p1;

assign grp_fu_422_p_din1 = zext_ln105_fu_301_p1;

assign grp_fu_426_p_ce = 1'b1;

assign grp_fu_426_p_din0 = zext_ln105_56_fu_311_p1;

assign grp_fu_426_p_din1 = zext_ln110_fu_306_p1;

assign grp_fu_430_p_ce = 1'b1;

assign grp_fu_430_p_din0 = zext_ln112_fu_316_p1;

assign grp_fu_430_p_din1 = zext_ln110_fu_306_p1;

assign i_cast_fu_170_p1 = i;

assign icmp_ln144_fu_203_p2 = ((ap_sig_allocacmp_j_15 == indvars_iv31) ? 1'b1 : 1'b0);

assign or_ln105_fu_536_p2 = (xor_ln105_fu_524_p2 | xor_ln105_1_fu_530_p2);

assign or_ln147_1_fu_655_p2 = (xor_ln147_3_fu_650_p2 | and_ln147_fu_645_p2);

assign or_ln147_fu_615_p2 = (xor_ln147_fu_607_p2 | xor_ln147_1_fu_611_p2);

assign or_ln1_fu_570_p3 = {{tmp_s_fu_560_p4}, {add_ln105_reg_826}};

assign or_ln_fu_512_p3 = {{trunc_ln125_reg_820_pp0_iter6_reg}, {trunc_ln106_reg_773_pp0_iter6_reg}};

assign sext_ln145_fu_248_p1 = $signed(tmp_123_fu_240_p3);

assign shl_ln_fu_481_p3 = {{trunc_ln125_reg_820_pp0_iter6_reg}, {32'd0}};

assign sub_ln145_fu_236_p2 = (i_cast_reg_704 - j_15_reg_709);

assign tempReg_fu_577_p2 = (or_ln1_fu_570_p3 + zext_ln105_60_fu_556_p1);

assign temp_26_fu_462_p2 = (zext_ln130_46_fu_452_p1 + zext_ln130_45_fu_438_p1);

assign temp_fu_396_p2 = (zext_ln123_46_fu_392_p1 + zext_ln106_fu_377_p1);

assign tmp_120_fu_661_p3 = or_ln147_1_fu_655_p2[32'd63];

assign tmp_123_fu_240_p3 = {{sub_ln145_fu_236_p2}, {3'd0}};

assign tmp_fu_258_p4 = {{add_ln145_fu_252_p2[7:3]}};

assign tmp_s_fu_560_p4 = {{add_ln133_fu_506_p2[63:32]}};

assign trunc_ln106_81_fu_325_p1 = grp_fu_422_p_dout0[31:0];

assign trunc_ln106_82_fu_329_p1 = grp_fu_426_p_dout0[31:0];

assign trunc_ln106_83_fu_333_p1 = grp_fu_430_p_dout0[31:0];

assign trunc_ln106_fu_321_p1 = grp_fu_418_p_dout0[31:0];

assign trunc_ln125_fu_412_p1 = temp_fu_396_p2[31:0];

assign trunc_ln130_fu_448_p1 = add_ln130_50_fu_442_p2[31:0];

assign trunc_ln145_fu_220_p1 = j_15_reg_709[2:0];

assign trunc_ln147_fu_634_p1 = tempReg_reg_841_pp0_iter8_reg[62:0];

assign u_fu_673_p2 = (zext_ln148_fu_669_p1 + t_out_i);

assign v_111_fu_518_p2 = (or_ln_fu_512_p3 + v_66_fu_90);

assign v_66_out = v_66_fu_90;

assign v_fu_592_p2 = (tempReg_reg_841 + u_59_out_i);

assign xor_ln105_1_fu_530_p2 = (v_66_fu_90 ^ shl_ln_fu_481_p3);

assign xor_ln105_2_fu_542_p2 = (v_111_fu_518_p2 ^ or_ln105_fu_536_p2);

assign xor_ln105_fu_524_p2 = (v_111_fu_518_p2 ^ shl_ln_fu_481_p3);

assign xor_ln147_1_fu_611_p2 = (u_59_out_load_reg_850 ^ tempReg_reg_841_pp0_iter8_reg);

assign xor_ln147_2_fu_637_p3 = {{xor_ln147_4_fu_628_p2}, {trunc_ln147_fu_634_p1}};

assign xor_ln147_3_fu_650_p2 = (v_reg_855 ^ or_ln147_fu_615_p2);

assign xor_ln147_4_fu_628_p2 = (bit_sel_fu_621_p3 ^ 1'd1);

assign xor_ln147_fu_607_p2 = (v_reg_855 ^ tempReg_reg_841_pp0_iter8_reg);

assign zext_ln105_56_fu_311_p1 = bl_reg_734;

assign zext_ln105_60_fu_556_p1 = carry_fu_548_p3;

assign zext_ln105_fu_301_p1 = al_reg_729;

assign zext_ln106_48_fu_416_p1 = tmp_125_reg_815;

assign zext_ln106_49_fu_419_p1 = tmp_126_reg_799_pp0_iter5_reg;

assign zext_ln106_50_fu_422_p1 = tmp_127_reg_805_pp0_iter5_reg;

assign zext_ln106_fu_377_p1 = tmp_124_reg_794;

assign zext_ln110_fu_306_p1 = ah_reg_739;

assign zext_ln112_fu_316_p1 = bh_reg_744;

assign zext_ln123_45_fu_383_p1 = trunc_ln106_81_reg_778;

assign zext_ln123_46_fu_392_p1 = add_ln123_fu_386_p2;

assign zext_ln123_fu_380_p1 = trunc_ln106_82_reg_783;

assign zext_ln130_45_fu_438_p1 = add_ln130_fu_432_p2;

assign zext_ln130_46_fu_452_p1 = add_ln130_50_fu_442_p2;

assign zext_ln130_fu_425_p1 = trunc_ln106_83_reg_788_pp0_iter5_reg;

assign zext_ln133_fu_502_p1 = and_ln133_1_fu_495_p3;

assign zext_ln143_cast_fu_174_p1 = zext_ln143;

assign zext_ln145_1_fu_268_p1 = tmp_fu_258_p4;

assign zext_ln145_fu_231_p1 = zext_ln_fu_223_p3;

assign zext_ln148_fu_669_p1 = tmp_120_fu_661_p3;

assign zext_ln_fu_223_p3 = {{1'd1}, {trunc_ln145_fu_220_p1}};

always @ (posedge ap_clk) begin
    i_cast_reg_704[3] <= 1'b0;
    add_ln133_reg_836[31:0] <= 32'b00000000000000000000000000000000;
    add_ln133_reg_836_pp0_iter8_reg[31:0] <= 32'b00000000000000000000000000000000;
end

endmodule //sikep503_kem_enc_hw_mp_mul_9_Pipeline_VITIS_LOOP_144_2
