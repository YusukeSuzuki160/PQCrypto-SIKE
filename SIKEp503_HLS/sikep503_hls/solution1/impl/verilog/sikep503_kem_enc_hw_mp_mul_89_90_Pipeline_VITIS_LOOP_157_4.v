// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_mp_mul_89_90_Pipeline_VITIS_LOOP_157_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        indvars_iv,
        v,
        zext_ln156,
        zext_ln145_3,
        a_0_address0,
        a_0_ce0,
        a_0_q0,
        zext_ln145_2,
        a_1_address0,
        a_1_ce0,
        a_1_q0,
        i_14,
        zext_ln145,
        b_address0,
        b_ce0,
        b_q0,
        v_35_out,
        v_35_out_ap_vld,
        u_34_out_i,
        u_34_out_o,
        u_34_out_o_ap_vld,
        t_33_out,
        t_33_out_ap_vld,
        grp_fu_518_p_din0,
        grp_fu_518_p_din1,
        grp_fu_518_p_dout0,
        grp_fu_518_p_ce,
        grp_fu_522_p_din0,
        grp_fu_522_p_din1,
        grp_fu_522_p_dout0,
        grp_fu_522_p_ce,
        grp_fu_526_p_din0,
        grp_fu_526_p_din1,
        grp_fu_526_p_dout0,
        grp_fu_526_p_ce,
        grp_fu_530_p_din0,
        grp_fu_530_p_din1,
        grp_fu_530_p_dout0,
        grp_fu_530_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] indvars_iv;
input  [63:0] v;
input  [3:0] zext_ln156;
input  [2:0] zext_ln145_3;
output  [2:0] a_0_address0;
output   a_0_ce0;
input  [63:0] a_0_q0;
input  [2:0] zext_ln145_2;
output  [2:0] a_1_address0;
output   a_1_ce0;
input  [63:0] a_1_q0;
input  [3:0] i_14;
input  [3:0] zext_ln145;
output  [3:0] b_address0;
output   b_ce0;
input  [63:0] b_q0;
output  [63:0] v_35_out;
output   v_35_out_ap_vld;
input  [63:0] u_34_out_i;
output  [63:0] u_34_out_o;
output   u_34_out_o_ap_vld;
output  [2:0] t_33_out;
output   t_33_out_ap_vld;
output  [31:0] grp_fu_518_p_din0;
output  [31:0] grp_fu_518_p_din1;
input  [63:0] grp_fu_518_p_dout0;
output   grp_fu_518_p_ce;
output  [31:0] grp_fu_522_p_din0;
output  [31:0] grp_fu_522_p_din1;
input  [63:0] grp_fu_522_p_dout0;
output   grp_fu_522_p_ce;
output  [31:0] grp_fu_526_p_din0;
output  [31:0] grp_fu_526_p_din1;
input  [63:0] grp_fu_526_p_dout0;
output   grp_fu_526_p_ce;
output  [31:0] grp_fu_530_p_din0;
output  [31:0] grp_fu_530_p_din1;
input  [63:0] grp_fu_530_p_dout0;
output   grp_fu_530_p_ce;

reg ap_idle;
reg v_35_out_ap_vld;
reg[63:0] u_34_out_o;
reg u_34_out_o_ap_vld;
reg t_33_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln157_fu_247_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] j_reg_778;
reg   [0:0] icmp_ln157_reg_785;
reg   [0:0] icmp_ln157_reg_785_pp0_iter1_reg;
reg   [0:0] icmp_ln157_reg_785_pp0_iter2_reg;
reg   [0:0] icmp_ln157_reg_785_pp0_iter3_reg;
reg   [0:0] icmp_ln157_reg_785_pp0_iter4_reg;
reg   [0:0] icmp_ln157_reg_785_pp0_iter5_reg;
reg   [0:0] icmp_ln157_reg_785_pp0_iter6_reg;
reg   [0:0] icmp_ln157_reg_785_pp0_iter7_reg;
wire   [0:0] trunc_ln157_fu_264_p1;
reg   [0:0] trunc_ln157_reg_789;
wire   [31:0] al_fu_317_p1;
reg   [31:0] al_reg_809;
wire   [31:0] bl_fu_321_p1;
reg   [31:0] bl_reg_814;
reg   [31:0] ah_reg_819;
reg   [31:0] bh_reg_824;
wire   [63:0] zext_ln105_63_fu_345_p1;
wire   [63:0] zext_ln110_fu_350_p1;
wire   [63:0] zext_ln105_64_fu_355_p1;
wire   [63:0] zext_ln112_fu_360_p1;
wire   [31:0] trunc_ln106_fu_365_p1;
reg   [31:0] trunc_ln106_reg_853;
reg   [31:0] trunc_ln106_reg_853_pp0_iter5_reg;
reg   [31:0] trunc_ln106_reg_853_pp0_iter6_reg;
wire   [31:0] trunc_ln106_90_fu_369_p1;
reg   [31:0] trunc_ln106_90_reg_858;
wire   [31:0] trunc_ln106_91_fu_373_p1;
reg   [31:0] trunc_ln106_91_reg_863;
wire   [31:0] trunc_ln106_92_fu_377_p1;
reg   [31:0] trunc_ln106_92_reg_868;
reg   [31:0] trunc_ln106_92_reg_868_pp0_iter5_reg;
reg   [31:0] tmp_s_reg_874;
reg   [31:0] tmp_143_reg_879;
reg   [31:0] tmp_143_reg_879_pp0_iter5_reg;
reg   [31:0] tmp_144_reg_885;
reg   [31:0] tmp_144_reg_885_pp0_iter5_reg;
reg   [31:0] tmp_145_reg_890;
reg   [31:0] tmp_145_reg_890_pp0_iter5_reg;
reg   [31:0] tmp_145_reg_890_pp0_iter6_reg;
reg   [1:0] tmp_142_reg_895;
wire   [31:0] trunc_ln125_fu_456_p1;
reg   [31:0] trunc_ln125_reg_900;
reg   [31:0] trunc_ln125_reg_900_pp0_iter6_reg;
wire   [31:0] add_ln105_fu_500_p2;
reg   [31:0] add_ln105_reg_906;
reg   [1:0] tmp_146_reg_911;
wire   [63:0] add_ln133_fu_550_p2;
reg   [63:0] add_ln133_reg_916;
reg   [63:0] add_ln133_reg_916_pp0_iter8_reg;
wire   [63:0] tempReg_fu_621_p2;
reg   [63:0] tempReg_reg_921;
reg   [63:0] tempReg_reg_921_pp0_iter8_reg;
reg   [63:0] u_34_out_load_reg_930;
wire   [63:0] u_fu_636_p2;
reg   [63:0] u_reg_935;
wire   [31:0] zext_ln158_fu_281_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln158_4_fu_291_p1;
wire   [31:0] zext_ln158_5_fu_305_p1;
wire   [63:0] zext_ln156_cast_fu_215_p1;
wire    ap_loop_init;
reg   [2:0] t_33_fu_92;
wire   [2:0] t_fu_716_p2;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [63:0] v_35_fu_96;
wire   [63:0] v_115_fu_562_p2;
reg   [3:0] j_8_fu_100;
wire   [3:0] indvars_iv_cast_fu_219_p1;
wire   [3:0] add_ln157_fu_253_p2;
reg   [3:0] ap_sig_allocacmp_j;
wire    ap_block_pp0_stage0_01001;
reg    a_0_ce0_local;
reg    a_1_ce0_local;
reg    b_ce0_local;
wire   [2:0] lshr_ln139_1_fu_267_p4;
wire   [2:0] add_ln158_fu_276_p2;
wire   [2:0] add_ln158_2_fu_286_p2;
wire   [3:0] sub_ln158_fu_296_p2;
wire   [3:0] add_ln158_3_fu_300_p2;
wire   [63:0] select_ln158_fu_310_p3;
wire   [32:0] zext_ln123_fu_424_p1;
wire   [32:0] zext_ln123_51_fu_427_p1;
wire   [32:0] add_ln123_fu_430_p2;
wire   [33:0] zext_ln123_52_fu_436_p1;
wire   [33:0] zext_ln106_fu_421_p1;
wire   [33:0] temp_fu_440_p2;
wire   [32:0] zext_ln130_fu_469_p1;
wire   [32:0] zext_ln106_58_fu_463_p1;
wire   [32:0] add_ln130_58_fu_476_p2;
wire   [32:0] zext_ln106_59_fu_466_p1;
wire   [32:0] zext_ln106_57_fu_460_p1;
wire   [32:0] add_ln130_59_fu_486_p2;
wire   [31:0] trunc_ln130_fu_492_p1;
wire   [31:0] add_ln130_fu_472_p2;
wire   [33:0] zext_ln130_52_fu_496_p1;
wire   [33:0] zext_ln130_51_fu_482_p1;
wire   [33:0] temp_29_fu_506_p2;
wire   [33:0] and_ln133_6_fu_539_p3;
wire   [63:0] zext_ln133_fu_546_p1;
wire   [63:0] and_ln133_5_fu_532_p3;
wire   [63:0] or_ln5_fu_556_p3;
wire   [63:0] shl_ln125_8_fu_525_p3;
wire   [63:0] xor_ln105_8_fu_568_p2;
wire   [63:0] xor_ln105_9_fu_574_p2;
wire   [63:0] or_ln105_2_fu_580_p2;
wire   [63:0] xor_ln105_10_fu_586_p2;
wire   [0:0] carry_fu_592_p3;
wire   [31:0] tmp_4_fu_604_p4;
wire   [63:0] or_ln6_fu_614_p3;
wire   [63:0] zext_ln105_fu_600_p1;
wire   [63:0] xor_ln160_fu_650_p2;
wire   [63:0] xor_ln160_4_fu_654_p2;
wire   [0:0] bit_sel1_fu_664_p3;
wire   [0:0] xor_ln160_7_fu_671_p2;
wire   [62:0] trunc_ln160_fu_677_p1;
wire   [63:0] xor_ln160_5_fu_680_p3;
wire   [63:0] or_ln160_fu_658_p2;
wire   [63:0] xor_ln160_6_fu_693_p2;
wire   [63:0] and_ln160_fu_688_p2;
wire   [63:0] or_ln160_2_fu_698_p2;
wire   [0:0] tmp_fu_704_p3;
wire   [2:0] zext_ln161_fu_712_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 t_33_fu_92 = 3'd0;
#0 v_35_fu_96 = 64'd0;
#0 j_8_fu_100 = 4'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln157_fu_247_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_8_fu_100 <= add_ln157_fu_253_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_8_fu_100 <= indvars_iv_cast_fu_219_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_33_fu_92 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            t_33_fu_92 <= t_fu_716_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            v_35_fu_96 <= v;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            v_35_fu_96 <= v_115_fu_562_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln105_reg_906 <= add_ln105_fu_500_p2;
        add_ln133_reg_916[63 : 32] <= add_ln133_fu_550_p2[63 : 32];
        add_ln133_reg_916_pp0_iter8_reg[63 : 32] <= add_ln133_reg_916[63 : 32];
        ah_reg_819 <= {{select_ln158_fu_310_p3[63:32]}};
        al_reg_809 <= al_fu_317_p1;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        bh_reg_824 <= {{b_q0[63:32]}};
        bl_reg_814 <= bl_fu_321_p1;
        icmp_ln157_reg_785_pp0_iter2_reg <= icmp_ln157_reg_785_pp0_iter1_reg;
        icmp_ln157_reg_785_pp0_iter3_reg <= icmp_ln157_reg_785_pp0_iter2_reg;
        icmp_ln157_reg_785_pp0_iter4_reg <= icmp_ln157_reg_785_pp0_iter3_reg;
        icmp_ln157_reg_785_pp0_iter5_reg <= icmp_ln157_reg_785_pp0_iter4_reg;
        icmp_ln157_reg_785_pp0_iter6_reg <= icmp_ln157_reg_785_pp0_iter5_reg;
        icmp_ln157_reg_785_pp0_iter7_reg <= icmp_ln157_reg_785_pp0_iter6_reg;
        tempReg_reg_921 <= tempReg_fu_621_p2;
        tempReg_reg_921_pp0_iter8_reg <= tempReg_reg_921;
        tmp_142_reg_895 <= {{temp_fu_440_p2[33:32]}};
        tmp_143_reg_879 <= {{grp_fu_526_p_dout0[63:32]}};
        tmp_143_reg_879_pp0_iter5_reg <= tmp_143_reg_879;
        tmp_144_reg_885 <= {{grp_fu_522_p_dout0[63:32]}};
        tmp_144_reg_885_pp0_iter5_reg <= tmp_144_reg_885;
        tmp_145_reg_890 <= {{grp_fu_530_p_dout0[63:32]}};
        tmp_145_reg_890_pp0_iter5_reg <= tmp_145_reg_890;
        tmp_145_reg_890_pp0_iter6_reg <= tmp_145_reg_890_pp0_iter5_reg;
        tmp_146_reg_911 <= {{temp_29_fu_506_p2[33:32]}};
        tmp_s_reg_874 <= {{grp_fu_518_p_dout0[63:32]}};
        trunc_ln106_90_reg_858 <= trunc_ln106_90_fu_369_p1;
        trunc_ln106_91_reg_863 <= trunc_ln106_91_fu_373_p1;
        trunc_ln106_92_reg_868 <= trunc_ln106_92_fu_377_p1;
        trunc_ln106_92_reg_868_pp0_iter5_reg <= trunc_ln106_92_reg_868;
        trunc_ln106_reg_853 <= trunc_ln106_fu_365_p1;
        trunc_ln106_reg_853_pp0_iter5_reg <= trunc_ln106_reg_853;
        trunc_ln106_reg_853_pp0_iter6_reg <= trunc_ln106_reg_853_pp0_iter5_reg;
        trunc_ln125_reg_900 <= trunc_ln125_fu_456_p1;
        trunc_ln125_reg_900_pp0_iter6_reg <= trunc_ln125_reg_900;
        u_34_out_load_reg_930 <= u_34_out_i;
        u_reg_935 <= u_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln157_reg_785 <= icmp_ln157_fu_247_p2;
        icmp_ln157_reg_785_pp0_iter1_reg <= icmp_ln157_reg_785;
        j_reg_778 <= ap_sig_allocacmp_j;
        trunc_ln157_reg_789 <= trunc_ln157_fu_264_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_0_ce0_local = 1'b1;
    end else begin
        a_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_1_ce0_local = 1'b1;
    end else begin
        a_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_247_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j = indvars_iv_cast_fu_219_p1;
    end else begin
        ap_sig_allocacmp_j = j_8_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_ce0_local = 1'b1;
    end else begin
        b_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln157_reg_785_pp0_iter7_reg == 1'd1))) begin
        t_33_out_ap_vld = 1'b1;
    end else begin
        t_33_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            u_34_out_o = zext_ln156_cast_fu_215_p1;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            u_34_out_o = u_fu_636_p2;
        end else begin
            u_34_out_o = u_34_out_i;
        end
    end else begin
        u_34_out_o = u_34_out_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
        u_34_out_o_ap_vld = 1'b1;
    end else begin
        u_34_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln157_reg_785_pp0_iter7_reg == 1'd1))) begin
        v_35_out_ap_vld = 1'b1;
    end else begin
        v_35_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_address0 = zext_ln158_fu_281_p1;

assign a_0_ce0 = a_0_ce0_local;

assign a_1_address0 = zext_ln158_4_fu_291_p1;

assign a_1_ce0 = a_1_ce0_local;

assign add_ln105_fu_500_p2 = (trunc_ln130_fu_492_p1 + add_ln130_fu_472_p2);

assign add_ln123_fu_430_p2 = (zext_ln123_fu_424_p1 + zext_ln123_51_fu_427_p1);

assign add_ln130_58_fu_476_p2 = (zext_ln130_fu_469_p1 + zext_ln106_58_fu_463_p1);

assign add_ln130_59_fu_486_p2 = (zext_ln106_59_fu_466_p1 + zext_ln106_57_fu_460_p1);

assign add_ln130_fu_472_p2 = (trunc_ln106_92_reg_868_pp0_iter5_reg + tmp_143_reg_879_pp0_iter5_reg);

assign add_ln133_fu_550_p2 = (zext_ln133_fu_546_p1 + and_ln133_5_fu_532_p3);

assign add_ln157_fu_253_p2 = (ap_sig_allocacmp_j + 4'd1);

assign add_ln158_2_fu_286_p2 = (zext_ln145_2 + lshr_ln139_1_fu_267_p4);

assign add_ln158_3_fu_300_p2 = (zext_ln145 + sub_ln158_fu_296_p2);

assign add_ln158_fu_276_p2 = (zext_ln145_3 + lshr_ln139_1_fu_267_p4);

assign al_fu_317_p1 = select_ln158_fu_310_p3[31:0];

assign and_ln133_5_fu_532_p3 = {{tmp_145_reg_890_pp0_iter6_reg}, {32'd0}};

assign and_ln133_6_fu_539_p3 = {{tmp_146_reg_911}, {32'd0}};

assign and_ln160_fu_688_p2 = (xor_ln160_5_fu_680_p3 & add_ln133_reg_916_pp0_iter8_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign b_address0 = zext_ln158_5_fu_305_p1;

assign b_ce0 = b_ce0_local;

assign bit_sel1_fu_664_p3 = tempReg_reg_921_pp0_iter8_reg[64'd63];

assign bl_fu_321_p1 = b_q0[31:0];

assign carry_fu_592_p3 = xor_ln105_10_fu_586_p2[32'd63];

assign grp_fu_518_p_ce = 1'b1;

assign grp_fu_518_p_din0 = zext_ln105_64_fu_355_p1;

assign grp_fu_518_p_din1 = zext_ln105_63_fu_345_p1;

assign grp_fu_522_p_ce = 1'b1;

assign grp_fu_522_p_din0 = zext_ln112_fu_360_p1;

assign grp_fu_522_p_din1 = zext_ln105_63_fu_345_p1;

assign grp_fu_526_p_ce = 1'b1;

assign grp_fu_526_p_din0 = zext_ln105_64_fu_355_p1;

assign grp_fu_526_p_din1 = zext_ln110_fu_350_p1;

assign grp_fu_530_p_ce = 1'b1;

assign grp_fu_530_p_din0 = zext_ln112_fu_360_p1;

assign grp_fu_530_p_din1 = zext_ln110_fu_350_p1;

assign icmp_ln157_fu_247_p2 = ((ap_sig_allocacmp_j == 4'd8) ? 1'b1 : 1'b0);

assign indvars_iv_cast_fu_219_p1 = indvars_iv;

assign lshr_ln139_1_fu_267_p4 = {{j_reg_778[3:1]}};

assign or_ln105_2_fu_580_p2 = (xor_ln105_9_fu_574_p2 | xor_ln105_8_fu_568_p2);

assign or_ln160_2_fu_698_p2 = (xor_ln160_6_fu_693_p2 | and_ln160_fu_688_p2);

assign or_ln160_fu_658_p2 = (xor_ln160_fu_650_p2 | xor_ln160_4_fu_654_p2);

assign or_ln5_fu_556_p3 = {{trunc_ln125_reg_900_pp0_iter6_reg}, {trunc_ln106_reg_853_pp0_iter6_reg}};

assign or_ln6_fu_614_p3 = {{tmp_4_fu_604_p4}, {add_ln105_reg_906}};

assign select_ln158_fu_310_p3 = ((trunc_ln157_reg_789[0:0] == 1'b1) ? a_1_q0 : a_0_q0);

assign shl_ln125_8_fu_525_p3 = {{trunc_ln125_reg_900_pp0_iter6_reg}, {32'd0}};

assign sub_ln158_fu_296_p2 = (i_14 - j_reg_778);

assign t_33_out = t_33_fu_92;

assign t_fu_716_p2 = (zext_ln161_fu_712_p1 + t_33_fu_92);

assign tempReg_fu_621_p2 = (or_ln6_fu_614_p3 + zext_ln105_fu_600_p1);

assign temp_29_fu_506_p2 = (zext_ln130_52_fu_496_p1 + zext_ln130_51_fu_482_p1);

assign temp_fu_440_p2 = (zext_ln123_52_fu_436_p1 + zext_ln106_fu_421_p1);

assign tmp_4_fu_604_p4 = {{add_ln133_fu_550_p2[63:32]}};

assign tmp_fu_704_p3 = or_ln160_2_fu_698_p2[32'd63];

assign trunc_ln106_90_fu_369_p1 = grp_fu_522_p_dout0[31:0];

assign trunc_ln106_91_fu_373_p1 = grp_fu_526_p_dout0[31:0];

assign trunc_ln106_92_fu_377_p1 = grp_fu_530_p_dout0[31:0];

assign trunc_ln106_fu_365_p1 = grp_fu_518_p_dout0[31:0];

assign trunc_ln125_fu_456_p1 = temp_fu_440_p2[31:0];

assign trunc_ln130_fu_492_p1 = add_ln130_59_fu_486_p2[31:0];

assign trunc_ln157_fu_264_p1 = j_reg_778[0:0];

assign trunc_ln160_fu_677_p1 = tempReg_reg_921_pp0_iter8_reg[62:0];

assign u_fu_636_p2 = (tempReg_reg_921 + u_34_out_i);

assign v_115_fu_562_p2 = (or_ln5_fu_556_p3 + v_35_fu_96);

assign v_35_out = v_35_fu_96;

assign xor_ln105_10_fu_586_p2 = (v_115_fu_562_p2 ^ or_ln105_2_fu_580_p2);

assign xor_ln105_8_fu_568_p2 = (v_115_fu_562_p2 ^ shl_ln125_8_fu_525_p3);

assign xor_ln105_9_fu_574_p2 = (v_35_fu_96 ^ shl_ln125_8_fu_525_p3);

assign xor_ln160_4_fu_654_p2 = (u_34_out_load_reg_930 ^ tempReg_reg_921_pp0_iter8_reg);

assign xor_ln160_5_fu_680_p3 = {{xor_ln160_7_fu_671_p2}, {trunc_ln160_fu_677_p1}};

assign xor_ln160_6_fu_693_p2 = (u_reg_935 ^ or_ln160_fu_658_p2);

assign xor_ln160_7_fu_671_p2 = (bit_sel1_fu_664_p3 ^ 1'd1);

assign xor_ln160_fu_650_p2 = (u_reg_935 ^ tempReg_reg_921_pp0_iter8_reg);

assign zext_ln105_63_fu_345_p1 = al_reg_809;

assign zext_ln105_64_fu_355_p1 = bl_reg_814;

assign zext_ln105_fu_600_p1 = carry_fu_592_p3;

assign zext_ln106_57_fu_460_p1 = tmp_142_reg_895;

assign zext_ln106_58_fu_463_p1 = tmp_143_reg_879_pp0_iter5_reg;

assign zext_ln106_59_fu_466_p1 = tmp_144_reg_885_pp0_iter5_reg;

assign zext_ln106_fu_421_p1 = tmp_s_reg_874;

assign zext_ln110_fu_350_p1 = ah_reg_819;

assign zext_ln112_fu_360_p1 = bh_reg_824;

assign zext_ln123_51_fu_427_p1 = trunc_ln106_90_reg_858;

assign zext_ln123_52_fu_436_p1 = add_ln123_fu_430_p2;

assign zext_ln123_fu_424_p1 = trunc_ln106_91_reg_863;

assign zext_ln130_51_fu_482_p1 = add_ln130_58_fu_476_p2;

assign zext_ln130_52_fu_496_p1 = add_ln130_59_fu_486_p2;

assign zext_ln130_fu_469_p1 = trunc_ln106_92_reg_868_pp0_iter5_reg;

assign zext_ln133_fu_546_p1 = and_ln133_6_fu_539_p3;

assign zext_ln156_cast_fu_215_p1 = zext_ln156;

assign zext_ln158_4_fu_291_p1 = add_ln158_2_fu_286_p2;

assign zext_ln158_5_fu_305_p1 = add_ln158_3_fu_300_p2;

assign zext_ln158_fu_281_p1 = add_ln158_fu_276_p2;

assign zext_ln161_fu_712_p1 = tmp_fu_704_p3;

always @ (posedge ap_clk) begin
    add_ln133_reg_916[31:0] <= 32'b00000000000000000000000000000000;
    add_ln133_reg_916_pp0_iter8_reg[31:0] <= 32'b00000000000000000000000000000000;
end

endmodule //sikep503_kem_enc_hw_mp_mul_89_90_Pipeline_VITIS_LOOP_157_4
