// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_rdc_mont_14183_Pipeline_VITIS_LOOP_206_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        indvars_iv,
        v_56,
        u,
        sub66,
        zext_ln181,
        mc_address0,
        mc_ce0,
        mc_q0,
        empty,
        v_63_out,
        v_63_out_ap_vld,
        u_46_out,
        u_46_out_ap_vld,
        t_30_out,
        t_30_out_ap_vld,
        grp_fu_901_p_din0,
        grp_fu_901_p_din1,
        grp_fu_901_p_dout0,
        grp_fu_901_p_ce,
        grp_fu_905_p_din0,
        grp_fu_905_p_din1,
        grp_fu_905_p_dout0,
        grp_fu_905_p_ce,
        grp_fu_909_p_din0,
        grp_fu_909_p_din1,
        grp_fu_909_p_dout0,
        grp_fu_909_p_ce,
        grp_fu_913_p_din0,
        grp_fu_913_p_din1,
        grp_fu_913_p_dout0,
        grp_fu_913_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] indvars_iv;
input  [63:0] v_56;
input  [63:0] u;
input  [31:0] sub66;
input  [3:0] zext_ln181;
output  [3:0] mc_address0;
output   mc_ce0;
input  [63:0] mc_q0;
input  [2:0] empty;
output  [63:0] v_63_out;
output   v_63_out_ap_vld;
output  [63:0] u_46_out;
output   u_46_out_ap_vld;
output  [63:0] t_30_out;
output   t_30_out_ap_vld;
output  [31:0] grp_fu_901_p_din0;
output  [31:0] grp_fu_901_p_din1;
input  [63:0] grp_fu_901_p_dout0;
output   grp_fu_901_p_ce;
output  [31:0] grp_fu_905_p_din0;
output  [31:0] grp_fu_905_p_din1;
input  [63:0] grp_fu_905_p_dout0;
output   grp_fu_905_p_ce;
output  [31:0] grp_fu_909_p_din0;
output  [31:0] grp_fu_909_p_din1;
input  [63:0] grp_fu_909_p_dout0;
output   grp_fu_909_p_ce;
output  [31:0] grp_fu_913_p_din0;
output  [31:0] grp_fu_913_p_din1;
input  [63:0] grp_fu_913_p_dout0;
output   grp_fu_913_p_ce;

reg ap_idle;
reg v_63_out_ap_vld;
reg u_46_out_ap_vld;
reg t_30_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln206_fu_226_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] p503p1_1_address0;
wire   [63:0] p503p1_1_q0;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln206_reg_737;
reg   [0:0] icmp_ln206_reg_737_pp0_iter1_reg;
reg   [0:0] icmp_ln206_reg_737_pp0_iter2_reg;
reg   [0:0] icmp_ln206_reg_737_pp0_iter3_reg;
reg   [0:0] icmp_ln206_reg_737_pp0_iter4_reg;
reg   [0:0] icmp_ln206_reg_737_pp0_iter5_reg;
reg   [0:0] icmp_ln206_reg_737_pp0_iter6_reg;
reg   [0:0] icmp_ln206_reg_737_pp0_iter7_reg;
wire   [0:0] icmp_ln207_fu_240_p2;
reg   [0:0] icmp_ln207_reg_741;
reg   [0:0] icmp_ln207_reg_741_pp0_iter1_reg;
reg   [0:0] icmp_ln207_reg_741_pp0_iter2_reg;
reg   [0:0] icmp_ln207_reg_741_pp0_iter3_reg;
reg   [0:0] icmp_ln207_reg_741_pp0_iter4_reg;
reg   [0:0] icmp_ln207_reg_741_pp0_iter5_reg;
reg   [0:0] icmp_ln207_reg_741_pp0_iter6_reg;
reg   [0:0] icmp_ln207_reg_741_pp0_iter7_reg;
reg   [0:0] icmp_ln207_reg_741_pp0_iter8_reg;
wire   [31:0] al_fu_279_p1;
reg   [31:0] al_reg_758;
wire   [31:0] bl_fu_283_p1;
reg   [31:0] bl_reg_763;
reg   [31:0] ah_reg_768;
reg   [31:0] bh_reg_773;
wire   [63:0] zext_ln105_28_fu_307_p1;
wire   [63:0] zext_ln110_fu_312_p1;
wire   [63:0] zext_ln105_29_fu_317_p1;
wire   [63:0] zext_ln112_fu_322_p1;
wire   [31:0] trunc_ln106_fu_327_p1;
reg   [31:0] trunc_ln106_reg_802;
reg   [31:0] trunc_ln106_reg_802_pp0_iter4_reg;
reg   [31:0] trunc_ln106_reg_802_pp0_iter5_reg;
reg   [31:0] trunc_ln106_reg_802_pp0_iter6_reg;
wire   [31:0] trunc_ln106_46_fu_331_p1;
reg   [31:0] trunc_ln106_46_reg_807;
wire   [31:0] trunc_ln106_47_fu_335_p1;
reg   [31:0] trunc_ln106_47_reg_812;
wire   [31:0] trunc_ln106_48_fu_339_p1;
reg   [31:0] trunc_ln106_48_reg_817;
reg   [31:0] tmp_s_reg_822;
reg   [31:0] tmp_57_reg_827;
reg   [31:0] trunc_ln106_s_reg_832;
reg   [31:0] trunc_ln106_s_reg_832_pp0_iter4_reg;
reg   [31:0] tmp_58_reg_837;
reg   [31:0] tmp_58_reg_837_pp0_iter4_reg;
reg   [31:0] tmp_58_reg_837_pp0_iter5_reg;
reg   [1:0] tmp_56_reg_842;
wire   [31:0] trunc_ln125_fu_418_p1;
reg   [31:0] trunc_ln125_reg_847;
reg   [31:0] trunc_ln125_reg_847_pp0_iter5_reg;
reg   [31:0] trunc_ln125_reg_847_pp0_iter6_reg;
wire   [32:0] add_ln130_fu_428_p2;
reg   [32:0] add_ln130_reg_853;
wire   [31:0] trunc_ln105_fu_455_p1;
reg   [31:0] trunc_ln105_reg_858;
reg   [1:0] tmp_59_reg_863;
wire   [63:0] xor_ln210_fu_496_p2;
reg   [63:0] xor_ln210_reg_868;
reg   [63:0] xor_ln210_reg_868_pp0_iter7_reg;
reg   [63:0] xor_ln210_reg_868_pp0_iter8_reg;
wire   [63:0] tempReg_15_fu_560_p2;
reg   [63:0] tempReg_15_reg_874;
reg   [63:0] tempReg_15_reg_874_pp0_iter8_reg;
reg   [0:0] tmp_61_reg_883;
wire   [31:0] zext_ln208_6_fu_252_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln208_fu_263_p1;
reg   [63:0] t_fu_84;
wire   [63:0] t_5_fu_682_p3;
wire    ap_loop_init;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [63:0] u_46_fu_88;
wire   [63:0] u_5_fu_615_p3;
reg   [63:0] v_fu_92;
wire   [63:0] v_5_fu_565_p3;
reg   [3:0] j_6_fu_96;
wire   [3:0] indvars_iv_cast_fu_199_p1;
wire   [3:0] add_ln206_fu_268_p2;
reg   [3:0] ap_sig_allocacmp_j;
wire    ap_block_pp0_stage0_01001;
reg    mc_ce0_local;
reg    p503p1_1_ce0_local;
wire   [31:0] zext_ln206_fu_232_p1;
wire   [3:0] add_ln208_fu_246_p2;
wire   [2:0] trunc_ln206_fu_236_p1;
wire   [2:0] sub_ln208_fu_257_p2;
wire   [32:0] zext_ln123_fu_386_p1;
wire   [32:0] zext_ln123_23_fu_389_p1;
wire   [32:0] add_ln123_fu_392_p2;
wire   [33:0] zext_ln123_24_fu_398_p1;
wire   [33:0] zext_ln106_fu_383_p1;
wire   [33:0] temp_fu_402_p2;
wire   [32:0] zext_ln130_fu_425_p1;
wire   [32:0] zext_ln106_24_fu_422_p1;
wire   [31:0] zext_ln106_23_fu_434_p1;
wire   [31:0] add_ln130_24_fu_440_p2;
wire   [33:0] zext_ln130_24_fu_445_p1;
wire   [33:0] zext_ln130_23_fu_437_p1;
wire   [33:0] temp_15_fu_449_p2;
wire   [33:0] and_ln210_6_fu_476_p3;
wire   [63:0] zext_ln210_fu_483_p1;
wire   [63:0] and_ln6_fu_469_p3;
wire   [63:0] add_ln210_fu_490_p2;
wire   [63:0] zext_ln210_6_fu_487_p1;
wire   [63:0] tempReg_fu_512_p3;
wire   [63:0] shl_ln125_6_fu_505_p3;
wire   [63:0] v_57_fu_518_p2;
wire   [63:0] xor_ln105_99_fu_530_p2;
wire   [63:0] xor_ln105_fu_524_p2;
wire   [63:0] or_ln105_fu_536_p2;
wire   [63:0] xor_ln105_100_fu_542_p2;
wire   [0:0] carry_fu_548_p3;
wire   [63:0] zext_ln105_fu_556_p1;
wire   [63:0] u_53_fu_580_p2;
wire   [63:0] xor_ln105_103_fu_590_p2;
wire   [63:0] xor_ln105_102_fu_585_p2;
wire   [63:0] or_ln105_18_fu_595_p2;
wire   [63:0] xor_ln105_104_fu_601_p2;
wire   [0:0] bit_sel4_fu_630_p3;
wire   [0:0] xor_ln105_101_fu_637_p2;
wire   [62:0] trunc_ln105_20_fu_643_p1;
wire   [63:0] xor_ln105_s_fu_646_p3;
wire   [63:0] and_ln105_fu_654_p2;
wire   [0:0] tmp_60_fu_659_p3;
wire   [0:0] carry_30_fu_667_p2;
wire   [63:0] zext_ln211_fu_672_p1;
wire   [63:0] t_21_fu_676_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 t_fu_84 = 64'd0;
#0 u_46_fu_88 = 64'd0;
#0 v_fu_92 = 64'd0;
#0 j_6_fu_96 = 4'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_rdc_mont_14183_Pipeline_VITIS_LOOP_185_3_p503p1_1_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
p503p1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p503p1_1_address0),
    .ce0(p503p1_1_ce0_local),
    .q0(p503p1_1_q0)
);

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln206_fu_226_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_6_fu_96 <= add_ln206_fu_268_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_6_fu_96 <= indvars_iv_cast_fu_199_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_fu_84 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            t_fu_84 <= t_5_fu_682_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            u_46_fu_88 <= u;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            u_46_fu_88 <= u_5_fu_615_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            v_fu_92 <= v_56;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            v_fu_92 <= v_5_fu_565_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln130_reg_853 <= add_ln130_fu_428_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        icmp_ln206_reg_737_pp0_iter2_reg <= icmp_ln206_reg_737_pp0_iter1_reg;
        icmp_ln206_reg_737_pp0_iter3_reg <= icmp_ln206_reg_737_pp0_iter2_reg;
        icmp_ln206_reg_737_pp0_iter4_reg <= icmp_ln206_reg_737_pp0_iter3_reg;
        icmp_ln206_reg_737_pp0_iter5_reg <= icmp_ln206_reg_737_pp0_iter4_reg;
        icmp_ln206_reg_737_pp0_iter6_reg <= icmp_ln206_reg_737_pp0_iter5_reg;
        icmp_ln206_reg_737_pp0_iter7_reg <= icmp_ln206_reg_737_pp0_iter6_reg;
        icmp_ln207_reg_741_pp0_iter2_reg <= icmp_ln207_reg_741_pp0_iter1_reg;
        icmp_ln207_reg_741_pp0_iter3_reg <= icmp_ln207_reg_741_pp0_iter2_reg;
        icmp_ln207_reg_741_pp0_iter4_reg <= icmp_ln207_reg_741_pp0_iter3_reg;
        icmp_ln207_reg_741_pp0_iter5_reg <= icmp_ln207_reg_741_pp0_iter4_reg;
        icmp_ln207_reg_741_pp0_iter6_reg <= icmp_ln207_reg_741_pp0_iter5_reg;
        icmp_ln207_reg_741_pp0_iter7_reg <= icmp_ln207_reg_741_pp0_iter6_reg;
        icmp_ln207_reg_741_pp0_iter8_reg <= icmp_ln207_reg_741_pp0_iter7_reg;
        tempReg_15_reg_874 <= tempReg_15_fu_560_p2;
        tempReg_15_reg_874_pp0_iter8_reg <= tempReg_15_reg_874;
        tmp_56_reg_842 <= {{temp_fu_402_p2[33:32]}};
        tmp_57_reg_827 <= {{grp_fu_909_p_dout0[63:32]}};
        tmp_58_reg_837 <= {{grp_fu_913_p_dout0[63:32]}};
        tmp_58_reg_837_pp0_iter4_reg <= tmp_58_reg_837;
        tmp_58_reg_837_pp0_iter5_reg <= tmp_58_reg_837_pp0_iter4_reg;
        tmp_59_reg_863 <= {{temp_15_fu_449_p2[33:32]}};
        tmp_61_reg_883 <= xor_ln105_104_fu_601_p2[32'd63];
        tmp_s_reg_822 <= {{grp_fu_901_p_dout0[63:32]}};
        trunc_ln105_reg_858 <= trunc_ln105_fu_455_p1;
        trunc_ln106_46_reg_807 <= trunc_ln106_46_fu_331_p1;
        trunc_ln106_47_reg_812 <= trunc_ln106_47_fu_335_p1;
        trunc_ln106_48_reg_817 <= trunc_ln106_48_fu_339_p1;
        trunc_ln106_reg_802 <= trunc_ln106_fu_327_p1;
        trunc_ln106_reg_802_pp0_iter4_reg <= trunc_ln106_reg_802;
        trunc_ln106_reg_802_pp0_iter5_reg <= trunc_ln106_reg_802_pp0_iter4_reg;
        trunc_ln106_reg_802_pp0_iter6_reg <= trunc_ln106_reg_802_pp0_iter5_reg;
        trunc_ln106_s_reg_832 <= {{grp_fu_905_p_dout0[63:32]}};
        trunc_ln106_s_reg_832_pp0_iter4_reg <= trunc_ln106_s_reg_832;
        trunc_ln125_reg_847 <= trunc_ln125_fu_418_p1;
        trunc_ln125_reg_847_pp0_iter5_reg <= trunc_ln125_reg_847;
        trunc_ln125_reg_847_pp0_iter6_reg <= trunc_ln125_reg_847_pp0_iter5_reg;
        xor_ln210_reg_868 <= xor_ln210_fu_496_p2;
        xor_ln210_reg_868_pp0_iter7_reg <= xor_ln210_reg_868;
        xor_ln210_reg_868_pp0_iter8_reg <= xor_ln210_reg_868_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ah_reg_768 <= {{mc_q0[63:32]}};
        al_reg_758 <= al_fu_279_p1;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        bh_reg_773 <= {{p503p1_1_q0[63:32]}};
        bl_reg_763 <= bl_fu_283_p1;
        icmp_ln206_reg_737 <= icmp_ln206_fu_226_p2;
        icmp_ln206_reg_737_pp0_iter1_reg <= icmp_ln206_reg_737;
        icmp_ln207_reg_741 <= icmp_ln207_fu_240_p2;
        icmp_ln207_reg_741_pp0_iter1_reg <= icmp_ln207_reg_741;
    end
end

always @ (*) begin
    if (((icmp_ln206_fu_226_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j = indvars_iv_cast_fu_199_p1;
    end else begin
        ap_sig_allocacmp_j = j_6_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mc_ce0_local = 1'b1;
    end else begin
        mc_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p503p1_1_ce0_local = 1'b1;
    end else begin
        p503p1_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln206_reg_737_pp0_iter7_reg == 1'd1))) begin
        t_30_out_ap_vld = 1'b1;
    end else begin
        t_30_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln206_reg_737_pp0_iter7_reg == 1'd1))) begin
        u_46_out_ap_vld = 1'b1;
    end else begin
        u_46_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln206_reg_737_pp0_iter7_reg == 1'd1))) begin
        v_63_out_ap_vld = 1'b1;
    end else begin
        v_63_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln123_fu_392_p2 = (zext_ln123_fu_386_p1 + zext_ln123_23_fu_389_p1);

assign add_ln130_24_fu_440_p2 = (trunc_ln106_s_reg_832_pp0_iter4_reg + zext_ln106_23_fu_434_p1);

assign add_ln130_fu_428_p2 = (zext_ln130_fu_425_p1 + zext_ln106_24_fu_422_p1);

assign add_ln206_fu_268_p2 = (ap_sig_allocacmp_j + 4'd1);

assign add_ln208_fu_246_p2 = (zext_ln181 + ap_sig_allocacmp_j);

assign add_ln210_fu_490_p2 = (zext_ln210_fu_483_p1 + and_ln6_fu_469_p3);

assign al_fu_279_p1 = mc_q0[31:0];

assign and_ln105_fu_654_p2 = (xor_ln210_reg_868_pp0_iter8_reg & xor_ln105_s_fu_646_p3);

assign and_ln210_6_fu_476_p3 = {{tmp_59_reg_863}, {32'd0}};

assign and_ln6_fu_469_p3 = {{tmp_58_reg_837_pp0_iter5_reg}, {32'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bit_sel4_fu_630_p3 = tempReg_15_reg_874_pp0_iter8_reg[64'd63];

assign bl_fu_283_p1 = p503p1_1_q0[31:0];

assign carry_30_fu_667_p2 = (tmp_61_reg_883 | tmp_60_fu_659_p3);

assign carry_fu_548_p3 = xor_ln105_100_fu_542_p2[32'd63];

assign grp_fu_901_p_ce = 1'b1;

assign grp_fu_901_p_din0 = zext_ln105_29_fu_317_p1;

assign grp_fu_901_p_din1 = zext_ln105_28_fu_307_p1;

assign grp_fu_905_p_ce = 1'b1;

assign grp_fu_905_p_din0 = zext_ln112_fu_322_p1;

assign grp_fu_905_p_din1 = zext_ln105_28_fu_307_p1;

assign grp_fu_909_p_ce = 1'b1;

assign grp_fu_909_p_din0 = zext_ln105_29_fu_317_p1;

assign grp_fu_909_p_din1 = zext_ln110_fu_312_p1;

assign grp_fu_913_p_ce = 1'b1;

assign grp_fu_913_p_din0 = zext_ln112_fu_322_p1;

assign grp_fu_913_p_din1 = zext_ln110_fu_312_p1;

assign icmp_ln206_fu_226_p2 = ((ap_sig_allocacmp_j == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln207_fu_240_p2 = ((zext_ln206_fu_232_p1 < sub66) ? 1'b1 : 1'b0);

assign indvars_iv_cast_fu_199_p1 = indvars_iv;

assign mc_address0 = zext_ln208_6_fu_252_p1;

assign mc_ce0 = mc_ce0_local;

assign or_ln105_18_fu_595_p2 = (xor_ln105_103_fu_590_p2 | xor_ln105_102_fu_585_p2);

assign or_ln105_fu_536_p2 = (xor_ln105_fu_524_p2 | xor_ln105_99_fu_530_p2);

assign p503p1_1_address0 = zext_ln208_fu_263_p1;

assign shl_ln125_6_fu_505_p3 = {{trunc_ln125_reg_847_pp0_iter6_reg}, {32'd0}};

assign sub_ln208_fu_257_p2 = (empty - trunc_ln206_fu_236_p1);

assign t_21_fu_676_p2 = (t_fu_84 + zext_ln211_fu_672_p1);

assign t_30_out = t_fu_84;

assign t_5_fu_682_p3 = ((icmp_ln207_reg_741_pp0_iter8_reg[0:0] == 1'b1) ? t_21_fu_676_p2 : t_fu_84);

assign tempReg_15_fu_560_p2 = (xor_ln210_reg_868 + zext_ln105_fu_556_p1);

assign tempReg_fu_512_p3 = {{trunc_ln125_reg_847_pp0_iter6_reg}, {trunc_ln106_reg_802_pp0_iter6_reg}};

assign temp_15_fu_449_p2 = (zext_ln130_24_fu_445_p1 + zext_ln130_23_fu_437_p1);

assign temp_fu_402_p2 = (zext_ln123_24_fu_398_p1 + zext_ln106_fu_383_p1);

assign tmp_60_fu_659_p3 = and_ln105_fu_654_p2[32'd63];

assign trunc_ln105_20_fu_643_p1 = tempReg_15_reg_874_pp0_iter8_reg[62:0];

assign trunc_ln105_fu_455_p1 = temp_15_fu_449_p2[31:0];

assign trunc_ln106_46_fu_331_p1 = grp_fu_905_p_dout0[31:0];

assign trunc_ln106_47_fu_335_p1 = grp_fu_909_p_dout0[31:0];

assign trunc_ln106_48_fu_339_p1 = grp_fu_913_p_dout0[31:0];

assign trunc_ln106_fu_327_p1 = grp_fu_901_p_dout0[31:0];

assign trunc_ln125_fu_418_p1 = temp_fu_402_p2[31:0];

assign trunc_ln206_fu_236_p1 = ap_sig_allocacmp_j[2:0];

assign u_46_out = u_46_fu_88;

assign u_53_fu_580_p2 = (tempReg_15_reg_874 + u_46_fu_88);

assign u_5_fu_615_p3 = ((icmp_ln207_reg_741_pp0_iter7_reg[0:0] == 1'b1) ? u_53_fu_580_p2 : u_46_fu_88);

assign v_57_fu_518_p2 = (tempReg_fu_512_p3 + v_fu_92);

assign v_5_fu_565_p3 = ((icmp_ln207_reg_741_pp0_iter6_reg[0:0] == 1'b1) ? v_57_fu_518_p2 : v_fu_92);

assign v_63_out = v_fu_92;

assign xor_ln105_100_fu_542_p2 = (v_57_fu_518_p2 ^ or_ln105_fu_536_p2);

assign xor_ln105_101_fu_637_p2 = (bit_sel4_fu_630_p3 ^ 1'd1);

assign xor_ln105_102_fu_585_p2 = (u_53_fu_580_p2 ^ tempReg_15_reg_874);

assign xor_ln105_103_fu_590_p2 = (u_46_fu_88 ^ tempReg_15_reg_874);

assign xor_ln105_104_fu_601_p2 = (u_53_fu_580_p2 ^ or_ln105_18_fu_595_p2);

assign xor_ln105_99_fu_530_p2 = (v_fu_92 ^ shl_ln125_6_fu_505_p3);

assign xor_ln105_fu_524_p2 = (v_57_fu_518_p2 ^ shl_ln125_6_fu_505_p3);

assign xor_ln105_s_fu_646_p3 = {{xor_ln105_101_fu_637_p2}, {trunc_ln105_20_fu_643_p1}};

assign xor_ln210_fu_496_p2 = (zext_ln210_6_fu_487_p1 ^ add_ln210_fu_490_p2);

assign zext_ln105_28_fu_307_p1 = al_reg_758;

assign zext_ln105_29_fu_317_p1 = bl_reg_763;

assign zext_ln105_fu_556_p1 = carry_fu_548_p3;

assign zext_ln106_23_fu_434_p1 = tmp_56_reg_842;

assign zext_ln106_24_fu_422_p1 = tmp_57_reg_827;

assign zext_ln106_fu_383_p1 = tmp_s_reg_822;

assign zext_ln110_fu_312_p1 = ah_reg_768;

assign zext_ln112_fu_322_p1 = bh_reg_773;

assign zext_ln123_23_fu_389_p1 = trunc_ln106_46_reg_807;

assign zext_ln123_24_fu_398_p1 = add_ln123_fu_392_p2;

assign zext_ln123_fu_386_p1 = trunc_ln106_47_reg_812;

assign zext_ln130_23_fu_437_p1 = add_ln130_reg_853;

assign zext_ln130_24_fu_445_p1 = add_ln130_24_fu_440_p2;

assign zext_ln130_fu_425_p1 = trunc_ln106_48_reg_817;

assign zext_ln206_fu_232_p1 = ap_sig_allocacmp_j;

assign zext_ln208_6_fu_252_p1 = add_ln208_fu_246_p2;

assign zext_ln208_fu_263_p1 = sub_ln208_fu_257_p2;

assign zext_ln210_6_fu_487_p1 = trunc_ln105_reg_858;

assign zext_ln210_fu_483_p1 = and_ln210_6_fu_476_p3;

assign zext_ln211_fu_672_p1 = carry_30_fu_667_p2;

endmodule //sikep503_kem_enc_hw_rdc_mont_14183_Pipeline_VITIS_LOOP_206_5
