// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_rdc_mont_2_Pipeline_VITIS_LOOP_185_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_025,
        u_024,
        i_7,
        add_ln185,
        mc,
        PKB_address0,
        PKB_ce0,
        PKB_q0,
        empty,
        v_39_out,
        v_39_out_ap_vld,
        u_35_out,
        u_35_out_ap_vld,
        t_out,
        t_out_ap_vld,
        grp_fu_956_p_din0,
        grp_fu_956_p_din1,
        grp_fu_956_p_dout0,
        grp_fu_956_p_ce,
        grp_fu_960_p_din0,
        grp_fu_960_p_din1,
        grp_fu_960_p_dout0,
        grp_fu_960_p_ce,
        grp_fu_964_p_din0,
        grp_fu_964_p_din1,
        grp_fu_964_p_dout0,
        grp_fu_964_p_ce,
        grp_fu_968_p_din0,
        grp_fu_968_p_din1,
        grp_fu_968_p_dout0,
        grp_fu_968_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] v_025;
input  [63:0] u_024;
input  [2:0] i_7;
input  [3:0] add_ln185;
input  [8:0] mc;
output  [5:0] PKB_address0;
output   PKB_ce0;
input  [63:0] PKB_q0;
input  [2:0] empty;
output  [63:0] v_39_out;
output   v_39_out_ap_vld;
output  [63:0] u_35_out;
output   u_35_out_ap_vld;
output  [63:0] t_out;
output   t_out_ap_vld;
output  [31:0] grp_fu_956_p_din0;
output  [31:0] grp_fu_956_p_din1;
input  [63:0] grp_fu_956_p_dout0;
output   grp_fu_956_p_ce;
output  [31:0] grp_fu_960_p_din0;
output  [31:0] grp_fu_960_p_din1;
input  [63:0] grp_fu_960_p_dout0;
output   grp_fu_960_p_ce;
output  [31:0] grp_fu_964_p_din0;
output  [31:0] grp_fu_964_p_din1;
input  [63:0] grp_fu_964_p_dout0;
output   grp_fu_964_p_ce;
output  [31:0] grp_fu_968_p_din0;
output  [31:0] grp_fu_968_p_din1;
input  [63:0] grp_fu_968_p_dout0;
output   grp_fu_968_p_ce;

reg ap_idle;
reg v_39_out_ap_vld;
reg u_35_out_ap_vld;
reg t_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln185_fu_234_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] p503p1_1_address0;
wire   [63:0] p503p1_1_q0;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln185_reg_759;
reg   [0:0] icmp_ln185_reg_759_pp0_iter1_reg;
reg   [0:0] icmp_ln185_reg_759_pp0_iter2_reg;
reg   [0:0] icmp_ln185_reg_759_pp0_iter3_reg;
reg   [0:0] icmp_ln185_reg_759_pp0_iter4_reg;
reg   [0:0] icmp_ln185_reg_759_pp0_iter5_reg;
reg   [0:0] icmp_ln185_reg_759_pp0_iter6_reg;
reg   [0:0] icmp_ln185_reg_759_pp0_iter7_reg;
wire   [0:0] icmp_ln186_fu_246_p2;
reg   [0:0] icmp_ln186_reg_763;
reg   [0:0] icmp_ln186_reg_763_pp0_iter1_reg;
reg   [0:0] icmp_ln186_reg_763_pp0_iter2_reg;
reg   [0:0] icmp_ln186_reg_763_pp0_iter3_reg;
reg   [0:0] icmp_ln186_reg_763_pp0_iter4_reg;
reg   [0:0] icmp_ln186_reg_763_pp0_iter5_reg;
reg   [0:0] icmp_ln186_reg_763_pp0_iter6_reg;
reg   [0:0] icmp_ln186_reg_763_pp0_iter7_reg;
reg   [0:0] icmp_ln186_reg_763_pp0_iter8_reg;
wire   [31:0] al_fu_301_p1;
reg   [31:0] al_reg_780;
wire   [31:0] bl_fu_305_p1;
reg   [31:0] bl_reg_785;
reg   [31:0] ah_reg_790;
reg   [31:0] bh_reg_795;
wire   [63:0] zext_ln105_fu_329_p1;
wire   [63:0] zext_ln110_fu_334_p1;
wire   [63:0] zext_ln105_16_fu_339_p1;
wire   [63:0] zext_ln112_fu_344_p1;
wire   [31:0] trunc_ln106_fu_349_p1;
reg   [31:0] trunc_ln106_reg_824;
reg   [31:0] trunc_ln106_reg_824_pp0_iter4_reg;
reg   [31:0] trunc_ln106_reg_824_pp0_iter5_reg;
reg   [31:0] trunc_ln106_reg_824_pp0_iter6_reg;
wire   [31:0] trunc_ln106_31_fu_353_p1;
reg   [31:0] trunc_ln106_31_reg_829;
wire   [31:0] trunc_ln106_32_fu_357_p1;
reg   [31:0] trunc_ln106_32_reg_834;
wire   [31:0] trunc_ln106_33_fu_361_p1;
reg   [31:0] trunc_ln106_33_reg_839;
reg   [31:0] tmp_s_reg_844;
reg   [31:0] tmp_37_reg_849;
reg   [31:0] trunc_ln106_s_reg_854;
reg   [31:0] trunc_ln106_s_reg_854_pp0_iter4_reg;
reg   [31:0] tmp_38_reg_859;
reg   [31:0] tmp_38_reg_859_pp0_iter4_reg;
reg   [31:0] tmp_38_reg_859_pp0_iter5_reg;
reg   [1:0] tmp_36_reg_864;
wire   [31:0] trunc_ln125_fu_440_p1;
reg   [31:0] trunc_ln125_reg_869;
reg   [31:0] trunc_ln125_reg_869_pp0_iter5_reg;
reg   [31:0] trunc_ln125_reg_869_pp0_iter6_reg;
wire   [32:0] add_ln130_fu_450_p2;
reg   [32:0] add_ln130_reg_875;
wire   [31:0] trunc_ln105_fu_477_p1;
reg   [31:0] trunc_ln105_reg_880;
reg   [1:0] tmp_39_reg_885;
wire   [63:0] xor_ln189_fu_518_p2;
reg   [63:0] xor_ln189_reg_890;
reg   [63:0] xor_ln189_reg_890_pp0_iter7_reg;
reg   [63:0] xor_ln189_reg_890_pp0_iter8_reg;
wire   [63:0] tempReg_10_fu_582_p2;
reg   [63:0] tempReg_10_reg_896;
reg   [63:0] tempReg_10_reg_896_pp0_iter8_reg;
reg   [0:0] tmp_41_reg_905;
wire   [31:0] zext_ln187_4_fu_280_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln187_5_fu_291_p1;
reg   [63:0] t_fu_92;
wire   [63:0] t_2_fu_704_p3;
wire    ap_loop_init;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [63:0] u_fu_96;
wire   [63:0] u_2_fu_637_p3;
reg   [63:0] v_fu_100;
wire   [63:0] v_2_fu_587_p3;
reg   [2:0] j_fu_104;
wire   [2:0] add_ln185_4_fu_240_p2;
reg   [2:0] ap_sig_allocacmp_j_6;
wire    ap_block_pp0_stage0_01001;
reg    PKB_ce0_local;
reg    p503p1_1_ce0_local;
wire   [3:0] zext_ln185_fu_230_p1;
wire   [5:0] shl_ln2_fu_252_p3;
wire   [8:0] zext_ln187_fu_260_p1;
wire   [8:0] add_ln187_fu_264_p2;
wire   [5:0] lshr_ln5_fu_270_p4;
wire   [2:0] sub_ln187_fu_285_p2;
wire   [32:0] zext_ln123_fu_408_p1;
wire   [32:0] zext_ln123_14_fu_411_p1;
wire   [32:0] add_ln123_fu_414_p2;
wire   [33:0] zext_ln123_15_fu_420_p1;
wire   [33:0] zext_ln106_fu_405_p1;
wire   [33:0] temp_fu_424_p2;
wire   [32:0] zext_ln130_fu_447_p1;
wire   [32:0] zext_ln106_15_fu_444_p1;
wire   [31:0] zext_ln106_14_fu_456_p1;
wire   [31:0] add_ln130_15_fu_462_p2;
wire   [33:0] zext_ln130_15_fu_467_p1;
wire   [33:0] zext_ln130_14_fu_459_p1;
wire   [33:0] temp_10_fu_471_p2;
wire   [33:0] and_ln189_4_fu_498_p3;
wire   [63:0] zext_ln189_fu_505_p1;
wire   [63:0] and_ln_fu_491_p3;
wire   [63:0] add_ln189_fu_512_p2;
wire   [63:0] zext_ln189_4_fu_509_p1;
wire   [63:0] tempReg_fu_534_p3;
wire   [63:0] shl_ln3_fu_527_p3;
wire   [63:0] v_39_fu_540_p2;
wire   [63:0] xor_ln105_59_fu_552_p2;
wire   [63:0] xor_ln105_fu_546_p2;
wire   [63:0] or_ln105_fu_558_p2;
wire   [63:0] xor_ln105_60_fu_564_p2;
wire   [0:0] carry_fu_570_p3;
wire   [63:0] zext_ln105_20_fu_578_p1;
wire   [63:0] u_35_fu_602_p2;
wire   [63:0] xor_ln105_63_fu_612_p2;
wire   [63:0] xor_ln105_62_fu_607_p2;
wire   [63:0] or_ln105_11_fu_617_p2;
wire   [63:0] xor_ln105_64_fu_623_p2;
wire   [0:0] bit_sel_fu_652_p3;
wire   [0:0] xor_ln105_61_fu_659_p2;
wire   [62:0] trunc_ln105_13_fu_665_p1;
wire   [63:0] xor_ln105_s_fu_668_p3;
wire   [63:0] and_ln105_fu_676_p2;
wire   [0:0] tmp_40_fu_681_p3;
wire   [0:0] carry_19_fu_689_p2;
wire   [63:0] zext_ln190_fu_694_p1;
wire   [63:0] t_14_fu_698_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 t_fu_92 = 64'd0;
#0 u_fu_96 = 64'd0;
#0 v_fu_100 = 64'd0;
#0 j_fu_104 = 3'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_rdc_mont_14183_Pipeline_VITIS_LOOP_185_3_p503p1_1_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
p503p1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p503p1_1_address0),
    .ce0(p503p1_1_ce0_local),
    .q0(p503p1_1_q0)
);

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln185_fu_234_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_104 <= add_ln185_4_fu_240_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_104 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_fu_92 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            t_fu_92 <= t_2_fu_704_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            u_fu_96 <= u_024;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            u_fu_96 <= u_2_fu_637_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            v_fu_100 <= v_025;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            v_fu_100 <= v_2_fu_587_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln130_reg_875 <= add_ln130_fu_450_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        icmp_ln185_reg_759_pp0_iter2_reg <= icmp_ln185_reg_759_pp0_iter1_reg;
        icmp_ln185_reg_759_pp0_iter3_reg <= icmp_ln185_reg_759_pp0_iter2_reg;
        icmp_ln185_reg_759_pp0_iter4_reg <= icmp_ln185_reg_759_pp0_iter3_reg;
        icmp_ln185_reg_759_pp0_iter5_reg <= icmp_ln185_reg_759_pp0_iter4_reg;
        icmp_ln185_reg_759_pp0_iter6_reg <= icmp_ln185_reg_759_pp0_iter5_reg;
        icmp_ln185_reg_759_pp0_iter7_reg <= icmp_ln185_reg_759_pp0_iter6_reg;
        icmp_ln186_reg_763_pp0_iter2_reg <= icmp_ln186_reg_763_pp0_iter1_reg;
        icmp_ln186_reg_763_pp0_iter3_reg <= icmp_ln186_reg_763_pp0_iter2_reg;
        icmp_ln186_reg_763_pp0_iter4_reg <= icmp_ln186_reg_763_pp0_iter3_reg;
        icmp_ln186_reg_763_pp0_iter5_reg <= icmp_ln186_reg_763_pp0_iter4_reg;
        icmp_ln186_reg_763_pp0_iter6_reg <= icmp_ln186_reg_763_pp0_iter5_reg;
        icmp_ln186_reg_763_pp0_iter7_reg <= icmp_ln186_reg_763_pp0_iter6_reg;
        icmp_ln186_reg_763_pp0_iter8_reg <= icmp_ln186_reg_763_pp0_iter7_reg;
        tempReg_10_reg_896 <= tempReg_10_fu_582_p2;
        tempReg_10_reg_896_pp0_iter8_reg <= tempReg_10_reg_896;
        tmp_36_reg_864 <= {{temp_fu_424_p2[33:32]}};
        tmp_37_reg_849 <= {{grp_fu_964_p_dout0[63:32]}};
        tmp_38_reg_859 <= {{grp_fu_968_p_dout0[63:32]}};
        tmp_38_reg_859_pp0_iter4_reg <= tmp_38_reg_859;
        tmp_38_reg_859_pp0_iter5_reg <= tmp_38_reg_859_pp0_iter4_reg;
        tmp_39_reg_885 <= {{temp_10_fu_471_p2[33:32]}};
        tmp_41_reg_905 <= xor_ln105_64_fu_623_p2[32'd63];
        tmp_s_reg_844 <= {{grp_fu_956_p_dout0[63:32]}};
        trunc_ln105_reg_880 <= trunc_ln105_fu_477_p1;
        trunc_ln106_31_reg_829 <= trunc_ln106_31_fu_353_p1;
        trunc_ln106_32_reg_834 <= trunc_ln106_32_fu_357_p1;
        trunc_ln106_33_reg_839 <= trunc_ln106_33_fu_361_p1;
        trunc_ln106_reg_824 <= trunc_ln106_fu_349_p1;
        trunc_ln106_reg_824_pp0_iter4_reg <= trunc_ln106_reg_824;
        trunc_ln106_reg_824_pp0_iter5_reg <= trunc_ln106_reg_824_pp0_iter4_reg;
        trunc_ln106_reg_824_pp0_iter6_reg <= trunc_ln106_reg_824_pp0_iter5_reg;
        trunc_ln106_s_reg_854 <= {{grp_fu_960_p_dout0[63:32]}};
        trunc_ln106_s_reg_854_pp0_iter4_reg <= trunc_ln106_s_reg_854;
        trunc_ln125_reg_869 <= trunc_ln125_fu_440_p1;
        trunc_ln125_reg_869_pp0_iter5_reg <= trunc_ln125_reg_869;
        trunc_ln125_reg_869_pp0_iter6_reg <= trunc_ln125_reg_869_pp0_iter5_reg;
        xor_ln189_reg_890 <= xor_ln189_fu_518_p2;
        xor_ln189_reg_890_pp0_iter7_reg <= xor_ln189_reg_890;
        xor_ln189_reg_890_pp0_iter8_reg <= xor_ln189_reg_890_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ah_reg_790 <= {{PKB_q0[63:32]}};
        al_reg_780 <= al_fu_301_p1;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        bh_reg_795 <= {{p503p1_1_q0[63:32]}};
        bl_reg_785 <= bl_fu_305_p1;
        icmp_ln185_reg_759 <= icmp_ln185_fu_234_p2;
        icmp_ln185_reg_759_pp0_iter1_reg <= icmp_ln185_reg_759;
        icmp_ln186_reg_763 <= icmp_ln186_fu_246_p2;
        icmp_ln186_reg_763_pp0_iter1_reg <= icmp_ln186_reg_763;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PKB_ce0_local = 1'b1;
    end else begin
        PKB_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln185_fu_234_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_6 = 3'd0;
    end else begin
        ap_sig_allocacmp_j_6 = j_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p503p1_1_ce0_local = 1'b1;
    end else begin
        p503p1_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln185_reg_759_pp0_iter7_reg == 1'd1))) begin
        t_out_ap_vld = 1'b1;
    end else begin
        t_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln185_reg_759_pp0_iter7_reg == 1'd1))) begin
        u_35_out_ap_vld = 1'b1;
    end else begin
        u_35_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln185_reg_759_pp0_iter7_reg == 1'd1))) begin
        v_39_out_ap_vld = 1'b1;
    end else begin
        v_39_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign PKB_address0 = zext_ln187_4_fu_280_p1;

assign PKB_ce0 = PKB_ce0_local;

assign add_ln123_fu_414_p2 = (zext_ln123_fu_408_p1 + zext_ln123_14_fu_411_p1);

assign add_ln130_15_fu_462_p2 = (trunc_ln106_s_reg_854_pp0_iter4_reg + zext_ln106_14_fu_456_p1);

assign add_ln130_fu_450_p2 = (zext_ln130_fu_447_p1 + zext_ln106_15_fu_444_p1);

assign add_ln185_4_fu_240_p2 = (ap_sig_allocacmp_j_6 + 3'd1);

assign add_ln187_fu_264_p2 = (zext_ln187_fu_260_p1 + mc);

assign add_ln189_fu_512_p2 = (zext_ln189_fu_505_p1 + and_ln_fu_491_p3);

assign al_fu_301_p1 = PKB_q0[31:0];

assign and_ln105_fu_676_p2 = (xor_ln189_reg_890_pp0_iter8_reg & xor_ln105_s_fu_668_p3);

assign and_ln189_4_fu_498_p3 = {{tmp_39_reg_885}, {32'd0}};

assign and_ln_fu_491_p3 = {{tmp_38_reg_859_pp0_iter5_reg}, {32'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bit_sel_fu_652_p3 = tempReg_10_reg_896_pp0_iter8_reg[64'd63];

assign bl_fu_305_p1 = p503p1_1_q0[31:0];

assign carry_19_fu_689_p2 = (tmp_41_reg_905 | tmp_40_fu_681_p3);

assign carry_fu_570_p3 = xor_ln105_60_fu_564_p2[32'd63];

assign grp_fu_956_p_ce = 1'b1;

assign grp_fu_956_p_din0 = zext_ln105_16_fu_339_p1;

assign grp_fu_956_p_din1 = zext_ln105_fu_329_p1;

assign grp_fu_960_p_ce = 1'b1;

assign grp_fu_960_p_din0 = zext_ln112_fu_344_p1;

assign grp_fu_960_p_din1 = zext_ln105_fu_329_p1;

assign grp_fu_964_p_ce = 1'b1;

assign grp_fu_964_p_din0 = zext_ln105_16_fu_339_p1;

assign grp_fu_964_p_din1 = zext_ln110_fu_334_p1;

assign grp_fu_968_p_ce = 1'b1;

assign grp_fu_968_p_din0 = zext_ln112_fu_344_p1;

assign grp_fu_968_p_din1 = zext_ln110_fu_334_p1;

assign icmp_ln185_fu_234_p2 = ((ap_sig_allocacmp_j_6 == i_7) ? 1'b1 : 1'b0);

assign icmp_ln186_fu_246_p2 = ((zext_ln185_fu_230_p1 < add_ln185) ? 1'b1 : 1'b0);

assign lshr_ln5_fu_270_p4 = {{add_ln187_fu_264_p2[8:3]}};

assign or_ln105_11_fu_617_p2 = (xor_ln105_63_fu_612_p2 | xor_ln105_62_fu_607_p2);

assign or_ln105_fu_558_p2 = (xor_ln105_fu_546_p2 | xor_ln105_59_fu_552_p2);

assign p503p1_1_address0 = zext_ln187_5_fu_291_p1;

assign shl_ln2_fu_252_p3 = {{ap_sig_allocacmp_j_6}, {3'd0}};

assign shl_ln3_fu_527_p3 = {{trunc_ln125_reg_869_pp0_iter6_reg}, {32'd0}};

assign sub_ln187_fu_285_p2 = (empty - ap_sig_allocacmp_j_6);

assign t_14_fu_698_p2 = (t_fu_92 + zext_ln190_fu_694_p1);

assign t_2_fu_704_p3 = ((icmp_ln186_reg_763_pp0_iter8_reg[0:0] == 1'b1) ? t_14_fu_698_p2 : t_fu_92);

assign t_out = t_fu_92;

assign tempReg_10_fu_582_p2 = (xor_ln189_reg_890 + zext_ln105_20_fu_578_p1);

assign tempReg_fu_534_p3 = {{trunc_ln125_reg_869_pp0_iter6_reg}, {trunc_ln106_reg_824_pp0_iter6_reg}};

assign temp_10_fu_471_p2 = (zext_ln130_15_fu_467_p1 + zext_ln130_14_fu_459_p1);

assign temp_fu_424_p2 = (zext_ln123_15_fu_420_p1 + zext_ln106_fu_405_p1);

assign tmp_40_fu_681_p3 = and_ln105_fu_676_p2[32'd63];

assign trunc_ln105_13_fu_665_p1 = tempReg_10_reg_896_pp0_iter8_reg[62:0];

assign trunc_ln105_fu_477_p1 = temp_10_fu_471_p2[31:0];

assign trunc_ln106_31_fu_353_p1 = grp_fu_960_p_dout0[31:0];

assign trunc_ln106_32_fu_357_p1 = grp_fu_964_p_dout0[31:0];

assign trunc_ln106_33_fu_361_p1 = grp_fu_968_p_dout0[31:0];

assign trunc_ln106_fu_349_p1 = grp_fu_956_p_dout0[31:0];

assign trunc_ln125_fu_440_p1 = temp_fu_424_p2[31:0];

assign u_2_fu_637_p3 = ((icmp_ln186_reg_763_pp0_iter7_reg[0:0] == 1'b1) ? u_35_fu_602_p2 : u_fu_96);

assign u_35_fu_602_p2 = (tempReg_10_reg_896 + u_fu_96);

assign u_35_out = u_fu_96;

assign v_2_fu_587_p3 = ((icmp_ln186_reg_763_pp0_iter6_reg[0:0] == 1'b1) ? v_39_fu_540_p2 : v_fu_100);

assign v_39_fu_540_p2 = (tempReg_fu_534_p3 + v_fu_100);

assign v_39_out = v_fu_100;

assign xor_ln105_59_fu_552_p2 = (v_fu_100 ^ shl_ln3_fu_527_p3);

assign xor_ln105_60_fu_564_p2 = (v_39_fu_540_p2 ^ or_ln105_fu_558_p2);

assign xor_ln105_61_fu_659_p2 = (bit_sel_fu_652_p3 ^ 1'd1);

assign xor_ln105_62_fu_607_p2 = (u_35_fu_602_p2 ^ tempReg_10_reg_896);

assign xor_ln105_63_fu_612_p2 = (u_fu_96 ^ tempReg_10_reg_896);

assign xor_ln105_64_fu_623_p2 = (u_35_fu_602_p2 ^ or_ln105_11_fu_617_p2);

assign xor_ln105_fu_546_p2 = (v_39_fu_540_p2 ^ shl_ln3_fu_527_p3);

assign xor_ln105_s_fu_668_p3 = {{xor_ln105_61_fu_659_p2}, {trunc_ln105_13_fu_665_p1}};

assign xor_ln189_fu_518_p2 = (zext_ln189_4_fu_509_p1 ^ add_ln189_fu_512_p2);

assign zext_ln105_16_fu_339_p1 = bl_reg_785;

assign zext_ln105_20_fu_578_p1 = carry_fu_570_p3;

assign zext_ln105_fu_329_p1 = al_reg_780;

assign zext_ln106_14_fu_456_p1 = tmp_36_reg_864;

assign zext_ln106_15_fu_444_p1 = tmp_37_reg_849;

assign zext_ln106_fu_405_p1 = tmp_s_reg_844;

assign zext_ln110_fu_334_p1 = ah_reg_790;

assign zext_ln112_fu_344_p1 = bh_reg_795;

assign zext_ln123_14_fu_411_p1 = trunc_ln106_31_reg_829;

assign zext_ln123_15_fu_420_p1 = add_ln123_fu_414_p2;

assign zext_ln123_fu_408_p1 = trunc_ln106_32_reg_834;

assign zext_ln130_14_fu_459_p1 = add_ln130_reg_875;

assign zext_ln130_15_fu_467_p1 = add_ln130_15_fu_462_p2;

assign zext_ln130_fu_447_p1 = trunc_ln106_33_reg_839;

assign zext_ln185_fu_230_p1 = ap_sig_allocacmp_j_6;

assign zext_ln187_4_fu_280_p1 = lshr_ln5_fu_270_p4;

assign zext_ln187_5_fu_291_p1 = sub_ln187_fu_285_p2;

assign zext_ln187_fu_260_p1 = shl_ln2_fu_252_p3;

assign zext_ln189_4_fu_509_p1 = trunc_ln105_reg_880;

assign zext_ln189_fu_505_p1 = and_ln189_4_fu_498_p3;

assign zext_ln190_fu_694_p1 = carry_19_fu_689_p2;

endmodule //sikep503_kem_enc_hw_rdc_mont_2_Pipeline_VITIS_LOOP_185_3
