// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_EphemeralSecretAgreement_A_1_Pipeline_VITIS_LOOP_40_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        t_i_address0,
        t_i_ce0,
        t_i_q0,
        t_i_address1,
        t_i_ce1,
        t_i_q1,
        SharedSecretA_address0,
        SharedSecretA_ce0,
        SharedSecretA_we0,
        SharedSecretA_d0,
        SharedSecretA_address1,
        SharedSecretA_ce1,
        SharedSecretA_we1,
        SharedSecretA_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] t_i_address0;
output   t_i_ce0;
input  [63:0] t_i_q0;
output  [3:0] t_i_address1;
output   t_i_ce1;
input  [63:0] t_i_q1;
output  [6:0] SharedSecretA_address0;
output   SharedSecretA_ce0;
output   SharedSecretA_we0;
output  [7:0] SharedSecretA_d0;
output  [6:0] SharedSecretA_address1;
output   SharedSecretA_ce1;
output   SharedSecretA_we1;
output  [7:0] SharedSecretA_d1;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln40_fu_104_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [5:0] i_289_reg_203;
wire    ap_block_pp0_stage0_11001;
reg   [5:0] i_289_reg_203_pp0_iter1_reg;
reg   [63:0] t_i_load_reg_224;
reg   [63:0] t_i_load_1_reg_229;
wire   [31:0] zext_ln42_fu_126_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln43_fu_139_p1;
wire   [31:0] zext_ln42_2_fu_171_p1;
wire   [31:0] zext_ln43_1_fu_191_p1;
reg   [5:0] i_fu_42;
wire   [5:0] add_ln40_fu_110_p2;
wire    ap_loop_init;
reg   [5:0] ap_sig_allocacmp_i_289;
reg    t_i_ce1_local;
reg    t_i_ce0_local;
reg    SharedSecretA_we1_local;
wire   [7:0] trunc_ln42_fu_166_p1;
reg    SharedSecretA_ce1_local;
reg    SharedSecretA_we0_local;
wire   [7:0] trunc_ln43_fu_180_p1;
reg    SharedSecretA_ce0_local;
wire   [2:0] lshr_ln42_fu_116_p4;
wire   [3:0] zext_ln_fu_131_p3;
wire   [5:0] shl_ln42_fu_152_p2;
wire   [63:0] zext_ln42_1_fu_157_p1;
wire   [63:0] lshr_ln42_1_fu_161_p2;
wire   [63:0] lshr_ln43_fu_175_p2;
wire   [6:0] zext_ln40_fu_149_p1;
wire   [6:0] add_ln43_fu_185_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 i_fu_42 = 6'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln40_fu_104_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_42 <= add_ln40_fu_110_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_42 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        i_289_reg_203 <= ap_sig_allocacmp_i_289;
        i_289_reg_203_pp0_iter1_reg <= i_289_reg_203;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_i_load_1_reg_229 <= t_i_q0;
        t_i_load_reg_224 <= t_i_q1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        SharedSecretA_ce0_local = 1'b1;
    end else begin
        SharedSecretA_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        SharedSecretA_ce1_local = 1'b1;
    end else begin
        SharedSecretA_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        SharedSecretA_we0_local = 1'b1;
    end else begin
        SharedSecretA_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        SharedSecretA_we1_local = 1'b1;
    end else begin
        SharedSecretA_we1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln40_fu_104_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_289 = 6'd0;
    end else begin
        ap_sig_allocacmp_i_289 = i_fu_42;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_i_ce0_local = 1'b1;
    end else begin
        t_i_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        t_i_ce1_local = 1'b1;
    end else begin
        t_i_ce1_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign SharedSecretA_address0 = zext_ln43_1_fu_191_p1;

assign SharedSecretA_address1 = zext_ln42_2_fu_171_p1;

assign SharedSecretA_ce0 = SharedSecretA_ce0_local;

assign SharedSecretA_ce1 = SharedSecretA_ce1_local;

assign SharedSecretA_d0 = trunc_ln43_fu_180_p1;

assign SharedSecretA_d1 = trunc_ln42_fu_166_p1;

assign SharedSecretA_we0 = SharedSecretA_we0_local;

assign SharedSecretA_we1 = SharedSecretA_we1_local;

assign add_ln40_fu_110_p2 = (ap_sig_allocacmp_i_289 + 6'd1);

assign add_ln43_fu_185_p2 = (zext_ln40_fu_149_p1 + 7'd63);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln40_fu_104_p2 = ((ap_sig_allocacmp_i_289 == 6'd63) ? 1'b1 : 1'b0);

assign lshr_ln42_1_fu_161_p2 = t_i_load_reg_224 >> zext_ln42_1_fu_157_p1;

assign lshr_ln42_fu_116_p4 = {{ap_sig_allocacmp_i_289[5:3]}};

assign lshr_ln43_fu_175_p2 = t_i_load_1_reg_229 >> zext_ln42_1_fu_157_p1;

assign shl_ln42_fu_152_p2 = i_289_reg_203_pp0_iter1_reg << 6'd3;

assign t_i_address0 = zext_ln43_fu_139_p1;

assign t_i_address1 = zext_ln42_fu_126_p1;

assign t_i_ce0 = t_i_ce0_local;

assign t_i_ce1 = t_i_ce1_local;

assign trunc_ln42_fu_166_p1 = lshr_ln42_1_fu_161_p2[7:0];

assign trunc_ln43_fu_180_p1 = lshr_ln43_fu_175_p2[7:0];

assign zext_ln40_fu_149_p1 = i_289_reg_203_pp0_iter1_reg;

assign zext_ln42_1_fu_157_p1 = shl_ln42_fu_152_p2;

assign zext_ln42_2_fu_171_p1 = i_289_reg_203_pp0_iter1_reg;

assign zext_ln42_fu_126_p1 = lshr_ln42_fu_116_p4;

assign zext_ln43_1_fu_191_p1 = add_ln43_fu_185_p2;

assign zext_ln43_fu_139_p1 = zext_ln_fu_131_p3;

assign zext_ln_fu_131_p3 = {{1'd1}, {lshr_ln42_fu_116_p4}};

endmodule //sikep503_kem_enc_hw_EphemeralSecretAgreement_A_1_Pipeline_VITIS_LOOP_40_1
