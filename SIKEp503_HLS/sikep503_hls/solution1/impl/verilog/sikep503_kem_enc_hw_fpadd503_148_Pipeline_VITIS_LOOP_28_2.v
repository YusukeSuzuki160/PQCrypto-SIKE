// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_fpadd503_148_Pipeline_VITIS_LOOP_28_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        c_address0,
        c_ce0,
        c_we0,
        c_d0,
        c_address1,
        c_ce1,
        c_q1,
        carry_208_out,
        carry_208_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] c_address0;
output   c_ce0;
output   c_we0;
output  [63:0] c_d0;
output  [2:0] c_address1;
output   c_ce1;
input  [63:0] c_q1;
output  [0:0] carry_208_out;
output   carry_208_out_ap_vld;

reg ap_idle;
reg carry_208_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln28_fu_104_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] p503x2_1_address0;
wire   [63:0] p503x2_1_q0;
reg   [0:0] carry_reg_83;
reg   [0:0] icmp_ln28_reg_221;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln28_reg_221_pp0_iter1_reg;
reg   [2:0] c_addr_reg_225;
reg   [2:0] c_addr_reg_225_pp0_iter1_reg;
wire   [63:0] tempReg_fu_131_p2;
reg   [63:0] tempReg_reg_236;
reg   [0:0] tmp_reg_243;
wire   [0:0] borrowReg_fu_199_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_block_pp0_stage0;
wire    ap_loop_init;
wire   [31:0] zext_ln29_31_fu_120_p1;
reg   [3:0] i_153_fu_42;
wire   [3:0] add_ln28_fu_110_p2;
reg   [3:0] ap_sig_allocacmp_i;
reg    ap_loop_exit_ready_pp0_iter1_reg;
wire    ap_block_pp0_stage0_01001;
reg    c_ce1_local;
reg    c_we0_local;
wire   [63:0] sub_ln29_fu_208_p2;
reg    c_ce0_local;
reg    p503x2_1_ce0_local;
wire   [2:0] trunc_ln29_fu_116_p1;
wire   [63:0] xor_ln105_116_fu_143_p2;
wire   [63:0] xor_ln105_fu_137_p2;
wire   [63:0] or_ln105_fu_149_p2;
wire   [63:0] xor_ln105_117_fu_155_p2;
wire   [63:0] sub_ln95_fu_169_p2;
wire   [63:0] or_ln95_fu_174_p2;
wire   [0:0] tmp_228_fu_179_p3;
wire   [0:0] xor_ln29_fu_187_p2;
wire   [0:0] and_ln29_fu_193_p2;
wire   [63:0] zext_ln29_fu_204_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 i_153_fu_42 = 4'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_fpadd503_149_3_Pipeline_VITIS_LOOP_28_2_p503x2_1_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
p503x2_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p503x2_1_address0),
    .ce0(p503x2_1_ce0_local),
    .q0(p503x2_1_q0)
);

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        carry_reg_83 <= 1'd0;
    end else if (((icmp_ln28_reg_221_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        carry_reg_83 <= borrowReg_fu_199_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln28_fu_104_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_153_fu_42 <= add_ln28_fu_110_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_153_fu_42 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        c_addr_reg_225 <= zext_ln29_31_fu_120_p1;
        c_addr_reg_225_pp0_iter1_reg <= c_addr_reg_225;
        icmp_ln28_reg_221 <= icmp_ln28_fu_104_p2;
        icmp_ln28_reg_221_pp0_iter1_reg <= icmp_ln28_reg_221;
        tempReg_reg_236 <= tempReg_fu_131_p2;
        tmp_reg_243 <= xor_ln105_117_fu_155_p2[32'd63];
    end
end

always @ (*) begin
    if (((icmp_ln28_fu_104_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln28_reg_221 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i = 4'd0;
    end else begin
        ap_sig_allocacmp_i = i_153_fu_42;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        c_ce0_local = 1'b1;
    end else begin
        c_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_ce1_local = 1'b1;
    end else begin
        c_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln28_reg_221_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        c_we0_local = 1'b1;
    end else begin
        c_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln28_reg_221 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        carry_208_out_ap_vld = 1'b1;
    end else begin
        carry_208_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p503x2_1_ce0_local = 1'b1;
    end else begin
        p503x2_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln28_fu_110_p2 = (ap_sig_allocacmp_i + 4'd1);

assign and_ln29_fu_193_p2 = (xor_ln29_fu_187_p2 & carry_reg_83);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign borrowReg_fu_199_p2 = (tmp_reg_243 | and_ln29_fu_193_p2);

assign c_address0 = c_addr_reg_225_pp0_iter1_reg;

assign c_address1 = zext_ln29_31_fu_120_p1;

assign c_ce0 = c_ce0_local;

assign c_ce1 = c_ce1_local;

assign c_d0 = sub_ln29_fu_208_p2;

assign c_we0 = c_we0_local;

assign carry_208_out = carry_reg_83;

assign icmp_ln28_fu_104_p2 = ((ap_sig_allocacmp_i == 4'd8) ? 1'b1 : 1'b0);

assign or_ln105_fu_149_p2 = (xor_ln105_fu_137_p2 | xor_ln105_116_fu_143_p2);

assign or_ln95_fu_174_p2 = (tempReg_reg_236 | sub_ln95_fu_169_p2);

assign p503x2_1_address0 = zext_ln29_31_fu_120_p1;

assign sub_ln29_fu_208_p2 = (tempReg_reg_236 - zext_ln29_fu_204_p1);

assign sub_ln95_fu_169_p2 = (64'd0 - tempReg_reg_236);

assign tempReg_fu_131_p2 = (c_q1 - p503x2_1_q0);

assign tmp_228_fu_179_p3 = or_ln95_fu_174_p2[32'd63];

assign trunc_ln29_fu_116_p1 = ap_sig_allocacmp_i[2:0];

assign xor_ln105_116_fu_143_p2 = (tempReg_fu_131_p2 ^ p503x2_1_q0);

assign xor_ln105_117_fu_155_p2 = (or_ln105_fu_149_p2 ^ c_q1);

assign xor_ln105_fu_137_p2 = (p503x2_1_q0 ^ c_q1);

assign xor_ln29_fu_187_p2 = (tmp_228_fu_179_p3 ^ 1'd1);

assign zext_ln29_31_fu_120_p1 = trunc_ln29_fu_116_p1;

assign zext_ln29_fu_204_p1 = carry_reg_83;

endmodule //sikep503_kem_enc_hw_fpadd503_148_Pipeline_VITIS_LOOP_28_2
