// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_mp_mul_219_Pipeline_VITIS_LOOP_144_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_017,
        zext_ln143,
        indvars_iv31,
        a_address0,
        a_ce0,
        a_q0,
        i,
        R_X_address0,
        R_X_ce0,
        R_X_q0,
        v_114_out,
        v_114_out_ap_vld,
        u_92_out_i,
        u_92_out_o,
        u_92_out_o_ap_vld,
        t_out_i,
        t_out_o,
        t_out_o_ap_vld,
        grp_fu_422_p_din0,
        grp_fu_422_p_din1,
        grp_fu_422_p_dout0,
        grp_fu_422_p_ce,
        grp_fu_426_p_din0,
        grp_fu_426_p_din1,
        grp_fu_426_p_dout0,
        grp_fu_426_p_ce,
        grp_fu_430_p_din0,
        grp_fu_430_p_din1,
        grp_fu_430_p_dout0,
        grp_fu_430_p_ce,
        grp_fu_434_p_din0,
        grp_fu_434_p_din1,
        grp_fu_434_p_dout0,
        grp_fu_434_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] v_017;
input  [3:0] zext_ln143;
input  [3:0] indvars_iv31;
output  [3:0] a_address0;
output   a_ce0;
input  [63:0] a_q0;
input  [2:0] i;
output  [3:0] R_X_address0;
output   R_X_ce0;
input  [63:0] R_X_q0;
output  [63:0] v_114_out;
output   v_114_out_ap_vld;
input  [63:0] u_92_out_i;
output  [63:0] u_92_out_o;
output   u_92_out_o_ap_vld;
input  [3:0] t_out_i;
output  [3:0] t_out_o;
output   t_out_o_ap_vld;
output  [31:0] grp_fu_422_p_din0;
output  [31:0] grp_fu_422_p_din1;
input  [63:0] grp_fu_422_p_dout0;
output   grp_fu_422_p_ce;
output  [31:0] grp_fu_426_p_din0;
output  [31:0] grp_fu_426_p_din1;
input  [63:0] grp_fu_426_p_dout0;
output   grp_fu_426_p_ce;
output  [31:0] grp_fu_430_p_din0;
output  [31:0] grp_fu_430_p_din1;
input  [63:0] grp_fu_430_p_dout0;
output   grp_fu_430_p_ce;
output  [31:0] grp_fu_434_p_din0;
output  [31:0] grp_fu_434_p_din1;
input  [63:0] grp_fu_434_p_dout0;
output   grp_fu_434_p_ce;

reg ap_idle;
reg v_114_out_ap_vld;
reg[63:0] u_92_out_o;
reg u_92_out_o_ap_vld;
reg[3:0] t_out_o;
reg t_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln144_fu_196_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] i_cast_fu_163_p1;
reg   [3:0] i_cast_reg_699;
reg   [3:0] j_30_reg_704;
reg   [0:0] icmp_ln144_reg_710;
reg   [0:0] icmp_ln144_reg_710_pp0_iter1_reg;
reg   [0:0] icmp_ln144_reg_710_pp0_iter2_reg;
reg   [0:0] icmp_ln144_reg_710_pp0_iter3_reg;
reg   [0:0] icmp_ln144_reg_710_pp0_iter4_reg;
reg   [0:0] icmp_ln144_reg_710_pp0_iter5_reg;
reg   [0:0] icmp_ln144_reg_710_pp0_iter6_reg;
reg   [0:0] icmp_ln144_reg_710_pp0_iter7_reg;
wire   [31:0] al_fu_268_p1;
reg   [31:0] al_reg_724;
wire   [31:0] bl_fu_272_p1;
reg   [31:0] bl_reg_729;
reg   [31:0] ah_reg_734;
reg   [31:0] bh_reg_739;
wire   [63:0] zext_ln105_fu_296_p1;
wire   [63:0] zext_ln110_fu_301_p1;
wire   [63:0] zext_ln105_115_fu_306_p1;
wire   [63:0] zext_ln112_fu_311_p1;
wire   [31:0] trunc_ln106_fu_316_p1;
reg   [31:0] trunc_ln106_reg_768;
reg   [31:0] trunc_ln106_reg_768_pp0_iter5_reg;
reg   [31:0] trunc_ln106_reg_768_pp0_iter6_reg;
wire   [31:0] trunc_ln106_171_fu_320_p1;
reg   [31:0] trunc_ln106_171_reg_773;
wire   [31:0] trunc_ln106_172_fu_324_p1;
reg   [31:0] trunc_ln106_172_reg_778;
wire   [31:0] trunc_ln106_173_fu_328_p1;
reg   [31:0] trunc_ln106_173_reg_783;
reg   [31:0] trunc_ln106_173_reg_783_pp0_iter5_reg;
reg   [31:0] tmp_299_reg_789;
reg   [31:0] tmp_301_reg_794;
reg   [31:0] tmp_301_reg_794_pp0_iter5_reg;
reg   [31:0] tmp_302_reg_800;
reg   [31:0] tmp_302_reg_800_pp0_iter5_reg;
reg   [31:0] tmp_303_reg_805;
reg   [31:0] tmp_303_reg_805_pp0_iter5_reg;
reg   [31:0] tmp_303_reg_805_pp0_iter6_reg;
reg   [1:0] tmp_300_reg_810;
wire   [31:0] trunc_ln125_fu_407_p1;
reg   [31:0] trunc_ln125_reg_815;
reg   [31:0] trunc_ln125_reg_815_pp0_iter6_reg;
wire   [31:0] add_ln105_fu_451_p2;
reg   [31:0] add_ln105_reg_821;
reg   [1:0] tmp_304_reg_826;
wire   [63:0] add_ln133_fu_501_p2;
reg   [63:0] add_ln133_reg_831;
reg   [63:0] add_ln133_reg_831_pp0_iter8_reg;
wire   [63:0] tempReg_fu_572_p2;
reg   [63:0] tempReg_reg_836;
reg   [63:0] tempReg_reg_836_pp0_iter8_reg;
reg   [63:0] u_92_out_load_reg_845;
wire   [63:0] v_fu_587_p2;
reg   [63:0] v_reg_850;
wire   [31:0] zext_ln145_18_fu_224_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln145_17_fu_263_p1;
wire   [63:0] zext_ln143_cast_fu_167_p1;
wire    ap_loop_init;
wire   [3:0] u_fu_668_p2;
reg   [63:0] v_114_fu_82;
wire   [63:0] v_155_fu_513_p2;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [3:0] j_fu_86;
wire   [3:0] add_ln144_fu_202_p2;
reg   [3:0] ap_sig_allocacmp_j_30;
wire    ap_block_pp0_stage0_01001;
reg    a_ce0_local;
reg    R_X_ce0_local;
wire   [2:0] trunc_ln145_fu_213_p1;
wire   [3:0] tmp_419_cast_fu_216_p3;
wire   [3:0] sub_ln145_fu_229_p2;
wire   [6:0] zext_ln145_fu_233_p1;
wire   [0:0] bit_sel1_fu_237_p3;
wire   [0:0] xor_ln145_fu_245_p2;
wire   [2:0] trunc_ln145_19_fu_251_p1;
wire   [3:0] xor_ln_fu_255_p3;
wire   [32:0] zext_ln123_fu_375_p1;
wire   [32:0] zext_ln123_105_fu_378_p1;
wire   [32:0] add_ln123_fu_381_p2;
wire   [33:0] zext_ln123_106_fu_387_p1;
wire   [33:0] zext_ln106_fu_372_p1;
wire   [33:0] temp_fu_391_p2;
wire   [32:0] zext_ln130_fu_420_p1;
wire   [32:0] zext_ln106_137_fu_414_p1;
wire   [32:0] add_ln130_fu_427_p2;
wire   [32:0] zext_ln106_138_fu_417_p1;
wire   [32:0] zext_ln106_136_fu_411_p1;
wire   [32:0] add_ln130_126_fu_437_p2;
wire   [31:0] trunc_ln130_fu_443_p1;
wire   [31:0] add_ln130_131_fu_423_p2;
wire   [33:0] zext_ln130_106_fu_447_p1;
wire   [33:0] zext_ln130_105_fu_433_p1;
wire   [33:0] temp_56_fu_457_p2;
wire   [33:0] and_ln133_s_fu_490_p3;
wire   [63:0] zext_ln133_fu_497_p1;
wire   [63:0] and_ln_fu_483_p3;
wire   [63:0] or_ln_fu_507_p3;
wire   [63:0] shl_ln_fu_476_p3;
wire   [63:0] xor_ln105_fu_519_p2;
wire   [63:0] xor_ln105_51_fu_525_p2;
wire   [63:0] or_ln105_fu_531_p2;
wire   [63:0] xor_ln105_52_fu_537_p2;
wire   [0:0] carry_fu_543_p3;
wire   [31:0] tmp_s_fu_555_p4;
wire   [63:0] or_ln24_fu_565_p3;
wire   [63:0] zext_ln105_116_fu_551_p1;
wire   [63:0] xor_ln147_fu_602_p2;
wire   [63:0] xor_ln147_31_fu_606_p2;
wire   [0:0] bit_sel_fu_616_p3;
wire   [0:0] xor_ln147_32_fu_623_p2;
wire   [62:0] trunc_ln147_fu_629_p1;
wire   [63:0] xor_ln147_s_fu_632_p3;
wire   [63:0] or_ln147_fu_610_p2;
wire   [63:0] xor_ln147_33_fu_645_p2;
wire   [63:0] and_ln147_fu_640_p2;
wire   [63:0] or_ln147_15_fu_650_p2;
wire   [0:0] tmp_fu_656_p3;
wire   [3:0] zext_ln148_fu_664_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 v_114_fu_82 = 64'd0;
#0 j_fu_86 = 4'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln144_fu_196_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_86 <= add_ln144_fu_202_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_86 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            v_114_fu_82 <= v_017;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            v_114_fu_82 <= v_155_fu_513_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln105_reg_821 <= add_ln105_fu_451_p2;
        add_ln133_reg_831[63 : 32] <= add_ln133_fu_501_p2[63 : 32];
        add_ln133_reg_831_pp0_iter8_reg[63 : 32] <= add_ln133_reg_831[63 : 32];
        ah_reg_734 <= {{a_q0[63:32]}};
        al_reg_724 <= al_fu_268_p1;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        bh_reg_739 <= {{R_X_q0[63:32]}};
        bl_reg_729 <= bl_fu_272_p1;
        icmp_ln144_reg_710_pp0_iter2_reg <= icmp_ln144_reg_710_pp0_iter1_reg;
        icmp_ln144_reg_710_pp0_iter3_reg <= icmp_ln144_reg_710_pp0_iter2_reg;
        icmp_ln144_reg_710_pp0_iter4_reg <= icmp_ln144_reg_710_pp0_iter3_reg;
        icmp_ln144_reg_710_pp0_iter5_reg <= icmp_ln144_reg_710_pp0_iter4_reg;
        icmp_ln144_reg_710_pp0_iter6_reg <= icmp_ln144_reg_710_pp0_iter5_reg;
        icmp_ln144_reg_710_pp0_iter7_reg <= icmp_ln144_reg_710_pp0_iter6_reg;
        tempReg_reg_836 <= tempReg_fu_572_p2;
        tempReg_reg_836_pp0_iter8_reg <= tempReg_reg_836;
        tmp_299_reg_789 <= {{grp_fu_422_p_dout0[63:32]}};
        tmp_300_reg_810 <= {{temp_fu_391_p2[33:32]}};
        tmp_301_reg_794 <= {{grp_fu_430_p_dout0[63:32]}};
        tmp_301_reg_794_pp0_iter5_reg <= tmp_301_reg_794;
        tmp_302_reg_800 <= {{grp_fu_426_p_dout0[63:32]}};
        tmp_302_reg_800_pp0_iter5_reg <= tmp_302_reg_800;
        tmp_303_reg_805 <= {{grp_fu_434_p_dout0[63:32]}};
        tmp_303_reg_805_pp0_iter5_reg <= tmp_303_reg_805;
        tmp_303_reg_805_pp0_iter6_reg <= tmp_303_reg_805_pp0_iter5_reg;
        tmp_304_reg_826 <= {{temp_56_fu_457_p2[33:32]}};
        trunc_ln106_171_reg_773 <= trunc_ln106_171_fu_320_p1;
        trunc_ln106_172_reg_778 <= trunc_ln106_172_fu_324_p1;
        trunc_ln106_173_reg_783 <= trunc_ln106_173_fu_328_p1;
        trunc_ln106_173_reg_783_pp0_iter5_reg <= trunc_ln106_173_reg_783;
        trunc_ln106_reg_768 <= trunc_ln106_fu_316_p1;
        trunc_ln106_reg_768_pp0_iter5_reg <= trunc_ln106_reg_768;
        trunc_ln106_reg_768_pp0_iter6_reg <= trunc_ln106_reg_768_pp0_iter5_reg;
        trunc_ln125_reg_815 <= trunc_ln125_fu_407_p1;
        trunc_ln125_reg_815_pp0_iter6_reg <= trunc_ln125_reg_815;
        u_92_out_load_reg_845 <= u_92_out_i;
        v_reg_850 <= v_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_cast_reg_699[2 : 0] <= i_cast_fu_163_p1[2 : 0];
        icmp_ln144_reg_710 <= icmp_ln144_fu_196_p2;
        icmp_ln144_reg_710_pp0_iter1_reg <= icmp_ln144_reg_710;
        j_30_reg_704 <= ap_sig_allocacmp_j_30;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        R_X_ce0_local = 1'b1;
    end else begin
        R_X_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_ce0_local = 1'b1;
    end else begin
        a_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln144_fu_196_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_30 = 4'd0;
    end else begin
        ap_sig_allocacmp_j_30 = j_fu_86;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_out_o = 4'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            t_out_o = u_fu_668_p2;
        end else begin
            t_out_o = t_out_i;
        end
    end else begin
        t_out_o = t_out_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        t_out_o_ap_vld = 1'b1;
    end else begin
        t_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            u_92_out_o = zext_ln143_cast_fu_167_p1;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            u_92_out_o = v_fu_587_p2;
        end else begin
            u_92_out_o = u_92_out_i;
        end
    end else begin
        u_92_out_o = u_92_out_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
        u_92_out_o_ap_vld = 1'b1;
    end else begin
        u_92_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln144_reg_710_pp0_iter7_reg == 1'd1))) begin
        v_114_out_ap_vld = 1'b1;
    end else begin
        v_114_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign R_X_address0 = zext_ln145_17_fu_263_p1;

assign R_X_ce0 = R_X_ce0_local;

assign a_address0 = zext_ln145_18_fu_224_p1;

assign a_ce0 = a_ce0_local;

assign add_ln105_fu_451_p2 = (trunc_ln130_fu_443_p1 + add_ln130_131_fu_423_p2);

assign add_ln123_fu_381_p2 = (zext_ln123_fu_375_p1 + zext_ln123_105_fu_378_p1);

assign add_ln130_126_fu_437_p2 = (zext_ln106_138_fu_417_p1 + zext_ln106_136_fu_411_p1);

assign add_ln130_131_fu_423_p2 = (trunc_ln106_173_reg_783_pp0_iter5_reg + tmp_301_reg_794_pp0_iter5_reg);

assign add_ln130_fu_427_p2 = (zext_ln130_fu_420_p1 + zext_ln106_137_fu_414_p1);

assign add_ln133_fu_501_p2 = (zext_ln133_fu_497_p1 + and_ln_fu_483_p3);

assign add_ln144_fu_202_p2 = (ap_sig_allocacmp_j_30 + 4'd1);

assign al_fu_268_p1 = a_q0[31:0];

assign and_ln133_s_fu_490_p3 = {{tmp_304_reg_826}, {32'd0}};

assign and_ln147_fu_640_p2 = (xor_ln147_s_fu_632_p3 & add_ln133_reg_831_pp0_iter8_reg);

assign and_ln_fu_483_p3 = {{tmp_303_reg_805_pp0_iter6_reg}, {32'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bit_sel1_fu_237_p3 = zext_ln145_fu_233_p1[7'd3];

assign bit_sel_fu_616_p3 = tempReg_reg_836_pp0_iter8_reg[64'd63];

assign bl_fu_272_p1 = R_X_q0[31:0];

assign carry_fu_543_p3 = xor_ln105_52_fu_537_p2[32'd63];

assign grp_fu_422_p_ce = 1'b1;

assign grp_fu_422_p_din0 = zext_ln105_115_fu_306_p1;

assign grp_fu_422_p_din1 = zext_ln105_fu_296_p1;

assign grp_fu_426_p_ce = 1'b1;

assign grp_fu_426_p_din0 = zext_ln112_fu_311_p1;

assign grp_fu_426_p_din1 = zext_ln105_fu_296_p1;

assign grp_fu_430_p_ce = 1'b1;

assign grp_fu_430_p_din0 = zext_ln105_115_fu_306_p1;

assign grp_fu_430_p_din1 = zext_ln110_fu_301_p1;

assign grp_fu_434_p_ce = 1'b1;

assign grp_fu_434_p_din0 = zext_ln112_fu_311_p1;

assign grp_fu_434_p_din1 = zext_ln110_fu_301_p1;

assign i_cast_fu_163_p1 = i;

assign icmp_ln144_fu_196_p2 = ((ap_sig_allocacmp_j_30 == indvars_iv31) ? 1'b1 : 1'b0);

assign or_ln105_fu_531_p2 = (xor_ln105_fu_519_p2 | xor_ln105_51_fu_525_p2);

assign or_ln147_15_fu_650_p2 = (xor_ln147_33_fu_645_p2 | and_ln147_fu_640_p2);

assign or_ln147_fu_610_p2 = (xor_ln147_fu_602_p2 | xor_ln147_31_fu_606_p2);

assign or_ln24_fu_565_p3 = {{tmp_s_fu_555_p4}, {add_ln105_reg_821}};

assign or_ln_fu_507_p3 = {{trunc_ln125_reg_815_pp0_iter6_reg}, {trunc_ln106_reg_768_pp0_iter6_reg}};

assign shl_ln_fu_476_p3 = {{trunc_ln125_reg_815_pp0_iter6_reg}, {32'd0}};

assign sub_ln145_fu_229_p2 = (i_cast_reg_699 - j_30_reg_704);

assign tempReg_fu_572_p2 = (or_ln24_fu_565_p3 + zext_ln105_116_fu_551_p1);

assign temp_56_fu_457_p2 = (zext_ln130_106_fu_447_p1 + zext_ln130_105_fu_433_p1);

assign temp_fu_391_p2 = (zext_ln123_106_fu_387_p1 + zext_ln106_fu_372_p1);

assign tmp_419_cast_fu_216_p3 = {{1'd1}, {trunc_ln145_fu_213_p1}};

assign tmp_fu_656_p3 = or_ln147_15_fu_650_p2[32'd63];

assign tmp_s_fu_555_p4 = {{add_ln133_fu_501_p2[63:32]}};

assign trunc_ln106_171_fu_320_p1 = grp_fu_426_p_dout0[31:0];

assign trunc_ln106_172_fu_324_p1 = grp_fu_430_p_dout0[31:0];

assign trunc_ln106_173_fu_328_p1 = grp_fu_434_p_dout0[31:0];

assign trunc_ln106_fu_316_p1 = grp_fu_422_p_dout0[31:0];

assign trunc_ln125_fu_407_p1 = temp_fu_391_p2[31:0];

assign trunc_ln130_fu_443_p1 = add_ln130_126_fu_437_p2[31:0];

assign trunc_ln145_19_fu_251_p1 = sub_ln145_fu_229_p2[2:0];

assign trunc_ln145_fu_213_p1 = j_30_reg_704[2:0];

assign trunc_ln147_fu_629_p1 = tempReg_reg_836_pp0_iter8_reg[62:0];

assign u_fu_668_p2 = (zext_ln148_fu_664_p1 + t_out_i);

assign v_114_out = v_114_fu_82;

assign v_155_fu_513_p2 = (or_ln_fu_507_p3 + v_114_fu_82);

assign v_fu_587_p2 = (tempReg_reg_836 + u_92_out_i);

assign xor_ln105_51_fu_525_p2 = (v_114_fu_82 ^ shl_ln_fu_476_p3);

assign xor_ln105_52_fu_537_p2 = (v_155_fu_513_p2 ^ or_ln105_fu_531_p2);

assign xor_ln105_fu_519_p2 = (v_155_fu_513_p2 ^ shl_ln_fu_476_p3);

assign xor_ln145_fu_245_p2 = (bit_sel1_fu_237_p3 ^ 1'd1);

assign xor_ln147_31_fu_606_p2 = (u_92_out_load_reg_845 ^ tempReg_reg_836_pp0_iter8_reg);

assign xor_ln147_32_fu_623_p2 = (bit_sel_fu_616_p3 ^ 1'd1);

assign xor_ln147_33_fu_645_p2 = (v_reg_850 ^ or_ln147_fu_610_p2);

assign xor_ln147_fu_602_p2 = (v_reg_850 ^ tempReg_reg_836_pp0_iter8_reg);

assign xor_ln147_s_fu_632_p3 = {{xor_ln147_32_fu_623_p2}, {trunc_ln147_fu_629_p1}};

assign xor_ln_fu_255_p3 = {{xor_ln145_fu_245_p2}, {trunc_ln145_19_fu_251_p1}};

assign zext_ln105_115_fu_306_p1 = bl_reg_729;

assign zext_ln105_116_fu_551_p1 = carry_fu_543_p3;

assign zext_ln105_fu_296_p1 = al_reg_724;

assign zext_ln106_136_fu_411_p1 = tmp_300_reg_810;

assign zext_ln106_137_fu_414_p1 = tmp_301_reg_794_pp0_iter5_reg;

assign zext_ln106_138_fu_417_p1 = tmp_302_reg_800_pp0_iter5_reg;

assign zext_ln106_fu_372_p1 = tmp_299_reg_789;

assign zext_ln110_fu_301_p1 = ah_reg_734;

assign zext_ln112_fu_311_p1 = bh_reg_739;

assign zext_ln123_105_fu_378_p1 = trunc_ln106_171_reg_773;

assign zext_ln123_106_fu_387_p1 = add_ln123_fu_381_p2;

assign zext_ln123_fu_375_p1 = trunc_ln106_172_reg_778;

assign zext_ln130_105_fu_433_p1 = add_ln130_fu_427_p2;

assign zext_ln130_106_fu_447_p1 = add_ln130_126_fu_437_p2;

assign zext_ln130_fu_420_p1 = trunc_ln106_173_reg_783_pp0_iter5_reg;

assign zext_ln133_fu_497_p1 = and_ln133_s_fu_490_p3;

assign zext_ln143_cast_fu_167_p1 = zext_ln143;

assign zext_ln145_17_fu_263_p1 = xor_ln_fu_255_p3;

assign zext_ln145_18_fu_224_p1 = tmp_419_cast_fu_216_p3;

assign zext_ln145_fu_233_p1 = sub_ln145_fu_229_p2;

assign zext_ln148_fu_664_p1 = tmp_fu_656_p3;

always @ (posedge ap_clk) begin
    i_cast_reg_699[3] <= 1'b0;
    add_ln133_reg_831[31:0] <= 32'b00000000000000000000000000000000;
    add_ln133_reg_831_pp0_iter8_reg[31:0] <= 32'b00000000000000000000000000000000;
end

endmodule //sikep503_kem_enc_hw_mp_mul_219_Pipeline_VITIS_LOOP_144_2
