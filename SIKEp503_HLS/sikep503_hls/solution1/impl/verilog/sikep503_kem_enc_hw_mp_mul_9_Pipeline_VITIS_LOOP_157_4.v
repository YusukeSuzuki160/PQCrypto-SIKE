// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_mp_mul_9_Pipeline_VITIS_LOOP_157_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        indvars_iv,
        v,
        zext_ln156,
        PKB_address0,
        PKB_ce0,
        PKB_q0,
        PKB_address1,
        PKB_ce1,
        PKB_q1,
        zext_ln156_1,
        v_35_out,
        v_35_out_ap_vld,
        u_34_out_i,
        u_34_out_o,
        u_34_out_o_ap_vld,
        t_33_out,
        t_33_out_ap_vld,
        grp_fu_418_p_din0,
        grp_fu_418_p_din1,
        grp_fu_418_p_dout0,
        grp_fu_418_p_ce,
        grp_fu_422_p_din0,
        grp_fu_422_p_din1,
        grp_fu_422_p_dout0,
        grp_fu_422_p_ce,
        grp_fu_426_p_din0,
        grp_fu_426_p_din1,
        grp_fu_426_p_dout0,
        grp_fu_426_p_ce,
        grp_fu_430_p_din0,
        grp_fu_430_p_din1,
        grp_fu_430_p_dout0,
        grp_fu_430_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] indvars_iv;
input  [63:0] v;
input  [3:0] zext_ln156;
output  [5:0] PKB_address0;
output   PKB_ce0;
input  [63:0] PKB_q0;
output  [5:0] PKB_address1;
output   PKB_ce1;
input  [63:0] PKB_q1;
input  [3:0] zext_ln156_1;
output  [63:0] v_35_out;
output   v_35_out_ap_vld;
input  [63:0] u_34_out_i;
output  [63:0] u_34_out_o;
output   u_34_out_o_ap_vld;
output  [2:0] t_33_out;
output   t_33_out_ap_vld;
output  [31:0] grp_fu_418_p_din0;
output  [31:0] grp_fu_418_p_din1;
input  [63:0] grp_fu_418_p_dout0;
output   grp_fu_418_p_ce;
output  [31:0] grp_fu_422_p_din0;
output  [31:0] grp_fu_422_p_din1;
input  [63:0] grp_fu_422_p_dout0;
output   grp_fu_422_p_ce;
output  [31:0] grp_fu_426_p_din0;
output  [31:0] grp_fu_426_p_din1;
input  [63:0] grp_fu_426_p_dout0;
output   grp_fu_426_p_ce;
output  [31:0] grp_fu_430_p_din0;
output  [31:0] grp_fu_430_p_din1;
input  [63:0] grp_fu_430_p_dout0;
output   grp_fu_430_p_ce;

reg ap_idle;
reg v_35_out_ap_vld;
reg[63:0] u_34_out_o;
reg u_34_out_o_ap_vld;
reg t_33_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln157_fu_225_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] zext_ln156_1_cast_fu_189_p1;
reg   [4:0] zext_ln156_1_cast_reg_756;
reg   [3:0] j_reg_761;
reg   [0:0] icmp_ln157_reg_767;
reg   [0:0] icmp_ln157_reg_767_pp0_iter1_reg;
reg   [0:0] icmp_ln157_reg_767_pp0_iter2_reg;
reg   [0:0] icmp_ln157_reg_767_pp0_iter3_reg;
reg   [0:0] icmp_ln157_reg_767_pp0_iter4_reg;
reg   [0:0] icmp_ln157_reg_767_pp0_iter5_reg;
reg   [0:0] icmp_ln157_reg_767_pp0_iter6_reg;
reg   [0:0] icmp_ln157_reg_767_pp0_iter7_reg;
wire   [31:0] al_fu_315_p1;
reg   [31:0] al_reg_781;
wire   [31:0] bl_fu_319_p1;
reg   [31:0] bl_reg_786;
reg   [31:0] ah_reg_791;
reg   [31:0] bh_reg_796;
wire   [63:0] zext_ln105_58_fu_343_p1;
wire   [63:0] zext_ln110_fu_348_p1;
wire   [63:0] zext_ln105_fu_353_p1;
wire   [63:0] zext_ln112_fu_358_p1;
wire   [31:0] trunc_ln106_fu_363_p1;
reg   [31:0] trunc_ln106_reg_825;
reg   [31:0] trunc_ln106_reg_825_pp0_iter5_reg;
reg   [31:0] trunc_ln106_reg_825_pp0_iter6_reg;
wire   [31:0] trunc_ln106_78_fu_367_p1;
reg   [31:0] trunc_ln106_78_reg_830;
wire   [31:0] trunc_ln106_79_fu_371_p1;
reg   [31:0] trunc_ln106_79_reg_835;
wire   [31:0] trunc_ln106_80_fu_375_p1;
reg   [31:0] trunc_ln106_80_reg_840;
reg   [31:0] trunc_ln106_80_reg_840_pp0_iter5_reg;
reg   [31:0] tmp_117_reg_846;
reg   [31:0] tmp_119_reg_851;
reg   [31:0] tmp_119_reg_851_pp0_iter5_reg;
reg   [31:0] tmp_120_reg_857;
reg   [31:0] tmp_120_reg_857_pp0_iter5_reg;
reg   [31:0] tmp_121_reg_862;
reg   [31:0] tmp_121_reg_862_pp0_iter5_reg;
reg   [31:0] tmp_121_reg_862_pp0_iter6_reg;
reg   [1:0] tmp_118_reg_867;
wire   [31:0] trunc_ln125_fu_454_p1;
reg   [31:0] trunc_ln125_reg_872;
reg   [31:0] trunc_ln125_reg_872_pp0_iter6_reg;
wire   [31:0] add_ln105_fu_498_p2;
reg   [31:0] add_ln105_reg_878;
reg   [1:0] tmp_122_reg_883;
wire   [63:0] add_ln133_fu_548_p2;
reg   [63:0] add_ln133_reg_888;
reg   [63:0] add_ln133_reg_888_pp0_iter8_reg;
wire   [63:0] tempReg_fu_619_p2;
reg   [63:0] tempReg_reg_893;
reg   [63:0] tempReg_reg_893_pp0_iter8_reg;
reg   [63:0] u_34_out_load_reg_902;
wire   [63:0] u_fu_634_p2;
reg   [63:0] u_reg_907;
wire   [31:0] zext_ln158_1_fu_272_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln158_2_fu_310_p1;
wire   [63:0] zext_ln156_cast_fu_193_p1;
wire    ap_loop_init;
reg   [2:0] t_33_fu_98;
wire   [2:0] t_fu_714_p2;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [63:0] v_35_fu_102;
wire   [63:0] v_110_fu_560_p2;
reg   [3:0] j_7_fu_106;
wire   [3:0] indvars_iv_cast_fu_197_p1;
wire   [3:0] add_ln157_fu_231_p2;
reg   [3:0] ap_sig_allocacmp_j;
wire    ap_block_pp0_stage0_01001;
reg    PKB_ce1_local;
reg    PKB_ce0_local;
wire   [6:0] shl_ln6_fu_245_p3;
wire   [7:0] zext_ln158_fu_252_p1;
wire   [7:0] add_ln158_fu_256_p2;
wire   [4:0] lshr_ln_fu_262_p4;
wire   [4:0] zext_ln157_fu_242_p1;
wire   [4:0] sub_ln158_fu_277_p2;
wire   [7:0] tmp_s_fu_282_p3;
wire  signed [8:0] sext_ln158_fu_290_p1;
wire   [8:0] add_ln158_1_fu_294_p2;
wire   [5:0] lshr_ln158_1_fu_300_p4;
wire   [32:0] zext_ln123_fu_422_p1;
wire   [32:0] zext_ln123_43_fu_425_p1;
wire   [32:0] add_ln123_fu_428_p2;
wire   [33:0] zext_ln123_44_fu_434_p1;
wire   [33:0] zext_ln106_fu_419_p1;
wire   [33:0] temp_fu_438_p2;
wire   [32:0] zext_ln130_fu_467_p1;
wire   [32:0] zext_ln106_46_fu_461_p1;
wire   [32:0] add_ln130_46_fu_474_p2;
wire   [32:0] zext_ln106_47_fu_464_p1;
wire   [32:0] zext_ln106_45_fu_458_p1;
wire   [32:0] add_ln130_47_fu_484_p2;
wire   [31:0] trunc_ln130_fu_490_p1;
wire   [31:0] add_ln130_fu_470_p2;
wire   [33:0] zext_ln130_44_fu_494_p1;
wire   [33:0] zext_ln130_43_fu_480_p1;
wire   [33:0] temp_25_fu_504_p2;
wire   [33:0] and_ln133_3_fu_537_p3;
wire   [63:0] zext_ln133_fu_544_p1;
wire   [63:0] and_ln133_2_fu_530_p3;
wire   [63:0] or_ln2_fu_554_p3;
wire   [63:0] shl_ln125_7_fu_523_p3;
wire   [63:0] xor_ln105_3_fu_566_p2;
wire   [63:0] xor_ln105_4_fu_572_p2;
wire   [63:0] or_ln105_1_fu_578_p2;
wire   [63:0] xor_ln105_5_fu_584_p2;
wire   [0:0] carry_fu_590_p3;
wire   [31:0] tmp_2_fu_602_p4;
wire   [63:0] or_ln3_fu_612_p3;
wire   [63:0] zext_ln105_59_fu_598_p1;
wire   [63:0] xor_ln160_fu_648_p2;
wire   [63:0] xor_ln160_1_fu_652_p2;
wire   [0:0] bit_sel1_fu_662_p3;
wire   [0:0] xor_ln160_4_fu_669_p2;
wire   [62:0] trunc_ln160_fu_675_p1;
wire   [63:0] xor_ln160_2_fu_678_p3;
wire   [63:0] or_ln160_fu_656_p2;
wire   [63:0] xor_ln160_3_fu_691_p2;
wire   [63:0] and_ln160_fu_686_p2;
wire   [63:0] or_ln160_1_fu_696_p2;
wire   [0:0] tmp_fu_702_p3;
wire   [2:0] zext_ln161_fu_710_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 t_33_fu_98 = 3'd0;
#0 v_35_fu_102 = 64'd0;
#0 j_7_fu_106 = 4'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln157_fu_225_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_7_fu_106 <= add_ln157_fu_231_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_7_fu_106 <= indvars_iv_cast_fu_197_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_33_fu_98 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            t_33_fu_98 <= t_fu_714_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            v_35_fu_102 <= v;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            v_35_fu_102 <= v_110_fu_560_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln105_reg_878 <= add_ln105_fu_498_p2;
        add_ln133_reg_888[63 : 32] <= add_ln133_fu_548_p2[63 : 32];
        add_ln133_reg_888_pp0_iter8_reg[63 : 32] <= add_ln133_reg_888[63 : 32];
        ah_reg_791 <= {{PKB_q1[63:32]}};
        al_reg_781 <= al_fu_315_p1;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        bh_reg_796 <= {{PKB_q0[63:32]}};
        bl_reg_786 <= bl_fu_319_p1;
        icmp_ln157_reg_767_pp0_iter2_reg <= icmp_ln157_reg_767_pp0_iter1_reg;
        icmp_ln157_reg_767_pp0_iter3_reg <= icmp_ln157_reg_767_pp0_iter2_reg;
        icmp_ln157_reg_767_pp0_iter4_reg <= icmp_ln157_reg_767_pp0_iter3_reg;
        icmp_ln157_reg_767_pp0_iter5_reg <= icmp_ln157_reg_767_pp0_iter4_reg;
        icmp_ln157_reg_767_pp0_iter6_reg <= icmp_ln157_reg_767_pp0_iter5_reg;
        icmp_ln157_reg_767_pp0_iter7_reg <= icmp_ln157_reg_767_pp0_iter6_reg;
        tempReg_reg_893 <= tempReg_fu_619_p2;
        tempReg_reg_893_pp0_iter8_reg <= tempReg_reg_893;
        tmp_117_reg_846 <= {{grp_fu_418_p_dout0[63:32]}};
        tmp_118_reg_867 <= {{temp_fu_438_p2[33:32]}};
        tmp_119_reg_851 <= {{grp_fu_426_p_dout0[63:32]}};
        tmp_119_reg_851_pp0_iter5_reg <= tmp_119_reg_851;
        tmp_120_reg_857 <= {{grp_fu_422_p_dout0[63:32]}};
        tmp_120_reg_857_pp0_iter5_reg <= tmp_120_reg_857;
        tmp_121_reg_862 <= {{grp_fu_430_p_dout0[63:32]}};
        tmp_121_reg_862_pp0_iter5_reg <= tmp_121_reg_862;
        tmp_121_reg_862_pp0_iter6_reg <= tmp_121_reg_862_pp0_iter5_reg;
        tmp_122_reg_883 <= {{temp_25_fu_504_p2[33:32]}};
        trunc_ln106_78_reg_830 <= trunc_ln106_78_fu_367_p1;
        trunc_ln106_79_reg_835 <= trunc_ln106_79_fu_371_p1;
        trunc_ln106_80_reg_840 <= trunc_ln106_80_fu_375_p1;
        trunc_ln106_80_reg_840_pp0_iter5_reg <= trunc_ln106_80_reg_840;
        trunc_ln106_reg_825 <= trunc_ln106_fu_363_p1;
        trunc_ln106_reg_825_pp0_iter5_reg <= trunc_ln106_reg_825;
        trunc_ln106_reg_825_pp0_iter6_reg <= trunc_ln106_reg_825_pp0_iter5_reg;
        trunc_ln125_reg_872 <= trunc_ln125_fu_454_p1;
        trunc_ln125_reg_872_pp0_iter6_reg <= trunc_ln125_reg_872;
        u_34_out_load_reg_902 <= u_34_out_i;
        u_reg_907 <= u_fu_634_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln157_reg_767 <= icmp_ln157_fu_225_p2;
        icmp_ln157_reg_767_pp0_iter1_reg <= icmp_ln157_reg_767;
        j_reg_761 <= ap_sig_allocacmp_j;
        zext_ln156_1_cast_reg_756[3 : 0] <= zext_ln156_1_cast_fu_189_p1[3 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PKB_ce0_local = 1'b1;
    end else begin
        PKB_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        PKB_ce1_local = 1'b1;
    end else begin
        PKB_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_225_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j = indvars_iv_cast_fu_197_p1;
    end else begin
        ap_sig_allocacmp_j = j_7_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln157_reg_767_pp0_iter7_reg == 1'd1))) begin
        t_33_out_ap_vld = 1'b1;
    end else begin
        t_33_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            u_34_out_o = zext_ln156_cast_fu_193_p1;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            u_34_out_o = u_fu_634_p2;
        end else begin
            u_34_out_o = u_34_out_i;
        end
    end else begin
        u_34_out_o = u_34_out_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
        u_34_out_o_ap_vld = 1'b1;
    end else begin
        u_34_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln157_reg_767_pp0_iter7_reg == 1'd1))) begin
        v_35_out_ap_vld = 1'b1;
    end else begin
        v_35_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign PKB_address0 = zext_ln158_2_fu_310_p1;

assign PKB_address1 = zext_ln158_1_fu_272_p1;

assign PKB_ce0 = PKB_ce0_local;

assign PKB_ce1 = PKB_ce1_local;

assign add_ln105_fu_498_p2 = (trunc_ln130_fu_490_p1 + add_ln130_fu_470_p2);

assign add_ln123_fu_428_p2 = (zext_ln123_fu_422_p1 + zext_ln123_43_fu_425_p1);

assign add_ln130_46_fu_474_p2 = (zext_ln130_fu_467_p1 + zext_ln106_46_fu_461_p1);

assign add_ln130_47_fu_484_p2 = (zext_ln106_47_fu_464_p1 + zext_ln106_45_fu_458_p1);

assign add_ln130_fu_470_p2 = (trunc_ln106_80_reg_840_pp0_iter5_reg + tmp_119_reg_851_pp0_iter5_reg);

assign add_ln133_fu_548_p2 = (zext_ln133_fu_544_p1 + and_ln133_2_fu_530_p3);

assign add_ln157_fu_231_p2 = (ap_sig_allocacmp_j + 4'd1);

assign add_ln158_1_fu_294_p2 = ($signed(sext_ln158_fu_290_p1) + $signed(9'd192));

assign add_ln158_fu_256_p2 = (zext_ln158_fu_252_p1 + 8'd64);

assign al_fu_315_p1 = PKB_q1[31:0];

assign and_ln133_2_fu_530_p3 = {{tmp_121_reg_862_pp0_iter6_reg}, {32'd0}};

assign and_ln133_3_fu_537_p3 = {{tmp_122_reg_883}, {32'd0}};

assign and_ln160_fu_686_p2 = (xor_ln160_2_fu_678_p3 & add_ln133_reg_888_pp0_iter8_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bit_sel1_fu_662_p3 = tempReg_reg_893_pp0_iter8_reg[64'd63];

assign bl_fu_319_p1 = PKB_q0[31:0];

assign carry_fu_590_p3 = xor_ln105_5_fu_584_p2[32'd63];

assign grp_fu_418_p_ce = 1'b1;

assign grp_fu_418_p_din0 = zext_ln105_fu_353_p1;

assign grp_fu_418_p_din1 = zext_ln105_58_fu_343_p1;

assign grp_fu_422_p_ce = 1'b1;

assign grp_fu_422_p_din0 = zext_ln112_fu_358_p1;

assign grp_fu_422_p_din1 = zext_ln105_58_fu_343_p1;

assign grp_fu_426_p_ce = 1'b1;

assign grp_fu_426_p_din0 = zext_ln105_fu_353_p1;

assign grp_fu_426_p_din1 = zext_ln110_fu_348_p1;

assign grp_fu_430_p_ce = 1'b1;

assign grp_fu_430_p_din0 = zext_ln112_fu_358_p1;

assign grp_fu_430_p_din1 = zext_ln110_fu_348_p1;

assign icmp_ln157_fu_225_p2 = ((ap_sig_allocacmp_j == 4'd8) ? 1'b1 : 1'b0);

assign indvars_iv_cast_fu_197_p1 = indvars_iv;

assign lshr_ln158_1_fu_300_p4 = {{add_ln158_1_fu_294_p2[8:3]}};

assign lshr_ln_fu_262_p4 = {{add_ln158_fu_256_p2[7:3]}};

assign or_ln105_1_fu_578_p2 = (xor_ln105_4_fu_572_p2 | xor_ln105_3_fu_566_p2);

assign or_ln160_1_fu_696_p2 = (xor_ln160_3_fu_691_p2 | and_ln160_fu_686_p2);

assign or_ln160_fu_656_p2 = (xor_ln160_fu_648_p2 | xor_ln160_1_fu_652_p2);

assign or_ln2_fu_554_p3 = {{trunc_ln125_reg_872_pp0_iter6_reg}, {trunc_ln106_reg_825_pp0_iter6_reg}};

assign or_ln3_fu_612_p3 = {{tmp_2_fu_602_p4}, {add_ln105_reg_878}};

assign sext_ln158_fu_290_p1 = $signed(tmp_s_fu_282_p3);

assign shl_ln125_7_fu_523_p3 = {{trunc_ln125_reg_872_pp0_iter6_reg}, {32'd0}};

assign shl_ln6_fu_245_p3 = {{j_reg_761}, {3'd0}};

assign sub_ln158_fu_277_p2 = (zext_ln156_1_cast_reg_756 - zext_ln157_fu_242_p1);

assign t_33_out = t_33_fu_98;

assign t_fu_714_p2 = (zext_ln161_fu_710_p1 + t_33_fu_98);

assign tempReg_fu_619_p2 = (or_ln3_fu_612_p3 + zext_ln105_59_fu_598_p1);

assign temp_25_fu_504_p2 = (zext_ln130_44_fu_494_p1 + zext_ln130_43_fu_480_p1);

assign temp_fu_438_p2 = (zext_ln123_44_fu_434_p1 + zext_ln106_fu_419_p1);

assign tmp_2_fu_602_p4 = {{add_ln133_fu_548_p2[63:32]}};

assign tmp_fu_702_p3 = or_ln160_1_fu_696_p2[32'd63];

assign tmp_s_fu_282_p3 = {{sub_ln158_fu_277_p2}, {3'd0}};

assign trunc_ln106_78_fu_367_p1 = grp_fu_422_p_dout0[31:0];

assign trunc_ln106_79_fu_371_p1 = grp_fu_426_p_dout0[31:0];

assign trunc_ln106_80_fu_375_p1 = grp_fu_430_p_dout0[31:0];

assign trunc_ln106_fu_363_p1 = grp_fu_418_p_dout0[31:0];

assign trunc_ln125_fu_454_p1 = temp_fu_438_p2[31:0];

assign trunc_ln130_fu_490_p1 = add_ln130_47_fu_484_p2[31:0];

assign trunc_ln160_fu_675_p1 = tempReg_reg_893_pp0_iter8_reg[62:0];

assign u_fu_634_p2 = (tempReg_reg_893 + u_34_out_i);

assign v_110_fu_560_p2 = (or_ln2_fu_554_p3 + v_35_fu_102);

assign v_35_out = v_35_fu_102;

assign xor_ln105_3_fu_566_p2 = (v_110_fu_560_p2 ^ shl_ln125_7_fu_523_p3);

assign xor_ln105_4_fu_572_p2 = (v_35_fu_102 ^ shl_ln125_7_fu_523_p3);

assign xor_ln105_5_fu_584_p2 = (v_110_fu_560_p2 ^ or_ln105_1_fu_578_p2);

assign xor_ln160_1_fu_652_p2 = (u_34_out_load_reg_902 ^ tempReg_reg_893_pp0_iter8_reg);

assign xor_ln160_2_fu_678_p3 = {{xor_ln160_4_fu_669_p2}, {trunc_ln160_fu_675_p1}};

assign xor_ln160_3_fu_691_p2 = (u_reg_907 ^ or_ln160_fu_656_p2);

assign xor_ln160_4_fu_669_p2 = (bit_sel1_fu_662_p3 ^ 1'd1);

assign xor_ln160_fu_648_p2 = (u_reg_907 ^ tempReg_reg_893_pp0_iter8_reg);

assign zext_ln105_58_fu_343_p1 = al_reg_781;

assign zext_ln105_59_fu_598_p1 = carry_fu_590_p3;

assign zext_ln105_fu_353_p1 = bl_reg_786;

assign zext_ln106_45_fu_458_p1 = tmp_118_reg_867;

assign zext_ln106_46_fu_461_p1 = tmp_119_reg_851_pp0_iter5_reg;

assign zext_ln106_47_fu_464_p1 = tmp_120_reg_857_pp0_iter5_reg;

assign zext_ln106_fu_419_p1 = tmp_117_reg_846;

assign zext_ln110_fu_348_p1 = ah_reg_791;

assign zext_ln112_fu_358_p1 = bh_reg_796;

assign zext_ln123_43_fu_425_p1 = trunc_ln106_78_reg_830;

assign zext_ln123_44_fu_434_p1 = add_ln123_fu_428_p2;

assign zext_ln123_fu_422_p1 = trunc_ln106_79_reg_835;

assign zext_ln130_43_fu_480_p1 = add_ln130_46_fu_474_p2;

assign zext_ln130_44_fu_494_p1 = add_ln130_47_fu_484_p2;

assign zext_ln130_fu_467_p1 = trunc_ln106_80_reg_840_pp0_iter5_reg;

assign zext_ln133_fu_544_p1 = and_ln133_3_fu_537_p3;

assign zext_ln156_1_cast_fu_189_p1 = zext_ln156_1;

assign zext_ln156_cast_fu_193_p1 = zext_ln156;

assign zext_ln157_fu_242_p1 = j_reg_761;

assign zext_ln158_1_fu_272_p1 = lshr_ln_fu_262_p4;

assign zext_ln158_2_fu_310_p1 = lshr_ln158_1_fu_300_p4;

assign zext_ln158_fu_252_p1 = shl_ln6_fu_245_p3;

assign zext_ln161_fu_710_p1 = tmp_fu_702_p3;

always @ (posedge ap_clk) begin
    zext_ln156_1_cast_reg_756[4] <= 1'b0;
    add_ln133_reg_888[31:0] <= 32'b00000000000000000000000000000000;
    add_ln133_reg_888_pp0_iter8_reg[31:0] <= 32'b00000000000000000000000000000000;
end

endmodule //sikep503_kem_enc_hw_mp_mul_9_Pipeline_VITIS_LOOP_157_4
