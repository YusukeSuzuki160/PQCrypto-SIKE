// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_KeccakF1600_StatePermute_Pipeline_VITIS_LOOP_117_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        Asu,
        Aba,
        Abe,
        Abi,
        Abo,
        Abu,
        Aga,
        Age,
        Agi,
        Ago,
        Agu,
        Aka,
        Ake,
        Aki,
        Ako,
        Aku,
        Ama,
        Ame,
        Ami,
        Amo,
        Amu,
        Asa,
        Ase,
        Asi,
        Aso,
        Asu_1_out,
        Asu_1_out_ap_vld,
        Aba_1_out,
        Aba_1_out_ap_vld,
        Abe_1_out,
        Abe_1_out_ap_vld,
        Abi_1_out,
        Abi_1_out_ap_vld,
        Abo_1_out,
        Abo_1_out_ap_vld,
        Abu_1_out,
        Abu_1_out_ap_vld,
        Aga_1_out,
        Aga_1_out_ap_vld,
        Age_1_out,
        Age_1_out_ap_vld,
        Agi_1_out,
        Agi_1_out_ap_vld,
        Ago_1_out,
        Ago_1_out_ap_vld,
        Agu_1_out,
        Agu_1_out_ap_vld,
        Aka_1_out,
        Aka_1_out_ap_vld,
        Ake_1_out,
        Ake_1_out_ap_vld,
        Aki_1_out,
        Aki_1_out_ap_vld,
        Ako_1_out,
        Ako_1_out_ap_vld,
        Aku_1_out,
        Aku_1_out_ap_vld,
        Ama_1_out,
        Ama_1_out_ap_vld,
        Ame_1_out,
        Ame_1_out_ap_vld,
        Ami_1_out,
        Ami_1_out_ap_vld,
        Amo_1_out,
        Amo_1_out_ap_vld,
        Amu_1_out,
        Amu_1_out_ap_vld,
        Asa_1_out,
        Asa_1_out_ap_vld,
        Ase_1_out,
        Ase_1_out_ap_vld,
        Asi_1_out,
        Asi_1_out_ap_vld,
        Aso_1_out,
        Aso_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] Asu;
input  [63:0] Aba;
input  [63:0] Abe;
input  [63:0] Abi;
input  [63:0] Abo;
input  [63:0] Abu;
input  [63:0] Aga;
input  [63:0] Age;
input  [63:0] Agi;
input  [63:0] Ago;
input  [63:0] Agu;
input  [63:0] Aka;
input  [63:0] Ake;
input  [63:0] Aki;
input  [63:0] Ako;
input  [63:0] Aku;
input  [63:0] Ama;
input  [63:0] Ame;
input  [63:0] Ami;
input  [63:0] Amo;
input  [63:0] Amu;
input  [63:0] Asa;
input  [63:0] Ase;
input  [63:0] Asi;
input  [63:0] Aso;
output  [63:0] Asu_1_out;
output   Asu_1_out_ap_vld;
output  [63:0] Aba_1_out;
output   Aba_1_out_ap_vld;
output  [63:0] Abe_1_out;
output   Abe_1_out_ap_vld;
output  [63:0] Abi_1_out;
output   Abi_1_out_ap_vld;
output  [63:0] Abo_1_out;
output   Abo_1_out_ap_vld;
output  [63:0] Abu_1_out;
output   Abu_1_out_ap_vld;
output  [63:0] Aga_1_out;
output   Aga_1_out_ap_vld;
output  [63:0] Age_1_out;
output   Age_1_out_ap_vld;
output  [63:0] Agi_1_out;
output   Agi_1_out_ap_vld;
output  [63:0] Ago_1_out;
output   Ago_1_out_ap_vld;
output  [63:0] Agu_1_out;
output   Agu_1_out_ap_vld;
output  [63:0] Aka_1_out;
output   Aka_1_out_ap_vld;
output  [63:0] Ake_1_out;
output   Ake_1_out_ap_vld;
output  [63:0] Aki_1_out;
output   Aki_1_out_ap_vld;
output  [63:0] Ako_1_out;
output   Ako_1_out_ap_vld;
output  [63:0] Aku_1_out;
output   Aku_1_out_ap_vld;
output  [63:0] Ama_1_out;
output   Ama_1_out_ap_vld;
output  [63:0] Ame_1_out;
output   Ame_1_out_ap_vld;
output  [63:0] Ami_1_out;
output   Ami_1_out_ap_vld;
output  [63:0] Amo_1_out;
output   Amo_1_out_ap_vld;
output  [63:0] Amu_1_out;
output   Amu_1_out_ap_vld;
output  [63:0] Asa_1_out;
output   Asa_1_out_ap_vld;
output  [63:0] Ase_1_out;
output   Ase_1_out_ap_vld;
output  [63:0] Asi_1_out;
output   Asi_1_out_ap_vld;
output  [63:0] Aso_1_out;
output   Aso_1_out_ap_vld;

reg ap_idle;
reg Asu_1_out_ap_vld;
reg Aba_1_out_ap_vld;
reg Abe_1_out_ap_vld;
reg Abi_1_out_ap_vld;
reg Abo_1_out_ap_vld;
reg Abu_1_out_ap_vld;
reg Aga_1_out_ap_vld;
reg Age_1_out_ap_vld;
reg Agi_1_out_ap_vld;
reg Ago_1_out_ap_vld;
reg Agu_1_out_ap_vld;
reg Aka_1_out_ap_vld;
reg Ake_1_out_ap_vld;
reg Aki_1_out_ap_vld;
reg Ako_1_out_ap_vld;
reg Aku_1_out_ap_vld;
reg Ama_1_out_ap_vld;
reg Ame_1_out_ap_vld;
reg Ami_1_out_ap_vld;
reg Amo_1_out_ap_vld;
reg Amu_1_out_ap_vld;
reg Asa_1_out_ap_vld;
reg Ase_1_out_ap_vld;
reg Asi_1_out_ap_vld;
reg Aso_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln117_fu_871_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [4:0] KeccakF_RoundConstants_address0;
wire   [63:0] KeccakF_RoundConstants_q0;
wire   [4:0] KeccakF_RoundConstants_address1;
wire   [63:0] KeccakF_RoundConstants_q1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln117_reg_4135;
wire   [63:0] Eba_2_fu_2623_p2;
reg   [63:0] Eba_2_reg_4149;
wire   [19:0] trunc_ln231_fu_2635_p1;
reg   [19:0] trunc_ln231_reg_4156;
reg   [43:0] lshr_ln24_reg_4161;
wire   [20:0] trunc_ln233_fu_2655_p1;
reg   [20:0] trunc_ln233_reg_4166;
reg   [42:0] lshr_ln25_reg_4171;
wire   [42:0] trunc_ln235_fu_2675_p1;
reg   [42:0] trunc_ln235_reg_4176;
reg   [20:0] lshr_ln26_reg_4181;
wire   [49:0] trunc_ln237_fu_2695_p1;
reg   [49:0] trunc_ln237_reg_4186;
reg   [13:0] lshr_ln27_reg_4191;
reg   [63:0] KeccakF_RoundConstants_load_1_reg_4196;
wire   [35:0] trunc_ln246_fu_2715_p1;
reg   [35:0] trunc_ln246_reg_4201;
reg   [27:0] lshr_ln28_reg_4206;
wire   [43:0] trunc_ln248_fu_2735_p1;
reg   [43:0] trunc_ln248_reg_4211;
reg   [19:0] lshr_ln29_reg_4216;
wire   [60:0] trunc_ln250_fu_2755_p1;
reg   [60:0] trunc_ln250_reg_4221;
reg   [2:0] lshr_ln30_reg_4226;
wire   [18:0] trunc_ln252_fu_2775_p1;
reg   [18:0] trunc_ln252_reg_4231;
reg   [44:0] lshr_ln31_reg_4236;
wire   [2:0] trunc_ln254_fu_2795_p1;
reg   [2:0] trunc_ln254_reg_4241;
reg   [60:0] lshr_ln32_reg_4246;
wire   [62:0] trunc_ln262_fu_2815_p1;
reg   [62:0] trunc_ln262_reg_4251;
reg   [0:0] tmp_308_reg_4256;
wire   [57:0] trunc_ln264_fu_2833_p1;
reg   [57:0] trunc_ln264_reg_4261;
reg   [5:0] lshr_ln33_reg_4266;
wire   [38:0] trunc_ln266_fu_2853_p1;
reg   [38:0] trunc_ln266_reg_4271;
reg   [24:0] lshr_ln34_reg_4276;
wire   [55:0] trunc_ln268_fu_2873_p1;
reg   [55:0] trunc_ln268_reg_4281;
reg   [7:0] lshr_ln35_reg_4286;
wire   [45:0] trunc_ln270_fu_2893_p1;
reg   [45:0] trunc_ln270_reg_4291;
reg   [17:0] lshr_ln36_reg_4296;
wire   [36:0] trunc_ln278_fu_2913_p1;
reg   [36:0] trunc_ln278_reg_4301;
reg   [26:0] lshr_ln37_reg_4306;
wire   [27:0] trunc_ln280_fu_2933_p1;
reg   [27:0] trunc_ln280_reg_4311;
reg   [35:0] lshr_ln38_reg_4316;
wire   [53:0] trunc_ln282_fu_2953_p1;
reg   [53:0] trunc_ln282_reg_4321;
reg   [9:0] lshr_ln39_reg_4326;
wire   [48:0] trunc_ln284_fu_2973_p1;
reg   [48:0] trunc_ln284_reg_4331;
reg   [14:0] lshr_ln40_reg_4336;
wire   [7:0] trunc_ln286_fu_2993_p1;
reg   [7:0] trunc_ln286_reg_4341;
reg   [55:0] lshr_ln41_reg_4346;
wire   [1:0] trunc_ln294_fu_3013_p1;
reg   [1:0] trunc_ln294_reg_4351;
reg   [61:0] lshr_ln42_reg_4356;
wire   [8:0] trunc_ln296_fu_3033_p1;
reg   [8:0] trunc_ln296_reg_4361;
reg   [54:0] lshr_ln43_reg_4366;
wire   [24:0] trunc_ln298_fu_3053_p1;
reg   [24:0] trunc_ln298_reg_4371;
reg   [38:0] lshr_ln44_reg_4376;
wire   [22:0] trunc_ln300_fu_3073_p1;
reg   [22:0] trunc_ln300_reg_4381;
reg   [40:0] lshr_ln45_reg_4386;
wire   [61:0] trunc_ln302_fu_3093_p1;
reg   [61:0] trunc_ln302_reg_4391;
reg   [1:0] lshr_ln46_reg_4396;
wire   [31:0] zext_ln144_fu_877_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln239_fu_900_p1;
reg   [63:0] Aso_1_fu_284;
wire   [63:0] Aso_3_fu_3679_p2;
reg   [63:0] ap_sig_allocacmp_Aso_1_load;
wire    ap_loop_init;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [63:0] Asi_1_fu_288;
wire   [63:0] Asi_3_fu_3661_p2;
reg   [63:0] ap_sig_allocacmp_Asi_1_load;
reg   [63:0] Ase_1_fu_292;
wire   [63:0] Ase_3_fu_3643_p2;
reg   [63:0] ap_sig_allocacmp_Ase_1_load;
reg   [63:0] Asa_1_fu_296;
wire   [63:0] Asa_3_fu_3625_p2;
reg   [63:0] ap_sig_allocacmp_Asa_1_load;
reg   [63:0] Amu_1_fu_300;
wire   [63:0] Amu_3_fu_3577_p2;
reg   [63:0] ap_sig_allocacmp_Amu_1_load;
reg   [63:0] Amo_1_fu_304;
wire   [63:0] Amo_3_fu_3559_p2;
reg   [63:0] ap_sig_allocacmp_Amo_1_load;
reg   [63:0] Ami_1_fu_308;
wire   [63:0] Ami_3_fu_3541_p2;
reg   [63:0] ap_sig_allocacmp_Ami_1_load;
reg   [63:0] Ame_1_fu_312;
wire   [63:0] Ame_3_fu_3523_p2;
reg   [63:0] ap_sig_allocacmp_Ame_1_load;
reg   [63:0] Ama_1_fu_316;
wire   [63:0] Ama_3_fu_3505_p2;
reg   [63:0] ap_sig_allocacmp_Ama_1_load;
reg   [63:0] Aku_1_fu_320;
wire   [63:0] Aku_3_fu_3457_p2;
reg   [63:0] ap_sig_allocacmp_Aku_1_load;
reg   [63:0] Ako_1_fu_324;
wire   [63:0] Ako_3_fu_3439_p2;
reg   [63:0] ap_sig_allocacmp_Ako_1_load;
reg   [63:0] Aki_1_fu_328;
wire   [63:0] Aki_3_fu_3421_p2;
reg   [63:0] ap_sig_allocacmp_Aki_1_load;
reg   [63:0] Ake_1_fu_332;
wire   [63:0] Ake_3_fu_3403_p2;
reg   [63:0] ap_sig_allocacmp_Ake_1_load;
reg   [63:0] Aka_1_fu_336;
wire   [63:0] Aka_3_fu_3385_p2;
reg   [63:0] ap_sig_allocacmp_Aka_1_load;
reg   [63:0] Agu_1_fu_340;
wire   [63:0] Agu_3_fu_3337_p2;
reg   [63:0] ap_sig_allocacmp_Agu_1_load;
reg   [63:0] Ago_1_fu_344;
wire   [63:0] Ago_3_fu_3319_p2;
reg   [63:0] ap_sig_allocacmp_Ago_1_load;
reg   [63:0] Agi_1_fu_348;
wire   [63:0] Agi_3_fu_3301_p2;
reg   [63:0] ap_sig_allocacmp_Agi_1_load;
reg   [63:0] Age_1_fu_352;
wire   [63:0] Age_3_fu_3283_p2;
reg   [63:0] ap_sig_allocacmp_Age_1_load;
reg   [63:0] Aga_1_fu_356;
wire   [63:0] Aga_3_fu_3265_p2;
reg   [63:0] ap_sig_allocacmp_Aga_1_load;
reg   [63:0] Abu_1_fu_360;
wire   [63:0] Abu_3_fu_3217_p2;
reg   [63:0] ap_sig_allocacmp_Abu_1_load;
reg   [63:0] Abo_1_fu_364;
wire   [63:0] Abo_3_fu_3200_p2;
reg   [63:0] ap_sig_allocacmp_Abo_1_load;
reg   [63:0] Abi_1_fu_368;
wire   [63:0] Abi_3_fu_3183_p2;
reg   [63:0] ap_sig_allocacmp_Abi_1_load;
reg   [63:0] Abe_1_fu_372;
wire   [63:0] Abe_3_fu_3165_p2;
reg   [63:0] ap_sig_allocacmp_Abe_1_load;
reg   [63:0] Aba_1_fu_376;
wire   [63:0] Aba_3_fu_3147_p2;
reg   [63:0] ap_sig_allocacmp_Aba_1_load;
reg   [63:0] Asu_1_fu_380;
wire   [63:0] Asu_3_fu_3697_p2;
reg   [63:0] ap_sig_allocacmp_Asu_1_load;
reg   [4:0] round_fu_384;
wire   [4:0] add_ln117_fu_905_p2;
reg   [4:0] ap_sig_allocacmp_round_1;
wire    ap_block_pp0_stage0_01001;
reg    KeccakF_RoundConstants_ce1_local;
reg    KeccakF_RoundConstants_ce0_local;
wire   [3:0] tmp_s_fu_882_p4;
wire   [4:0] or_ln68_fu_892_p3;
wire   [63:0] xor_ln120_fu_991_p2;
wire   [63:0] xor_ln120_1_fu_1003_p2;
wire   [63:0] xor_ln120_2_fu_997_p2;
wire   [63:0] xor_ln121_fu_1015_p2;
wire   [63:0] xor_ln121_1_fu_1027_p2;
wire   [63:0] xor_ln121_2_fu_1021_p2;
wire   [63:0] xor_ln122_fu_1039_p2;
wire   [63:0] xor_ln122_1_fu_1045_p2;
wire   [63:0] xor_ln122_2_fu_1051_p2;
wire   [63:0] xor_ln123_fu_1063_p2;
wire   [63:0] xor_ln123_1_fu_1069_p2;
wire   [63:0] xor_ln123_2_fu_1075_p2;
wire   [63:0] xor_ln124_fu_1087_p2;
wire   [63:0] xor_ln124_1_fu_1099_p2;
wire   [63:0] xor_ln124_2_fu_1093_p2;
wire   [63:0] BCe_fu_1033_p2;
wire   [62:0] trunc_ln127_fu_1111_p1;
wire   [0:0] tmp_fu_1115_p3;
wire   [63:0] or_ln_fu_1123_p3;
wire   [63:0] BCu_fu_1105_p2;
wire   [63:0] BCi_fu_1057_p2;
wire   [62:0] trunc_ln128_fu_1137_p1;
wire   [0:0] tmp_298_fu_1141_p3;
wire   [63:0] or_ln59_fu_1149_p3;
wire   [63:0] BCa_fu_1009_p2;
wire   [63:0] BCo_fu_1081_p2;
wire   [62:0] trunc_ln129_fu_1163_p1;
wire   [0:0] tmp_299_fu_1167_p3;
wire   [63:0] or_ln60_fu_1175_p3;
wire   [62:0] trunc_ln130_fu_1189_p1;
wire   [0:0] tmp_300_fu_1193_p3;
wire   [63:0] or_ln61_fu_1201_p3;
wire   [62:0] trunc_ln131_fu_1215_p1;
wire   [0:0] tmp_301_fu_1219_p3;
wire   [63:0] or_ln62_fu_1227_p3;
wire   [63:0] Da_fu_1131_p2;
wire   [63:0] De_fu_1157_p2;
wire   [63:0] Age_2_fu_1247_p2;
wire   [19:0] trunc_ln136_fu_1253_p1;
wire   [43:0] lshr_ln_fu_1257_p4;
wire   [63:0] Di_fu_1183_p2;
wire   [63:0] Aki_2_fu_1275_p2;
wire   [20:0] trunc_ln138_fu_1281_p1;
wire   [42:0] lshr_ln2_fu_1285_p4;
wire   [63:0] Do_fu_1209_p2;
wire   [63:0] Amo_2_fu_1303_p2;
wire   [42:0] trunc_ln140_fu_1309_p1;
wire   [20:0] lshr_ln3_fu_1313_p4;
wire   [63:0] Du_fu_1235_p2;
wire   [63:0] Asu_2_fu_1331_p2;
wire   [49:0] trunc_ln142_fu_1337_p1;
wire   [13:0] lshr_ln4_fu_1341_p4;
wire   [63:0] BCe_1_fu_1267_p3;
wire   [63:0] BCi_1_fu_1295_p3;
wire   [63:0] xor_ln144_fu_1359_p2;
wire   [63:0] Aba_4_fu_1241_p2;
wire   [63:0] xor_ln144_1_fu_1371_p2;
wire   [63:0] and_ln144_fu_1365_p2;
wire   [63:0] BCo_1_fu_1323_p3;
wire   [63:0] xor_ln145_fu_1383_p2;
wire   [63:0] and_ln145_fu_1389_p2;
wire   [63:0] BCu_1_fu_1351_p3;
wire   [63:0] xor_ln146_fu_1401_p2;
wire   [63:0] and_ln146_fu_1407_p2;
wire   [63:0] xor_ln147_fu_1419_p2;
wire   [63:0] and_ln147_fu_1425_p2;
wire   [63:0] xor_ln148_fu_1437_p2;
wire   [63:0] and_ln148_fu_1443_p2;
wire   [63:0] Abo_2_fu_1455_p2;
wire   [35:0] trunc_ln151_fu_1461_p1;
wire   [27:0] lshr_ln5_fu_1465_p4;
wire   [63:0] Agu_2_fu_1483_p2;
wire   [43:0] trunc_ln153_fu_1489_p1;
wire   [19:0] lshr_ln6_fu_1493_p4;
wire   [63:0] Aka_2_fu_1511_p2;
wire   [60:0] trunc_ln155_fu_1517_p1;
wire   [2:0] lshr_ln7_fu_1521_p4;
wire   [63:0] Ame_2_fu_1539_p2;
wire   [18:0] trunc_ln157_fu_1545_p1;
wire   [44:0] lshr_ln8_fu_1549_p4;
wire   [63:0] Asi_2_fu_1567_p2;
wire   [2:0] trunc_ln159_fu_1573_p1;
wire   [60:0] lshr_ln9_fu_1577_p4;
wire   [63:0] BCe_2_fu_1503_p3;
wire   [63:0] BCi_2_fu_1531_p3;
wire   [63:0] xor_ln160_fu_1595_p2;
wire   [63:0] and_ln160_fu_1601_p2;
wire   [63:0] BCa_2_fu_1475_p3;
wire   [63:0] BCo_2_fu_1559_p3;
wire   [63:0] xor_ln161_fu_1613_p2;
wire   [63:0] and_ln161_fu_1619_p2;
wire   [63:0] BCu_2_fu_1587_p3;
wire   [63:0] xor_ln162_fu_1631_p2;
wire   [63:0] and_ln162_fu_1637_p2;
wire   [63:0] xor_ln163_fu_1649_p2;
wire   [63:0] and_ln163_fu_1655_p2;
wire   [63:0] xor_ln164_fu_1667_p2;
wire   [63:0] and_ln164_fu_1673_p2;
wire   [63:0] Abe_2_fu_1685_p2;
wire   [62:0] trunc_ln167_fu_1691_p1;
wire   [0:0] tmp_302_fu_1695_p3;
wire   [63:0] Agi_2_fu_1711_p2;
wire   [57:0] trunc_ln169_fu_1717_p1;
wire   [5:0] lshr_ln10_fu_1721_p4;
wire   [63:0] Ako_2_fu_1739_p2;
wire   [38:0] trunc_ln171_fu_1745_p1;
wire   [24:0] lshr_ln11_fu_1749_p4;
wire   [63:0] Amu_2_fu_1767_p2;
wire   [55:0] trunc_ln173_fu_1773_p1;
wire   [7:0] lshr_ln12_fu_1777_p4;
wire   [63:0] Asa_2_fu_1795_p2;
wire   [45:0] trunc_ln175_fu_1801_p1;
wire   [17:0] lshr_ln13_fu_1805_p4;
wire   [63:0] BCe_3_fu_1731_p3;
wire   [63:0] BCi_3_fu_1759_p3;
wire   [63:0] xor_ln176_fu_1823_p2;
wire   [63:0] and_ln176_fu_1829_p2;
wire   [63:0] BCa_3_fu_1703_p3;
wire   [63:0] BCo_3_fu_1787_p3;
wire   [63:0] xor_ln177_fu_1841_p2;
wire   [63:0] and_ln177_fu_1847_p2;
wire   [63:0] BCu_3_fu_1815_p3;
wire   [63:0] xor_ln178_fu_1859_p2;
wire   [63:0] and_ln178_fu_1865_p2;
wire   [63:0] xor_ln179_fu_1877_p2;
wire   [63:0] and_ln179_fu_1883_p2;
wire   [63:0] xor_ln180_fu_1895_p2;
wire   [63:0] and_ln180_fu_1901_p2;
wire   [63:0] Abu_2_fu_1913_p2;
wire   [36:0] trunc_ln183_fu_1919_p1;
wire   [26:0] lshr_ln14_fu_1923_p4;
wire   [63:0] Aga_2_fu_1941_p2;
wire   [27:0] trunc_ln185_fu_1947_p1;
wire   [35:0] lshr_ln15_fu_1951_p4;
wire   [63:0] Ake_2_fu_1969_p2;
wire   [53:0] trunc_ln187_fu_1975_p1;
wire   [9:0] lshr_ln16_fu_1979_p4;
wire   [63:0] Ami_2_fu_1997_p2;
wire   [48:0] trunc_ln189_fu_2003_p1;
wire   [14:0] lshr_ln17_fu_2007_p4;
wire   [63:0] Aso_2_fu_2025_p2;
wire   [7:0] trunc_ln191_fu_2031_p1;
wire   [55:0] lshr_ln18_fu_2035_p4;
wire   [63:0] BCe_4_fu_1961_p3;
wire   [63:0] BCi_4_fu_1989_p3;
wire   [63:0] xor_ln192_fu_2053_p2;
wire   [63:0] and_ln192_fu_2059_p2;
wire   [63:0] BCa_4_fu_1933_p3;
wire   [63:0] BCo_4_fu_2017_p3;
wire   [63:0] xor_ln193_fu_2071_p2;
wire   [63:0] and_ln193_fu_2077_p2;
wire   [63:0] BCu_4_fu_2045_p3;
wire   [63:0] xor_ln194_fu_2089_p2;
wire   [63:0] and_ln194_fu_2095_p2;
wire   [63:0] xor_ln195_fu_2107_p2;
wire   [63:0] and_ln195_fu_2113_p2;
wire   [63:0] xor_ln196_fu_2125_p2;
wire   [63:0] and_ln196_fu_2131_p2;
wire   [63:0] Abi_2_fu_2143_p2;
wire   [1:0] trunc_ln199_fu_2149_p1;
wire   [61:0] lshr_ln19_fu_2153_p4;
wire   [63:0] Ago_2_fu_2171_p2;
wire   [8:0] trunc_ln201_fu_2177_p1;
wire   [54:0] lshr_ln20_fu_2181_p4;
wire   [63:0] Aku_2_fu_2199_p2;
wire   [24:0] trunc_ln203_fu_2205_p1;
wire   [38:0] lshr_ln21_fu_2209_p4;
wire   [63:0] Ama_2_fu_2227_p2;
wire   [22:0] trunc_ln205_fu_2233_p1;
wire   [40:0] lshr_ln22_fu_2237_p4;
wire   [63:0] Ase_2_fu_2255_p2;
wire   [61:0] trunc_ln207_fu_2261_p1;
wire   [1:0] lshr_ln23_fu_2265_p4;
wire   [63:0] BCe_5_fu_2191_p3;
wire   [63:0] BCi_5_fu_2219_p3;
wire   [63:0] xor_ln208_fu_2283_p2;
wire   [63:0] BCa_5_fu_2163_p3;
wire   [63:0] and_ln208_fu_2289_p2;
wire   [63:0] BCo_5_fu_2247_p3;
wire   [63:0] xor_ln209_fu_2301_p2;
wire   [63:0] and_ln209_fu_2307_p2;
wire   [63:0] BCu_5_fu_2275_p3;
wire   [63:0] xor_ln210_fu_2319_p2;
wire   [63:0] and_ln210_fu_2325_p2;
wire   [63:0] xor_ln211_fu_2337_p2;
wire   [63:0] and_ln211_fu_2343_p2;
wire   [63:0] xor_ln212_fu_2355_p2;
wire   [63:0] and_ln212_fu_2361_p2;
wire   [63:0] Esa_fu_2295_p2;
wire   [63:0] Eka_fu_1835_p2;
wire   [63:0] Ema_fu_2065_p2;
wire   [63:0] Eba_fu_1377_p2;
wire   [63:0] xor_ln215_1_fu_2379_p2;
wire   [63:0] Ega_fu_1607_p2;
wire   [63:0] xor_ln215_2_fu_2385_p2;
wire   [63:0] xor_ln215_fu_2373_p2;
wire   [63:0] Ege_fu_1625_p2;
wire   [63:0] Ebe_fu_1395_p2;
wire   [63:0] Eke_fu_1853_p2;
wire   [63:0] Eme_fu_2083_p2;
wire   [63:0] xor_ln216_fu_2403_p2;
wire   [63:0] Ese_fu_2313_p2;
wire   [63:0] xor_ln216_2_fu_2409_p2;
wire   [63:0] xor_ln216_1_fu_2397_p2;
wire   [63:0] Esi_fu_2331_p2;
wire   [63:0] Emi_fu_2101_p2;
wire   [63:0] Ebi_fu_1413_p2;
wire   [63:0] Egi_fu_1643_p2;
wire   [63:0] xor_ln217_fu_2427_p2;
wire   [63:0] Eki_fu_1871_p2;
wire   [63:0] xor_ln217_2_fu_2433_p2;
wire   [63:0] xor_ln217_1_fu_2421_p2;
wire   [63:0] Eko_fu_1889_p2;
wire   [63:0] Ego_fu_1661_p2;
wire   [63:0] Ebo_fu_1431_p2;
wire   [63:0] Eso_fu_2349_p2;
wire   [63:0] xor_ln218_1_fu_2451_p2;
wire   [63:0] Emo_fu_2119_p2;
wire   [63:0] xor_ln218_2_fu_2457_p2;
wire   [63:0] xor_ln218_fu_2445_p2;
wire   [63:0] Ebu_fu_1449_p2;
wire   [63:0] Esu_fu_2367_p2;
wire   [63:0] Egu_fu_1679_p2;
wire   [63:0] Eku_fu_1907_p2;
wire   [63:0] xor_ln219_1_fu_2475_p2;
wire   [63:0] Emu_fu_2137_p2;
wire   [63:0] xor_ln219_2_fu_2481_p2;
wire   [63:0] xor_ln219_fu_2469_p2;
wire   [63:0] BCe_6_fu_2415_p2;
wire   [62:0] trunc_ln222_fu_2493_p1;
wire   [0:0] tmp_303_fu_2497_p3;
wire   [63:0] or_ln63_fu_2505_p3;
wire   [63:0] BCu_6_fu_2487_p2;
wire   [63:0] BCi_6_fu_2439_p2;
wire   [62:0] trunc_ln223_fu_2519_p1;
wire   [0:0] tmp_304_fu_2523_p3;
wire   [63:0] BCa_6_fu_2391_p2;
wire   [63:0] or_ln64_fu_2531_p3;
wire   [63:0] BCo_6_fu_2463_p2;
wire   [62:0] trunc_ln224_fu_2545_p1;
wire   [0:0] tmp_305_fu_2549_p3;
wire   [63:0] or_ln65_fu_2557_p3;
wire   [62:0] trunc_ln225_fu_2571_p1;
wire   [0:0] tmp_306_fu_2575_p3;
wire   [63:0] or_ln66_fu_2583_p3;
wire   [62:0] trunc_ln226_fu_2597_p1;
wire   [0:0] tmp_307_fu_2601_p3;
wire   [63:0] or_ln67_fu_2609_p3;
wire   [63:0] Da_1_fu_2513_p2;
wire   [63:0] De_1_fu_2539_p2;
wire   [63:0] Ege_1_fu_2629_p2;
wire   [63:0] Di_1_fu_2565_p2;
wire   [63:0] Eki_1_fu_2649_p2;
wire   [63:0] Do_1_fu_2591_p2;
wire   [63:0] Emo_1_fu_2669_p2;
wire   [63:0] Du_1_fu_2617_p2;
wire   [63:0] Esu_1_fu_2689_p2;
wire   [63:0] Ebo_1_fu_2709_p2;
wire   [63:0] Egu_1_fu_2729_p2;
wire   [63:0] Eka_1_fu_2749_p2;
wire   [63:0] Eme_1_fu_2769_p2;
wire   [63:0] Esi_1_fu_2789_p2;
wire   [63:0] Ebe_1_fu_2809_p2;
wire   [63:0] Egi_1_fu_2827_p2;
wire   [63:0] Eko_1_fu_2847_p2;
wire   [63:0] Emu_1_fu_2867_p2;
wire   [63:0] Esa_1_fu_2887_p2;
wire   [63:0] Ebu_1_fu_2907_p2;
wire   [63:0] Ega_1_fu_2927_p2;
wire   [63:0] Eke_1_fu_2947_p2;
wire   [63:0] Emi_1_fu_2967_p2;
wire   [63:0] Eso_1_fu_2987_p2;
wire   [63:0] Ebi_1_fu_3007_p2;
wire   [63:0] Ego_1_fu_3027_p2;
wire   [63:0] Eku_1_fu_3047_p2;
wire   [63:0] Ema_1_fu_3067_p2;
wire   [63:0] Ese_1_fu_3087_p2;
wire   [63:0] BCe_7_fu_3107_p3;
wire   [63:0] BCi_7_fu_3113_p3;
wire   [63:0] xor_ln239_fu_3131_p2;
wire   [63:0] xor_ln239_1_fu_3143_p2;
wire   [63:0] and_ln239_fu_3137_p2;
wire   [63:0] BCo_7_fu_3119_p3;
wire   [63:0] xor_ln240_fu_3153_p2;
wire   [63:0] and_ln240_fu_3159_p2;
wire   [63:0] BCu_7_fu_3125_p3;
wire   [63:0] xor_ln241_fu_3171_p2;
wire   [63:0] and_ln241_fu_3177_p2;
wire   [63:0] xor_ln242_fu_3189_p2;
wire   [63:0] and_ln242_fu_3195_p2;
wire   [63:0] xor_ln243_fu_3206_p2;
wire   [63:0] and_ln243_fu_3211_p2;
wire   [63:0] BCe_8_fu_3229_p3;
wire   [63:0] BCi_8_fu_3235_p3;
wire   [63:0] xor_ln255_fu_3253_p2;
wire   [63:0] and_ln255_fu_3259_p2;
wire   [63:0] BCa_8_fu_3223_p3;
wire   [63:0] BCo_8_fu_3241_p3;
wire   [63:0] xor_ln256_fu_3271_p2;
wire   [63:0] and_ln256_fu_3277_p2;
wire   [63:0] BCu_8_fu_3247_p3;
wire   [63:0] xor_ln257_fu_3289_p2;
wire   [63:0] and_ln257_fu_3295_p2;
wire   [63:0] xor_ln258_fu_3307_p2;
wire   [63:0] and_ln258_fu_3313_p2;
wire   [63:0] xor_ln259_fu_3325_p2;
wire   [63:0] and_ln259_fu_3331_p2;
wire   [63:0] BCe_9_fu_3349_p3;
wire   [63:0] BCi_9_fu_3355_p3;
wire   [63:0] xor_ln271_fu_3373_p2;
wire   [63:0] BCa_9_fu_3343_p3;
wire   [63:0] and_ln271_fu_3379_p2;
wire   [63:0] BCo_9_fu_3361_p3;
wire   [63:0] xor_ln272_fu_3391_p2;
wire   [63:0] and_ln272_fu_3397_p2;
wire   [63:0] BCu_9_fu_3367_p3;
wire   [63:0] xor_ln273_fu_3409_p2;
wire   [63:0] and_ln273_fu_3415_p2;
wire   [63:0] xor_ln274_fu_3427_p2;
wire   [63:0] and_ln274_fu_3433_p2;
wire   [63:0] xor_ln275_fu_3445_p2;
wire   [63:0] and_ln275_fu_3451_p2;
wire   [63:0] BCe_10_fu_3469_p3;
wire   [63:0] BCi_10_fu_3475_p3;
wire   [63:0] xor_ln287_fu_3493_p2;
wire   [63:0] BCa_10_fu_3463_p3;
wire   [63:0] and_ln287_fu_3499_p2;
wire   [63:0] BCo_10_fu_3481_p3;
wire   [63:0] xor_ln288_fu_3511_p2;
wire   [63:0] and_ln288_fu_3517_p2;
wire   [63:0] BCu_10_fu_3487_p3;
wire   [63:0] xor_ln289_fu_3529_p2;
wire   [63:0] and_ln289_fu_3535_p2;
wire   [63:0] xor_ln290_fu_3547_p2;
wire   [63:0] and_ln290_fu_3553_p2;
wire   [63:0] xor_ln291_fu_3565_p2;
wire   [63:0] and_ln291_fu_3571_p2;
wire   [63:0] BCe_11_fu_3589_p3;
wire   [63:0] BCi_11_fu_3595_p3;
wire   [63:0] xor_ln303_fu_3613_p2;
wire   [63:0] and_ln303_fu_3619_p2;
wire   [63:0] BCa_11_fu_3583_p3;
wire   [63:0] BCo_11_fu_3601_p3;
wire   [63:0] xor_ln304_fu_3631_p2;
wire   [63:0] and_ln304_fu_3637_p2;
wire   [63:0] BCu_11_fu_3607_p3;
wire   [63:0] xor_ln305_fu_3649_p2;
wire   [63:0] and_ln305_fu_3655_p2;
wire   [63:0] xor_ln306_fu_3667_p2;
wire   [63:0] and_ln306_fu_3673_p2;
wire   [63:0] xor_ln307_fu_3685_p2;
wire   [63:0] and_ln307_fu_3691_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 Aso_1_fu_284 = 64'd0;
#0 Asi_1_fu_288 = 64'd0;
#0 Ase_1_fu_292 = 64'd0;
#0 Asa_1_fu_296 = 64'd0;
#0 Amu_1_fu_300 = 64'd0;
#0 Amo_1_fu_304 = 64'd0;
#0 Ami_1_fu_308 = 64'd0;
#0 Ame_1_fu_312 = 64'd0;
#0 Ama_1_fu_316 = 64'd0;
#0 Aku_1_fu_320 = 64'd0;
#0 Ako_1_fu_324 = 64'd0;
#0 Aki_1_fu_328 = 64'd0;
#0 Ake_1_fu_332 = 64'd0;
#0 Aka_1_fu_336 = 64'd0;
#0 Agu_1_fu_340 = 64'd0;
#0 Ago_1_fu_344 = 64'd0;
#0 Agi_1_fu_348 = 64'd0;
#0 Age_1_fu_352 = 64'd0;
#0 Aga_1_fu_356 = 64'd0;
#0 Abu_1_fu_360 = 64'd0;
#0 Abo_1_fu_364 = 64'd0;
#0 Abi_1_fu_368 = 64'd0;
#0 Abe_1_fu_372 = 64'd0;
#0 Aba_1_fu_376 = 64'd0;
#0 Asu_1_fu_380 = 64'd0;
#0 round_fu_384 = 5'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_KeccakF1600_StatePermute_Pipeline_VITIS_LOOP_117_1_KeccakF_RoundConstants_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
KeccakF_RoundConstants_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(KeccakF_RoundConstants_address0),
    .ce0(KeccakF_RoundConstants_ce0_local),
    .q0(KeccakF_RoundConstants_q0),
    .address1(KeccakF_RoundConstants_address1),
    .ce1(KeccakF_RoundConstants_ce1_local),
    .q1(KeccakF_RoundConstants_q1)
);

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Aba_1_fu_376 <= Aba;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Aba_1_fu_376 <= Aba_3_fu_3147_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Abe_1_fu_372 <= Abe;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Abe_1_fu_372 <= Abe_3_fu_3165_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Abi_1_fu_368 <= Abi;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Abi_1_fu_368 <= Abi_3_fu_3183_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Abo_1_fu_364 <= Abo;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Abo_1_fu_364 <= Abo_3_fu_3200_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Abu_1_fu_360 <= Abu;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Abu_1_fu_360 <= Abu_3_fu_3217_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Aga_1_fu_356 <= Aga;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Aga_1_fu_356 <= Aga_3_fu_3265_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Age_1_fu_352 <= Age;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Age_1_fu_352 <= Age_3_fu_3283_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Agi_1_fu_348 <= Agi;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Agi_1_fu_348 <= Agi_3_fu_3301_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ago_1_fu_344 <= Ago;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ago_1_fu_344 <= Ago_3_fu_3319_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Agu_1_fu_340 <= Agu;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Agu_1_fu_340 <= Agu_3_fu_3337_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Aka_1_fu_336 <= Aka;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Aka_1_fu_336 <= Aka_3_fu_3385_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ake_1_fu_332 <= Ake;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ake_1_fu_332 <= Ake_3_fu_3403_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Aki_1_fu_328 <= Aki;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Aki_1_fu_328 <= Aki_3_fu_3421_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ako_1_fu_324 <= Ako;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ako_1_fu_324 <= Ako_3_fu_3439_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Aku_1_fu_320 <= Aku;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Aku_1_fu_320 <= Aku_3_fu_3457_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ama_1_fu_316 <= Ama;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ama_1_fu_316 <= Ama_3_fu_3505_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ame_1_fu_312 <= Ame;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ame_1_fu_312 <= Ame_3_fu_3523_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ami_1_fu_308 <= Ami;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ami_1_fu_308 <= Ami_3_fu_3541_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Amo_1_fu_304 <= Amo;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Amo_1_fu_304 <= Amo_3_fu_3559_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Amu_1_fu_300 <= Amu;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Amu_1_fu_300 <= Amu_3_fu_3577_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Asa_1_fu_296 <= Asa;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Asa_1_fu_296 <= Asa_3_fu_3625_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Ase_1_fu_292 <= Ase;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Ase_1_fu_292 <= Ase_3_fu_3643_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Asi_1_fu_288 <= Asi;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Asi_1_fu_288 <= Asi_3_fu_3661_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Aso_1_fu_284 <= Aso;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Aso_1_fu_284 <= Aso_3_fu_3679_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Asu_1_fu_380 <= Asu;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            Asu_1_fu_380 <= Asu_3_fu_3697_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln117_fu_871_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            round_fu_384 <= add_ln117_fu_905_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            round_fu_384 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Eba_2_reg_4149 <= Eba_2_fu_2623_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        icmp_ln117_reg_4135 <= icmp_ln117_fu_871_p2;
        lshr_ln24_reg_4161 <= {{Ege_1_fu_2629_p2[63:20]}};
        lshr_ln25_reg_4171 <= {{Eki_1_fu_2649_p2[63:21]}};
        lshr_ln26_reg_4181 <= {{Emo_1_fu_2669_p2[63:43]}};
        lshr_ln27_reg_4191 <= {{Esu_1_fu_2689_p2[63:50]}};
        lshr_ln28_reg_4206 <= {{Ebo_1_fu_2709_p2[63:36]}};
        lshr_ln29_reg_4216 <= {{Egu_1_fu_2729_p2[63:44]}};
        lshr_ln30_reg_4226 <= {{Eka_1_fu_2749_p2[63:61]}};
        lshr_ln31_reg_4236 <= {{Eme_1_fu_2769_p2[63:19]}};
        lshr_ln32_reg_4246 <= {{Esi_1_fu_2789_p2[63:3]}};
        lshr_ln33_reg_4266 <= {{Egi_1_fu_2827_p2[63:58]}};
        lshr_ln34_reg_4276 <= {{Eko_1_fu_2847_p2[63:39]}};
        lshr_ln35_reg_4286 <= {{Emu_1_fu_2867_p2[63:56]}};
        lshr_ln36_reg_4296 <= {{Esa_1_fu_2887_p2[63:46]}};
        lshr_ln37_reg_4306 <= {{Ebu_1_fu_2907_p2[63:37]}};
        lshr_ln38_reg_4316 <= {{Ega_1_fu_2927_p2[63:28]}};
        lshr_ln39_reg_4326 <= {{Eke_1_fu_2947_p2[63:54]}};
        lshr_ln40_reg_4336 <= {{Emi_1_fu_2967_p2[63:49]}};
        lshr_ln41_reg_4346 <= {{Eso_1_fu_2987_p2[63:8]}};
        lshr_ln42_reg_4356 <= {{Ebi_1_fu_3007_p2[63:2]}};
        lshr_ln43_reg_4366 <= {{Ego_1_fu_3027_p2[63:9]}};
        lshr_ln44_reg_4376 <= {{Eku_1_fu_3047_p2[63:25]}};
        lshr_ln45_reg_4386 <= {{Ema_1_fu_3067_p2[63:23]}};
        lshr_ln46_reg_4396 <= {{Ese_1_fu_3087_p2[63:62]}};
        tmp_308_reg_4256 <= Ebe_1_fu_2809_p2[32'd63];
        trunc_ln231_reg_4156 <= trunc_ln231_fu_2635_p1;
        trunc_ln233_reg_4166 <= trunc_ln233_fu_2655_p1;
        trunc_ln235_reg_4176 <= trunc_ln235_fu_2675_p1;
        trunc_ln237_reg_4186 <= trunc_ln237_fu_2695_p1;
        trunc_ln246_reg_4201 <= trunc_ln246_fu_2715_p1;
        trunc_ln248_reg_4211 <= trunc_ln248_fu_2735_p1;
        trunc_ln250_reg_4221 <= trunc_ln250_fu_2755_p1;
        trunc_ln252_reg_4231 <= trunc_ln252_fu_2775_p1;
        trunc_ln254_reg_4241 <= trunc_ln254_fu_2795_p1;
        trunc_ln262_reg_4251 <= trunc_ln262_fu_2815_p1;
        trunc_ln264_reg_4261 <= trunc_ln264_fu_2833_p1;
        trunc_ln266_reg_4271 <= trunc_ln266_fu_2853_p1;
        trunc_ln268_reg_4281 <= trunc_ln268_fu_2873_p1;
        trunc_ln270_reg_4291 <= trunc_ln270_fu_2893_p1;
        trunc_ln278_reg_4301 <= trunc_ln278_fu_2913_p1;
        trunc_ln280_reg_4311 <= trunc_ln280_fu_2933_p1;
        trunc_ln282_reg_4321 <= trunc_ln282_fu_2953_p1;
        trunc_ln284_reg_4331 <= trunc_ln284_fu_2973_p1;
        trunc_ln286_reg_4341 <= trunc_ln286_fu_2993_p1;
        trunc_ln294_reg_4351 <= trunc_ln294_fu_3013_p1;
        trunc_ln296_reg_4361 <= trunc_ln296_fu_3033_p1;
        trunc_ln298_reg_4371 <= trunc_ln298_fu_3053_p1;
        trunc_ln300_reg_4381 <= trunc_ln300_fu_3073_p1;
        trunc_ln302_reg_4391 <= trunc_ln302_fu_3093_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        KeccakF_RoundConstants_load_1_reg_4196 <= KeccakF_RoundConstants_q0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aba_1_out_ap_vld = 1'b1;
    end else begin
        Aba_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Abe_1_out_ap_vld = 1'b1;
    end else begin
        Abe_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Abi_1_out_ap_vld = 1'b1;
    end else begin
        Abi_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Abo_1_out_ap_vld = 1'b1;
    end else begin
        Abo_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Abu_1_out_ap_vld = 1'b1;
    end else begin
        Abu_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aga_1_out_ap_vld = 1'b1;
    end else begin
        Aga_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Age_1_out_ap_vld = 1'b1;
    end else begin
        Age_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Agi_1_out_ap_vld = 1'b1;
    end else begin
        Agi_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ago_1_out_ap_vld = 1'b1;
    end else begin
        Ago_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Agu_1_out_ap_vld = 1'b1;
    end else begin
        Agu_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aka_1_out_ap_vld = 1'b1;
    end else begin
        Aka_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ake_1_out_ap_vld = 1'b1;
    end else begin
        Ake_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aki_1_out_ap_vld = 1'b1;
    end else begin
        Aki_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ako_1_out_ap_vld = 1'b1;
    end else begin
        Ako_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aku_1_out_ap_vld = 1'b1;
    end else begin
        Aku_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ama_1_out_ap_vld = 1'b1;
    end else begin
        Ama_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ame_1_out_ap_vld = 1'b1;
    end else begin
        Ame_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ami_1_out_ap_vld = 1'b1;
    end else begin
        Ami_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Amo_1_out_ap_vld = 1'b1;
    end else begin
        Amo_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Amu_1_out_ap_vld = 1'b1;
    end else begin
        Amu_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Asa_1_out_ap_vld = 1'b1;
    end else begin
        Asa_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Ase_1_out_ap_vld = 1'b1;
    end else begin
        Ase_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Asi_1_out_ap_vld = 1'b1;
    end else begin
        Asi_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Aso_1_out_ap_vld = 1'b1;
    end else begin
        Aso_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln117_reg_4135 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Asu_1_out_ap_vld = 1'b1;
    end else begin
        Asu_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        KeccakF_RoundConstants_ce0_local = 1'b1;
    end else begin
        KeccakF_RoundConstants_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        KeccakF_RoundConstants_ce1_local = 1'b1;
    end else begin
        KeccakF_RoundConstants_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln117_fu_871_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Aba_1_load = Aba_3_fu_3147_p2;
    end else begin
        ap_sig_allocacmp_Aba_1_load = Aba_1_fu_376;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Abe_1_load = Abe_3_fu_3165_p2;
    end else begin
        ap_sig_allocacmp_Abe_1_load = Abe_1_fu_372;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Abi_1_load = Abi_3_fu_3183_p2;
    end else begin
        ap_sig_allocacmp_Abi_1_load = Abi_1_fu_368;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Abo_1_load = Abo_3_fu_3200_p2;
    end else begin
        ap_sig_allocacmp_Abo_1_load = Abo_1_fu_364;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Abu_1_load = Abu_3_fu_3217_p2;
    end else begin
        ap_sig_allocacmp_Abu_1_load = Abu_1_fu_360;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Aga_1_load = Aga_3_fu_3265_p2;
    end else begin
        ap_sig_allocacmp_Aga_1_load = Aga_1_fu_356;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Age_1_load = Age_3_fu_3283_p2;
    end else begin
        ap_sig_allocacmp_Age_1_load = Age_1_fu_352;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Agi_1_load = Agi_3_fu_3301_p2;
    end else begin
        ap_sig_allocacmp_Agi_1_load = Agi_1_fu_348;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ago_1_load = Ago_3_fu_3319_p2;
    end else begin
        ap_sig_allocacmp_Ago_1_load = Ago_1_fu_344;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Agu_1_load = Agu_3_fu_3337_p2;
    end else begin
        ap_sig_allocacmp_Agu_1_load = Agu_1_fu_340;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Aka_1_load = Aka_3_fu_3385_p2;
    end else begin
        ap_sig_allocacmp_Aka_1_load = Aka_1_fu_336;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ake_1_load = Ake_3_fu_3403_p2;
    end else begin
        ap_sig_allocacmp_Ake_1_load = Ake_1_fu_332;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Aki_1_load = Aki_3_fu_3421_p2;
    end else begin
        ap_sig_allocacmp_Aki_1_load = Aki_1_fu_328;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ako_1_load = Ako_3_fu_3439_p2;
    end else begin
        ap_sig_allocacmp_Ako_1_load = Ako_1_fu_324;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Aku_1_load = Aku_3_fu_3457_p2;
    end else begin
        ap_sig_allocacmp_Aku_1_load = Aku_1_fu_320;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ama_1_load = Ama_3_fu_3505_p2;
    end else begin
        ap_sig_allocacmp_Ama_1_load = Ama_1_fu_316;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ame_1_load = Ame_3_fu_3523_p2;
    end else begin
        ap_sig_allocacmp_Ame_1_load = Ame_1_fu_312;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ami_1_load = Ami_3_fu_3541_p2;
    end else begin
        ap_sig_allocacmp_Ami_1_load = Ami_1_fu_308;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Amo_1_load = Amo_3_fu_3559_p2;
    end else begin
        ap_sig_allocacmp_Amo_1_load = Amo_1_fu_304;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Amu_1_load = Amu_3_fu_3577_p2;
    end else begin
        ap_sig_allocacmp_Amu_1_load = Amu_1_fu_300;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Asa_1_load = Asa_3_fu_3625_p2;
    end else begin
        ap_sig_allocacmp_Asa_1_load = Asa_1_fu_296;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Ase_1_load = Ase_3_fu_3643_p2;
    end else begin
        ap_sig_allocacmp_Ase_1_load = Ase_1_fu_292;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Asi_1_load = Asi_3_fu_3661_p2;
    end else begin
        ap_sig_allocacmp_Asi_1_load = Asi_1_fu_288;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Aso_1_load = Aso_3_fu_3679_p2;
    end else begin
        ap_sig_allocacmp_Aso_1_load = Aso_1_fu_284;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_Asu_1_load = Asu_3_fu_3697_p2;
    end else begin
        ap_sig_allocacmp_Asu_1_load = Asu_1_fu_380;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_round_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_round_1 = round_fu_384;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Aba_1_out = Aba_1_fu_376;

assign Aba_3_fu_3147_p2 = (xor_ln239_1_fu_3143_p2 ^ and_ln239_fu_3137_p2);

assign Aba_4_fu_1241_p2 = (ap_sig_allocacmp_Aba_1_load ^ Da_fu_1131_p2);

assign Abe_1_out = Abe_1_fu_372;

assign Abe_2_fu_1685_p2 = (ap_sig_allocacmp_Abe_1_load ^ De_fu_1157_p2);

assign Abe_3_fu_3165_p2 = (and_ln240_fu_3159_p2 ^ BCe_7_fu_3107_p3);

assign Abi_1_out = Abi_1_fu_368;

assign Abi_2_fu_2143_p2 = (ap_sig_allocacmp_Abi_1_load ^ Di_fu_1183_p2);

assign Abi_3_fu_3183_p2 = (and_ln241_fu_3177_p2 ^ BCi_7_fu_3113_p3);

assign Abo_1_out = Abo_1_fu_364;

assign Abo_2_fu_1455_p2 = (ap_sig_allocacmp_Abo_1_load ^ Do_fu_1209_p2);

assign Abo_3_fu_3200_p2 = (and_ln242_fu_3195_p2 ^ BCo_7_fu_3119_p3);

assign Abu_1_out = Abu_1_fu_360;

assign Abu_2_fu_1913_p2 = (ap_sig_allocacmp_Abu_1_load ^ Du_fu_1235_p2);

assign Abu_3_fu_3217_p2 = (and_ln243_fu_3211_p2 ^ BCu_7_fu_3125_p3);

assign Aga_1_out = Aga_1_fu_356;

assign Aga_2_fu_1941_p2 = (ap_sig_allocacmp_Aga_1_load ^ Da_fu_1131_p2);

assign Aga_3_fu_3265_p2 = (and_ln255_fu_3259_p2 ^ BCa_8_fu_3223_p3);

assign Age_1_out = Age_1_fu_352;

assign Age_2_fu_1247_p2 = (ap_sig_allocacmp_Age_1_load ^ De_fu_1157_p2);

assign Age_3_fu_3283_p2 = (and_ln256_fu_3277_p2 ^ BCe_8_fu_3229_p3);

assign Agi_1_out = Agi_1_fu_348;

assign Agi_2_fu_1711_p2 = (ap_sig_allocacmp_Agi_1_load ^ Di_fu_1183_p2);

assign Agi_3_fu_3301_p2 = (and_ln257_fu_3295_p2 ^ BCi_8_fu_3235_p3);

assign Ago_1_out = Ago_1_fu_344;

assign Ago_2_fu_2171_p2 = (ap_sig_allocacmp_Ago_1_load ^ Do_fu_1209_p2);

assign Ago_3_fu_3319_p2 = (and_ln258_fu_3313_p2 ^ BCo_8_fu_3241_p3);

assign Agu_1_out = Agu_1_fu_340;

assign Agu_2_fu_1483_p2 = (ap_sig_allocacmp_Agu_1_load ^ Du_fu_1235_p2);

assign Agu_3_fu_3337_p2 = (and_ln259_fu_3331_p2 ^ BCu_8_fu_3247_p3);

assign Aka_1_out = Aka_1_fu_336;

assign Aka_2_fu_1511_p2 = (ap_sig_allocacmp_Aka_1_load ^ Da_fu_1131_p2);

assign Aka_3_fu_3385_p2 = (and_ln271_fu_3379_p2 ^ BCa_9_fu_3343_p3);

assign Ake_1_out = Ake_1_fu_332;

assign Ake_2_fu_1969_p2 = (ap_sig_allocacmp_Ake_1_load ^ De_fu_1157_p2);

assign Ake_3_fu_3403_p2 = (and_ln272_fu_3397_p2 ^ BCe_9_fu_3349_p3);

assign Aki_1_out = Aki_1_fu_328;

assign Aki_2_fu_1275_p2 = (ap_sig_allocacmp_Aki_1_load ^ Di_fu_1183_p2);

assign Aki_3_fu_3421_p2 = (and_ln273_fu_3415_p2 ^ BCi_9_fu_3355_p3);

assign Ako_1_out = Ako_1_fu_324;

assign Ako_2_fu_1739_p2 = (ap_sig_allocacmp_Ako_1_load ^ Do_fu_1209_p2);

assign Ako_3_fu_3439_p2 = (and_ln274_fu_3433_p2 ^ BCo_9_fu_3361_p3);

assign Aku_1_out = Aku_1_fu_320;

assign Aku_2_fu_2199_p2 = (ap_sig_allocacmp_Aku_1_load ^ Du_fu_1235_p2);

assign Aku_3_fu_3457_p2 = (and_ln275_fu_3451_p2 ^ BCu_9_fu_3367_p3);

assign Ama_1_out = Ama_1_fu_316;

assign Ama_2_fu_2227_p2 = (ap_sig_allocacmp_Ama_1_load ^ Da_fu_1131_p2);

assign Ama_3_fu_3505_p2 = (and_ln287_fu_3499_p2 ^ BCa_10_fu_3463_p3);

assign Ame_1_out = Ame_1_fu_312;

assign Ame_2_fu_1539_p2 = (ap_sig_allocacmp_Ame_1_load ^ De_fu_1157_p2);

assign Ame_3_fu_3523_p2 = (and_ln288_fu_3517_p2 ^ BCe_10_fu_3469_p3);

assign Ami_1_out = Ami_1_fu_308;

assign Ami_2_fu_1997_p2 = (ap_sig_allocacmp_Ami_1_load ^ Di_fu_1183_p2);

assign Ami_3_fu_3541_p2 = (and_ln289_fu_3535_p2 ^ BCi_10_fu_3475_p3);

assign Amo_1_out = Amo_1_fu_304;

assign Amo_2_fu_1303_p2 = (ap_sig_allocacmp_Amo_1_load ^ Do_fu_1209_p2);

assign Amo_3_fu_3559_p2 = (and_ln290_fu_3553_p2 ^ BCo_10_fu_3481_p3);

assign Amu_1_out = Amu_1_fu_300;

assign Amu_2_fu_1767_p2 = (ap_sig_allocacmp_Amu_1_load ^ Du_fu_1235_p2);

assign Amu_3_fu_3577_p2 = (and_ln291_fu_3571_p2 ^ BCu_10_fu_3487_p3);

assign Asa_1_out = Asa_1_fu_296;

assign Asa_2_fu_1795_p2 = (ap_sig_allocacmp_Asa_1_load ^ Da_fu_1131_p2);

assign Asa_3_fu_3625_p2 = (and_ln303_fu_3619_p2 ^ BCa_11_fu_3583_p3);

assign Ase_1_out = Ase_1_fu_292;

assign Ase_2_fu_2255_p2 = (ap_sig_allocacmp_Ase_1_load ^ De_fu_1157_p2);

assign Ase_3_fu_3643_p2 = (and_ln304_fu_3637_p2 ^ BCe_11_fu_3589_p3);

assign Asi_1_out = Asi_1_fu_288;

assign Asi_2_fu_1567_p2 = (ap_sig_allocacmp_Asi_1_load ^ Di_fu_1183_p2);

assign Asi_3_fu_3661_p2 = (and_ln305_fu_3655_p2 ^ BCi_11_fu_3595_p3);

assign Aso_1_out = Aso_1_fu_284;

assign Aso_2_fu_2025_p2 = (ap_sig_allocacmp_Aso_1_load ^ Do_fu_1209_p2);

assign Aso_3_fu_3679_p2 = (and_ln306_fu_3673_p2 ^ BCo_11_fu_3601_p3);

assign Asu_1_out = Asu_1_fu_380;

assign Asu_2_fu_1331_p2 = (ap_sig_allocacmp_Asu_1_load ^ Du_fu_1235_p2);

assign Asu_3_fu_3697_p2 = (and_ln307_fu_3691_p2 ^ BCu_11_fu_3607_p3);

assign BCa_10_fu_3463_p3 = {{trunc_ln278_reg_4301}, {lshr_ln37_reg_4306}};

assign BCa_11_fu_3583_p3 = {{trunc_ln294_reg_4351}, {lshr_ln42_reg_4356}};

assign BCa_2_fu_1475_p3 = {{trunc_ln151_fu_1461_p1}, {lshr_ln5_fu_1465_p4}};

assign BCa_3_fu_1703_p3 = {{trunc_ln167_fu_1691_p1}, {tmp_302_fu_1695_p3}};

assign BCa_4_fu_1933_p3 = {{trunc_ln183_fu_1919_p1}, {lshr_ln14_fu_1923_p4}};

assign BCa_5_fu_2163_p3 = {{trunc_ln199_fu_2149_p1}, {lshr_ln19_fu_2153_p4}};

assign BCa_6_fu_2391_p2 = (xor_ln215_fu_2373_p2 ^ xor_ln215_2_fu_2385_p2);

assign BCa_8_fu_3223_p3 = {{trunc_ln246_reg_4201}, {lshr_ln28_reg_4206}};

assign BCa_9_fu_3343_p3 = {{trunc_ln262_reg_4251}, {tmp_308_reg_4256}};

assign BCa_fu_1009_p2 = (xor_ln120_2_fu_997_p2 ^ xor_ln120_1_fu_1003_p2);

assign BCe_10_fu_3469_p3 = {{trunc_ln280_reg_4311}, {lshr_ln38_reg_4316}};

assign BCe_11_fu_3589_p3 = {{trunc_ln296_reg_4361}, {lshr_ln43_reg_4366}};

assign BCe_1_fu_1267_p3 = {{trunc_ln136_fu_1253_p1}, {lshr_ln_fu_1257_p4}};

assign BCe_2_fu_1503_p3 = {{trunc_ln153_fu_1489_p1}, {lshr_ln6_fu_1493_p4}};

assign BCe_3_fu_1731_p3 = {{trunc_ln169_fu_1717_p1}, {lshr_ln10_fu_1721_p4}};

assign BCe_4_fu_1961_p3 = {{trunc_ln185_fu_1947_p1}, {lshr_ln15_fu_1951_p4}};

assign BCe_5_fu_2191_p3 = {{trunc_ln201_fu_2177_p1}, {lshr_ln20_fu_2181_p4}};

assign BCe_6_fu_2415_p2 = (xor_ln216_2_fu_2409_p2 ^ xor_ln216_1_fu_2397_p2);

assign BCe_7_fu_3107_p3 = {{trunc_ln231_reg_4156}, {lshr_ln24_reg_4161}};

assign BCe_8_fu_3229_p3 = {{trunc_ln248_reg_4211}, {lshr_ln29_reg_4216}};

assign BCe_9_fu_3349_p3 = {{trunc_ln264_reg_4261}, {lshr_ln33_reg_4266}};

assign BCe_fu_1033_p2 = (xor_ln121_2_fu_1021_p2 ^ xor_ln121_1_fu_1027_p2);

assign BCi_10_fu_3475_p3 = {{trunc_ln282_reg_4321}, {lshr_ln39_reg_4326}};

assign BCi_11_fu_3595_p3 = {{trunc_ln298_reg_4371}, {lshr_ln44_reg_4376}};

assign BCi_1_fu_1295_p3 = {{trunc_ln138_fu_1281_p1}, {lshr_ln2_fu_1285_p4}};

assign BCi_2_fu_1531_p3 = {{trunc_ln155_fu_1517_p1}, {lshr_ln7_fu_1521_p4}};

assign BCi_3_fu_1759_p3 = {{trunc_ln171_fu_1745_p1}, {lshr_ln11_fu_1749_p4}};

assign BCi_4_fu_1989_p3 = {{trunc_ln187_fu_1975_p1}, {lshr_ln16_fu_1979_p4}};

assign BCi_5_fu_2219_p3 = {{trunc_ln203_fu_2205_p1}, {lshr_ln21_fu_2209_p4}};

assign BCi_6_fu_2439_p2 = (xor_ln217_2_fu_2433_p2 ^ xor_ln217_1_fu_2421_p2);

assign BCi_7_fu_3113_p3 = {{trunc_ln233_reg_4166}, {lshr_ln25_reg_4171}};

assign BCi_8_fu_3235_p3 = {{trunc_ln250_reg_4221}, {lshr_ln30_reg_4226}};

assign BCi_9_fu_3355_p3 = {{trunc_ln266_reg_4271}, {lshr_ln34_reg_4276}};

assign BCi_fu_1057_p2 = (xor_ln122_2_fu_1051_p2 ^ ap_sig_allocacmp_Abi_1_load);

assign BCo_10_fu_3481_p3 = {{trunc_ln284_reg_4331}, {lshr_ln40_reg_4336}};

assign BCo_11_fu_3601_p3 = {{trunc_ln300_reg_4381}, {lshr_ln45_reg_4386}};

assign BCo_1_fu_1323_p3 = {{trunc_ln140_fu_1309_p1}, {lshr_ln3_fu_1313_p4}};

assign BCo_2_fu_1559_p3 = {{trunc_ln157_fu_1545_p1}, {lshr_ln8_fu_1549_p4}};

assign BCo_3_fu_1787_p3 = {{trunc_ln173_fu_1773_p1}, {lshr_ln12_fu_1777_p4}};

assign BCo_4_fu_2017_p3 = {{trunc_ln189_fu_2003_p1}, {lshr_ln17_fu_2007_p4}};

assign BCo_5_fu_2247_p3 = {{trunc_ln205_fu_2233_p1}, {lshr_ln22_fu_2237_p4}};

assign BCo_6_fu_2463_p2 = (xor_ln218_fu_2445_p2 ^ xor_ln218_2_fu_2457_p2);

assign BCo_7_fu_3119_p3 = {{trunc_ln235_reg_4176}, {lshr_ln26_reg_4181}};

assign BCo_8_fu_3241_p3 = {{trunc_ln252_reg_4231}, {lshr_ln31_reg_4236}};

assign BCo_9_fu_3361_p3 = {{trunc_ln268_reg_4281}, {lshr_ln35_reg_4286}};

assign BCo_fu_1081_p2 = (xor_ln123_2_fu_1075_p2 ^ ap_sig_allocacmp_Abo_1_load);

assign BCu_10_fu_3487_p3 = {{trunc_ln286_reg_4341}, {lshr_ln41_reg_4346}};

assign BCu_11_fu_3607_p3 = {{trunc_ln302_reg_4391}, {lshr_ln46_reg_4396}};

assign BCu_1_fu_1351_p3 = {{trunc_ln142_fu_1337_p1}, {lshr_ln4_fu_1341_p4}};

assign BCu_2_fu_1587_p3 = {{trunc_ln159_fu_1573_p1}, {lshr_ln9_fu_1577_p4}};

assign BCu_3_fu_1815_p3 = {{trunc_ln175_fu_1801_p1}, {lshr_ln13_fu_1805_p4}};

assign BCu_4_fu_2045_p3 = {{trunc_ln191_fu_2031_p1}, {lshr_ln18_fu_2035_p4}};

assign BCu_5_fu_2275_p3 = {{trunc_ln207_fu_2261_p1}, {lshr_ln23_fu_2265_p4}};

assign BCu_6_fu_2487_p2 = (xor_ln219_fu_2469_p2 ^ xor_ln219_2_fu_2481_p2);

assign BCu_7_fu_3125_p3 = {{trunc_ln237_reg_4186}, {lshr_ln27_reg_4191}};

assign BCu_8_fu_3247_p3 = {{trunc_ln254_reg_4241}, {lshr_ln32_reg_4246}};

assign BCu_9_fu_3367_p3 = {{trunc_ln270_reg_4291}, {lshr_ln36_reg_4296}};

assign BCu_fu_1105_p2 = (xor_ln124_2_fu_1093_p2 ^ xor_ln124_1_fu_1099_p2);

assign Da_1_fu_2513_p2 = (or_ln63_fu_2505_p3 ^ BCu_6_fu_2487_p2);

assign Da_fu_1131_p2 = (or_ln_fu_1123_p3 ^ BCu_fu_1105_p2);

assign De_1_fu_2539_p2 = (or_ln64_fu_2531_p3 ^ BCa_6_fu_2391_p2);

assign De_fu_1157_p2 = (or_ln59_fu_1149_p3 ^ BCa_fu_1009_p2);

assign Di_1_fu_2565_p2 = (or_ln65_fu_2557_p3 ^ BCe_6_fu_2415_p2);

assign Di_fu_1183_p2 = (or_ln60_fu_1175_p3 ^ BCe_fu_1033_p2);

assign Do_1_fu_2591_p2 = (or_ln66_fu_2583_p3 ^ BCi_6_fu_2439_p2);

assign Do_fu_1209_p2 = (or_ln61_fu_1201_p3 ^ BCi_fu_1057_p2);

assign Du_1_fu_2617_p2 = (or_ln67_fu_2609_p3 ^ BCo_6_fu_2463_p2);

assign Du_fu_1235_p2 = (or_ln62_fu_1227_p3 ^ BCo_fu_1081_p2);

assign Eba_2_fu_2623_p2 = (Eba_fu_1377_p2 ^ Da_1_fu_2513_p2);

assign Eba_fu_1377_p2 = (xor_ln144_1_fu_1371_p2 ^ and_ln144_fu_1365_p2);

assign Ebe_1_fu_2809_p2 = (Ebe_fu_1395_p2 ^ De_1_fu_2539_p2);

assign Ebe_fu_1395_p2 = (and_ln145_fu_1389_p2 ^ BCe_1_fu_1267_p3);

assign Ebi_1_fu_3007_p2 = (Ebi_fu_1413_p2 ^ Di_1_fu_2565_p2);

assign Ebi_fu_1413_p2 = (and_ln146_fu_1407_p2 ^ BCi_1_fu_1295_p3);

assign Ebo_1_fu_2709_p2 = (Ebo_fu_1431_p2 ^ Do_1_fu_2591_p2);

assign Ebo_fu_1431_p2 = (and_ln147_fu_1425_p2 ^ BCo_1_fu_1323_p3);

assign Ebu_1_fu_2907_p2 = (Ebu_fu_1449_p2 ^ Du_1_fu_2617_p2);

assign Ebu_fu_1449_p2 = (and_ln148_fu_1443_p2 ^ BCu_1_fu_1351_p3);

assign Ega_1_fu_2927_p2 = (Ega_fu_1607_p2 ^ Da_1_fu_2513_p2);

assign Ega_fu_1607_p2 = (and_ln160_fu_1601_p2 ^ BCa_2_fu_1475_p3);

assign Ege_1_fu_2629_p2 = (Ege_fu_1625_p2 ^ De_1_fu_2539_p2);

assign Ege_fu_1625_p2 = (and_ln161_fu_1619_p2 ^ BCe_2_fu_1503_p3);

assign Egi_1_fu_2827_p2 = (Egi_fu_1643_p2 ^ Di_1_fu_2565_p2);

assign Egi_fu_1643_p2 = (and_ln162_fu_1637_p2 ^ BCi_2_fu_1531_p3);

assign Ego_1_fu_3027_p2 = (Ego_fu_1661_p2 ^ Do_1_fu_2591_p2);

assign Ego_fu_1661_p2 = (and_ln163_fu_1655_p2 ^ BCo_2_fu_1559_p3);

assign Egu_1_fu_2729_p2 = (Egu_fu_1679_p2 ^ Du_1_fu_2617_p2);

assign Egu_fu_1679_p2 = (and_ln164_fu_1673_p2 ^ BCu_2_fu_1587_p3);

assign Eka_1_fu_2749_p2 = (Eka_fu_1835_p2 ^ Da_1_fu_2513_p2);

assign Eka_fu_1835_p2 = (and_ln176_fu_1829_p2 ^ BCa_3_fu_1703_p3);

assign Eke_1_fu_2947_p2 = (Eke_fu_1853_p2 ^ De_1_fu_2539_p2);

assign Eke_fu_1853_p2 = (and_ln177_fu_1847_p2 ^ BCe_3_fu_1731_p3);

assign Eki_1_fu_2649_p2 = (Eki_fu_1871_p2 ^ Di_1_fu_2565_p2);

assign Eki_fu_1871_p2 = (and_ln178_fu_1865_p2 ^ BCi_3_fu_1759_p3);

assign Eko_1_fu_2847_p2 = (Eko_fu_1889_p2 ^ Do_1_fu_2591_p2);

assign Eko_fu_1889_p2 = (and_ln179_fu_1883_p2 ^ BCo_3_fu_1787_p3);

assign Eku_1_fu_3047_p2 = (Eku_fu_1907_p2 ^ Du_1_fu_2617_p2);

assign Eku_fu_1907_p2 = (and_ln180_fu_1901_p2 ^ BCu_3_fu_1815_p3);

assign Ema_1_fu_3067_p2 = (Ema_fu_2065_p2 ^ Da_1_fu_2513_p2);

assign Ema_fu_2065_p2 = (and_ln192_fu_2059_p2 ^ BCa_4_fu_1933_p3);

assign Eme_1_fu_2769_p2 = (Eme_fu_2083_p2 ^ De_1_fu_2539_p2);

assign Eme_fu_2083_p2 = (and_ln193_fu_2077_p2 ^ BCe_4_fu_1961_p3);

assign Emi_1_fu_2967_p2 = (Emi_fu_2101_p2 ^ Di_1_fu_2565_p2);

assign Emi_fu_2101_p2 = (and_ln194_fu_2095_p2 ^ BCi_4_fu_1989_p3);

assign Emo_1_fu_2669_p2 = (Emo_fu_2119_p2 ^ Do_1_fu_2591_p2);

assign Emo_fu_2119_p2 = (and_ln195_fu_2113_p2 ^ BCo_4_fu_2017_p3);

assign Emu_1_fu_2867_p2 = (Emu_fu_2137_p2 ^ Du_1_fu_2617_p2);

assign Emu_fu_2137_p2 = (and_ln196_fu_2131_p2 ^ BCu_4_fu_2045_p3);

assign Esa_1_fu_2887_p2 = (Esa_fu_2295_p2 ^ Da_1_fu_2513_p2);

assign Esa_fu_2295_p2 = (and_ln208_fu_2289_p2 ^ BCa_5_fu_2163_p3);

assign Ese_1_fu_3087_p2 = (Ese_fu_2313_p2 ^ De_1_fu_2539_p2);

assign Ese_fu_2313_p2 = (and_ln209_fu_2307_p2 ^ BCe_5_fu_2191_p3);

assign Esi_1_fu_2789_p2 = (Esi_fu_2331_p2 ^ Di_1_fu_2565_p2);

assign Esi_fu_2331_p2 = (and_ln210_fu_2325_p2 ^ BCi_5_fu_2219_p3);

assign Eso_1_fu_2987_p2 = (Eso_fu_2349_p2 ^ Do_1_fu_2591_p2);

assign Eso_fu_2349_p2 = (and_ln211_fu_2343_p2 ^ BCo_5_fu_2247_p3);

assign Esu_1_fu_2689_p2 = (Esu_fu_2367_p2 ^ Du_1_fu_2617_p2);

assign Esu_fu_2367_p2 = (and_ln212_fu_2361_p2 ^ BCu_5_fu_2275_p3);

assign KeccakF_RoundConstants_address0 = zext_ln239_fu_900_p1;

assign KeccakF_RoundConstants_address1 = zext_ln144_fu_877_p1;

assign add_ln117_fu_905_p2 = (ap_sig_allocacmp_round_1 + 5'd2);

assign and_ln144_fu_1365_p2 = (xor_ln144_fu_1359_p2 & BCi_1_fu_1295_p3);

assign and_ln145_fu_1389_p2 = (xor_ln145_fu_1383_p2 & BCo_1_fu_1323_p3);

assign and_ln146_fu_1407_p2 = (xor_ln146_fu_1401_p2 & BCu_1_fu_1351_p3);

assign and_ln147_fu_1425_p2 = (xor_ln147_fu_1419_p2 & Aba_4_fu_1241_p2);

assign and_ln148_fu_1443_p2 = (xor_ln148_fu_1437_p2 & BCe_1_fu_1267_p3);

assign and_ln160_fu_1601_p2 = (xor_ln160_fu_1595_p2 & BCi_2_fu_1531_p3);

assign and_ln161_fu_1619_p2 = (xor_ln161_fu_1613_p2 & BCo_2_fu_1559_p3);

assign and_ln162_fu_1637_p2 = (xor_ln162_fu_1631_p2 & BCu_2_fu_1587_p3);

assign and_ln163_fu_1655_p2 = (xor_ln163_fu_1649_p2 & BCa_2_fu_1475_p3);

assign and_ln164_fu_1673_p2 = (xor_ln164_fu_1667_p2 & BCe_2_fu_1503_p3);

assign and_ln176_fu_1829_p2 = (xor_ln176_fu_1823_p2 & BCi_3_fu_1759_p3);

assign and_ln177_fu_1847_p2 = (xor_ln177_fu_1841_p2 & BCo_3_fu_1787_p3);

assign and_ln178_fu_1865_p2 = (xor_ln178_fu_1859_p2 & BCu_3_fu_1815_p3);

assign and_ln179_fu_1883_p2 = (xor_ln179_fu_1877_p2 & BCa_3_fu_1703_p3);

assign and_ln180_fu_1901_p2 = (xor_ln180_fu_1895_p2 & BCe_3_fu_1731_p3);

assign and_ln192_fu_2059_p2 = (xor_ln192_fu_2053_p2 & BCi_4_fu_1989_p3);

assign and_ln193_fu_2077_p2 = (xor_ln193_fu_2071_p2 & BCo_4_fu_2017_p3);

assign and_ln194_fu_2095_p2 = (xor_ln194_fu_2089_p2 & BCu_4_fu_2045_p3);

assign and_ln195_fu_2113_p2 = (xor_ln195_fu_2107_p2 & BCa_4_fu_1933_p3);

assign and_ln196_fu_2131_p2 = (xor_ln196_fu_2125_p2 & BCe_4_fu_1961_p3);

assign and_ln208_fu_2289_p2 = (xor_ln208_fu_2283_p2 & BCi_5_fu_2219_p3);

assign and_ln209_fu_2307_p2 = (xor_ln209_fu_2301_p2 & BCo_5_fu_2247_p3);

assign and_ln210_fu_2325_p2 = (xor_ln210_fu_2319_p2 & BCu_5_fu_2275_p3);

assign and_ln211_fu_2343_p2 = (xor_ln211_fu_2337_p2 & BCa_5_fu_2163_p3);

assign and_ln212_fu_2361_p2 = (xor_ln212_fu_2355_p2 & BCe_5_fu_2191_p3);

assign and_ln239_fu_3137_p2 = (xor_ln239_fu_3131_p2 & BCi_7_fu_3113_p3);

assign and_ln240_fu_3159_p2 = (xor_ln240_fu_3153_p2 & BCo_7_fu_3119_p3);

assign and_ln241_fu_3177_p2 = (xor_ln241_fu_3171_p2 & BCu_7_fu_3125_p3);

assign and_ln242_fu_3195_p2 = (xor_ln242_fu_3189_p2 & Eba_2_reg_4149);

assign and_ln243_fu_3211_p2 = (xor_ln243_fu_3206_p2 & BCe_7_fu_3107_p3);

assign and_ln255_fu_3259_p2 = (xor_ln255_fu_3253_p2 & BCi_8_fu_3235_p3);

assign and_ln256_fu_3277_p2 = (xor_ln256_fu_3271_p2 & BCo_8_fu_3241_p3);

assign and_ln257_fu_3295_p2 = (xor_ln257_fu_3289_p2 & BCu_8_fu_3247_p3);

assign and_ln258_fu_3313_p2 = (xor_ln258_fu_3307_p2 & BCa_8_fu_3223_p3);

assign and_ln259_fu_3331_p2 = (xor_ln259_fu_3325_p2 & BCe_8_fu_3229_p3);

assign and_ln271_fu_3379_p2 = (xor_ln271_fu_3373_p2 & BCi_9_fu_3355_p3);

assign and_ln272_fu_3397_p2 = (xor_ln272_fu_3391_p2 & BCo_9_fu_3361_p3);

assign and_ln273_fu_3415_p2 = (xor_ln273_fu_3409_p2 & BCu_9_fu_3367_p3);

assign and_ln274_fu_3433_p2 = (xor_ln274_fu_3427_p2 & BCa_9_fu_3343_p3);

assign and_ln275_fu_3451_p2 = (xor_ln275_fu_3445_p2 & BCe_9_fu_3349_p3);

assign and_ln287_fu_3499_p2 = (xor_ln287_fu_3493_p2 & BCi_10_fu_3475_p3);

assign and_ln288_fu_3517_p2 = (xor_ln288_fu_3511_p2 & BCo_10_fu_3481_p3);

assign and_ln289_fu_3535_p2 = (xor_ln289_fu_3529_p2 & BCu_10_fu_3487_p3);

assign and_ln290_fu_3553_p2 = (xor_ln290_fu_3547_p2 & BCa_10_fu_3463_p3);

assign and_ln291_fu_3571_p2 = (xor_ln291_fu_3565_p2 & BCe_10_fu_3469_p3);

assign and_ln303_fu_3619_p2 = (xor_ln303_fu_3613_p2 & BCi_11_fu_3595_p3);

assign and_ln304_fu_3637_p2 = (xor_ln304_fu_3631_p2 & BCo_11_fu_3601_p3);

assign and_ln305_fu_3655_p2 = (xor_ln305_fu_3649_p2 & BCu_11_fu_3607_p3);

assign and_ln306_fu_3673_p2 = (xor_ln306_fu_3667_p2 & BCa_11_fu_3583_p3);

assign and_ln307_fu_3691_p2 = (xor_ln307_fu_3685_p2 & BCe_11_fu_3589_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln117_fu_871_p2 = ((ap_sig_allocacmp_round_1 < 5'd24) ? 1'b1 : 1'b0);

assign lshr_ln10_fu_1721_p4 = {{Agi_2_fu_1711_p2[63:58]}};

assign lshr_ln11_fu_1749_p4 = {{Ako_2_fu_1739_p2[63:39]}};

assign lshr_ln12_fu_1777_p4 = {{Amu_2_fu_1767_p2[63:56]}};

assign lshr_ln13_fu_1805_p4 = {{Asa_2_fu_1795_p2[63:46]}};

assign lshr_ln14_fu_1923_p4 = {{Abu_2_fu_1913_p2[63:37]}};

assign lshr_ln15_fu_1951_p4 = {{Aga_2_fu_1941_p2[63:28]}};

assign lshr_ln16_fu_1979_p4 = {{Ake_2_fu_1969_p2[63:54]}};

assign lshr_ln17_fu_2007_p4 = {{Ami_2_fu_1997_p2[63:49]}};

assign lshr_ln18_fu_2035_p4 = {{Aso_2_fu_2025_p2[63:8]}};

assign lshr_ln19_fu_2153_p4 = {{Abi_2_fu_2143_p2[63:2]}};

assign lshr_ln20_fu_2181_p4 = {{Ago_2_fu_2171_p2[63:9]}};

assign lshr_ln21_fu_2209_p4 = {{Aku_2_fu_2199_p2[63:25]}};

assign lshr_ln22_fu_2237_p4 = {{Ama_2_fu_2227_p2[63:23]}};

assign lshr_ln23_fu_2265_p4 = {{Ase_2_fu_2255_p2[63:62]}};

assign lshr_ln2_fu_1285_p4 = {{Aki_2_fu_1275_p2[63:21]}};

assign lshr_ln3_fu_1313_p4 = {{Amo_2_fu_1303_p2[63:43]}};

assign lshr_ln4_fu_1341_p4 = {{Asu_2_fu_1331_p2[63:50]}};

assign lshr_ln5_fu_1465_p4 = {{Abo_2_fu_1455_p2[63:36]}};

assign lshr_ln6_fu_1493_p4 = {{Agu_2_fu_1483_p2[63:44]}};

assign lshr_ln7_fu_1521_p4 = {{Aka_2_fu_1511_p2[63:61]}};

assign lshr_ln8_fu_1549_p4 = {{Ame_2_fu_1539_p2[63:19]}};

assign lshr_ln9_fu_1577_p4 = {{Asi_2_fu_1567_p2[63:3]}};

assign lshr_ln_fu_1257_p4 = {{Age_2_fu_1247_p2[63:20]}};

assign or_ln59_fu_1149_p3 = {{trunc_ln128_fu_1137_p1}, {tmp_298_fu_1141_p3}};

assign or_ln60_fu_1175_p3 = {{trunc_ln129_fu_1163_p1}, {tmp_299_fu_1167_p3}};

assign or_ln61_fu_1201_p3 = {{trunc_ln130_fu_1189_p1}, {tmp_300_fu_1193_p3}};

assign or_ln62_fu_1227_p3 = {{trunc_ln131_fu_1215_p1}, {tmp_301_fu_1219_p3}};

assign or_ln63_fu_2505_p3 = {{trunc_ln222_fu_2493_p1}, {tmp_303_fu_2497_p3}};

assign or_ln64_fu_2531_p3 = {{trunc_ln223_fu_2519_p1}, {tmp_304_fu_2523_p3}};

assign or_ln65_fu_2557_p3 = {{trunc_ln224_fu_2545_p1}, {tmp_305_fu_2549_p3}};

assign or_ln66_fu_2583_p3 = {{trunc_ln225_fu_2571_p1}, {tmp_306_fu_2575_p3}};

assign or_ln67_fu_2609_p3 = {{trunc_ln226_fu_2597_p1}, {tmp_307_fu_2601_p3}};

assign or_ln68_fu_892_p3 = {{tmp_s_fu_882_p4}, {1'd1}};

assign or_ln_fu_1123_p3 = {{trunc_ln127_fu_1111_p1}, {tmp_fu_1115_p3}};

assign tmp_298_fu_1141_p3 = BCi_fu_1057_p2[32'd63];

assign tmp_299_fu_1167_p3 = BCo_fu_1081_p2[32'd63];

assign tmp_300_fu_1193_p3 = BCu_fu_1105_p2[32'd63];

assign tmp_301_fu_1219_p3 = BCa_fu_1009_p2[32'd63];

assign tmp_302_fu_1695_p3 = Abe_2_fu_1685_p2[32'd63];

assign tmp_303_fu_2497_p3 = BCe_6_fu_2415_p2[32'd63];

assign tmp_304_fu_2523_p3 = BCi_6_fu_2439_p2[32'd63];

assign tmp_305_fu_2549_p3 = BCo_6_fu_2463_p2[32'd63];

assign tmp_306_fu_2575_p3 = BCu_6_fu_2487_p2[32'd63];

assign tmp_307_fu_2601_p3 = BCa_6_fu_2391_p2[32'd63];

assign tmp_fu_1115_p3 = BCe_fu_1033_p2[32'd63];

assign tmp_s_fu_882_p4 = {{ap_sig_allocacmp_round_1[4:1]}};

assign trunc_ln127_fu_1111_p1 = BCe_fu_1033_p2[62:0];

assign trunc_ln128_fu_1137_p1 = BCi_fu_1057_p2[62:0];

assign trunc_ln129_fu_1163_p1 = BCo_fu_1081_p2[62:0];

assign trunc_ln130_fu_1189_p1 = BCu_fu_1105_p2[62:0];

assign trunc_ln131_fu_1215_p1 = BCa_fu_1009_p2[62:0];

assign trunc_ln136_fu_1253_p1 = Age_2_fu_1247_p2[19:0];

assign trunc_ln138_fu_1281_p1 = Aki_2_fu_1275_p2[20:0];

assign trunc_ln140_fu_1309_p1 = Amo_2_fu_1303_p2[42:0];

assign trunc_ln142_fu_1337_p1 = Asu_2_fu_1331_p2[49:0];

assign trunc_ln151_fu_1461_p1 = Abo_2_fu_1455_p2[35:0];

assign trunc_ln153_fu_1489_p1 = Agu_2_fu_1483_p2[43:0];

assign trunc_ln155_fu_1517_p1 = Aka_2_fu_1511_p2[60:0];

assign trunc_ln157_fu_1545_p1 = Ame_2_fu_1539_p2[18:0];

assign trunc_ln159_fu_1573_p1 = Asi_2_fu_1567_p2[2:0];

assign trunc_ln167_fu_1691_p1 = Abe_2_fu_1685_p2[62:0];

assign trunc_ln169_fu_1717_p1 = Agi_2_fu_1711_p2[57:0];

assign trunc_ln171_fu_1745_p1 = Ako_2_fu_1739_p2[38:0];

assign trunc_ln173_fu_1773_p1 = Amu_2_fu_1767_p2[55:0];

assign trunc_ln175_fu_1801_p1 = Asa_2_fu_1795_p2[45:0];

assign trunc_ln183_fu_1919_p1 = Abu_2_fu_1913_p2[36:0];

assign trunc_ln185_fu_1947_p1 = Aga_2_fu_1941_p2[27:0];

assign trunc_ln187_fu_1975_p1 = Ake_2_fu_1969_p2[53:0];

assign trunc_ln189_fu_2003_p1 = Ami_2_fu_1997_p2[48:0];

assign trunc_ln191_fu_2031_p1 = Aso_2_fu_2025_p2[7:0];

assign trunc_ln199_fu_2149_p1 = Abi_2_fu_2143_p2[1:0];

assign trunc_ln201_fu_2177_p1 = Ago_2_fu_2171_p2[8:0];

assign trunc_ln203_fu_2205_p1 = Aku_2_fu_2199_p2[24:0];

assign trunc_ln205_fu_2233_p1 = Ama_2_fu_2227_p2[22:0];

assign trunc_ln207_fu_2261_p1 = Ase_2_fu_2255_p2[61:0];

assign trunc_ln222_fu_2493_p1 = BCe_6_fu_2415_p2[62:0];

assign trunc_ln223_fu_2519_p1 = BCi_6_fu_2439_p2[62:0];

assign trunc_ln224_fu_2545_p1 = BCo_6_fu_2463_p2[62:0];

assign trunc_ln225_fu_2571_p1 = BCu_6_fu_2487_p2[62:0];

assign trunc_ln226_fu_2597_p1 = BCa_6_fu_2391_p2[62:0];

assign trunc_ln231_fu_2635_p1 = Ege_1_fu_2629_p2[19:0];

assign trunc_ln233_fu_2655_p1 = Eki_1_fu_2649_p2[20:0];

assign trunc_ln235_fu_2675_p1 = Emo_1_fu_2669_p2[42:0];

assign trunc_ln237_fu_2695_p1 = Esu_1_fu_2689_p2[49:0];

assign trunc_ln246_fu_2715_p1 = Ebo_1_fu_2709_p2[35:0];

assign trunc_ln248_fu_2735_p1 = Egu_1_fu_2729_p2[43:0];

assign trunc_ln250_fu_2755_p1 = Eka_1_fu_2749_p2[60:0];

assign trunc_ln252_fu_2775_p1 = Eme_1_fu_2769_p2[18:0];

assign trunc_ln254_fu_2795_p1 = Esi_1_fu_2789_p2[2:0];

assign trunc_ln262_fu_2815_p1 = Ebe_1_fu_2809_p2[62:0];

assign trunc_ln264_fu_2833_p1 = Egi_1_fu_2827_p2[57:0];

assign trunc_ln266_fu_2853_p1 = Eko_1_fu_2847_p2[38:0];

assign trunc_ln268_fu_2873_p1 = Emu_1_fu_2867_p2[55:0];

assign trunc_ln270_fu_2893_p1 = Esa_1_fu_2887_p2[45:0];

assign trunc_ln278_fu_2913_p1 = Ebu_1_fu_2907_p2[36:0];

assign trunc_ln280_fu_2933_p1 = Ega_1_fu_2927_p2[27:0];

assign trunc_ln282_fu_2953_p1 = Eke_1_fu_2947_p2[53:0];

assign trunc_ln284_fu_2973_p1 = Emi_1_fu_2967_p2[48:0];

assign trunc_ln286_fu_2993_p1 = Eso_1_fu_2987_p2[7:0];

assign trunc_ln294_fu_3013_p1 = Ebi_1_fu_3007_p2[1:0];

assign trunc_ln296_fu_3033_p1 = Ego_1_fu_3027_p2[8:0];

assign trunc_ln298_fu_3053_p1 = Eku_1_fu_3047_p2[24:0];

assign trunc_ln300_fu_3073_p1 = Ema_1_fu_3067_p2[22:0];

assign trunc_ln302_fu_3093_p1 = Ese_1_fu_3087_p2[61:0];

assign xor_ln120_1_fu_1003_p2 = (ap_sig_allocacmp_Asa_1_load ^ ap_sig_allocacmp_Aga_1_load);

assign xor_ln120_2_fu_997_p2 = (xor_ln120_fu_991_p2 ^ ap_sig_allocacmp_Aba_1_load);

assign xor_ln120_fu_991_p2 = (ap_sig_allocacmp_Ama_1_load ^ ap_sig_allocacmp_Aka_1_load);

assign xor_ln121_1_fu_1027_p2 = (ap_sig_allocacmp_Ase_1_load ^ ap_sig_allocacmp_Age_1_load);

assign xor_ln121_2_fu_1021_p2 = (xor_ln121_fu_1015_p2 ^ ap_sig_allocacmp_Abe_1_load);

assign xor_ln121_fu_1015_p2 = (ap_sig_allocacmp_Ame_1_load ^ ap_sig_allocacmp_Ake_1_load);

assign xor_ln122_1_fu_1045_p2 = (ap_sig_allocacmp_Asi_1_load ^ ap_sig_allocacmp_Agi_1_load);

assign xor_ln122_2_fu_1051_p2 = (xor_ln122_fu_1039_p2 ^ xor_ln122_1_fu_1045_p2);

assign xor_ln122_fu_1039_p2 = (ap_sig_allocacmp_Ami_1_load ^ ap_sig_allocacmp_Aki_1_load);

assign xor_ln123_1_fu_1069_p2 = (ap_sig_allocacmp_Aso_1_load ^ ap_sig_allocacmp_Ago_1_load);

assign xor_ln123_2_fu_1075_p2 = (xor_ln123_fu_1063_p2 ^ xor_ln123_1_fu_1069_p2);

assign xor_ln123_fu_1063_p2 = (ap_sig_allocacmp_Amo_1_load ^ ap_sig_allocacmp_Ako_1_load);

assign xor_ln124_1_fu_1099_p2 = (ap_sig_allocacmp_Amu_1_load ^ ap_sig_allocacmp_Abu_1_load);

assign xor_ln124_2_fu_1093_p2 = (xor_ln124_fu_1087_p2 ^ ap_sig_allocacmp_Asu_1_load);

assign xor_ln124_fu_1087_p2 = (ap_sig_allocacmp_Aku_1_load ^ ap_sig_allocacmp_Agu_1_load);

assign xor_ln144_1_fu_1371_p2 = (KeccakF_RoundConstants_q1 ^ Aba_4_fu_1241_p2);

assign xor_ln144_fu_1359_p2 = (64'd18446744073709551615 ^ BCe_1_fu_1267_p3);

assign xor_ln145_fu_1383_p2 = (64'd18446744073709551615 ^ BCi_1_fu_1295_p3);

assign xor_ln146_fu_1401_p2 = (64'd18446744073709551615 ^ BCo_1_fu_1323_p3);

assign xor_ln147_fu_1419_p2 = (64'd18446744073709551615 ^ BCu_1_fu_1351_p3);

assign xor_ln148_fu_1437_p2 = (64'd18446744073709551615 ^ Aba_4_fu_1241_p2);

assign xor_ln160_fu_1595_p2 = (64'd18446744073709551615 ^ BCe_2_fu_1503_p3);

assign xor_ln161_fu_1613_p2 = (64'd18446744073709551615 ^ BCi_2_fu_1531_p3);

assign xor_ln162_fu_1631_p2 = (64'd18446744073709551615 ^ BCo_2_fu_1559_p3);

assign xor_ln163_fu_1649_p2 = (64'd18446744073709551615 ^ BCu_2_fu_1587_p3);

assign xor_ln164_fu_1667_p2 = (64'd18446744073709551615 ^ BCa_2_fu_1475_p3);

assign xor_ln176_fu_1823_p2 = (64'd18446744073709551615 ^ BCe_3_fu_1731_p3);

assign xor_ln177_fu_1841_p2 = (64'd18446744073709551615 ^ BCi_3_fu_1759_p3);

assign xor_ln178_fu_1859_p2 = (64'd18446744073709551615 ^ BCo_3_fu_1787_p3);

assign xor_ln179_fu_1877_p2 = (64'd18446744073709551615 ^ BCu_3_fu_1815_p3);

assign xor_ln180_fu_1895_p2 = (64'd18446744073709551615 ^ BCa_3_fu_1703_p3);

assign xor_ln192_fu_2053_p2 = (64'd18446744073709551615 ^ BCe_4_fu_1961_p3);

assign xor_ln193_fu_2071_p2 = (64'd18446744073709551615 ^ BCi_4_fu_1989_p3);

assign xor_ln194_fu_2089_p2 = (64'd18446744073709551615 ^ BCo_4_fu_2017_p3);

assign xor_ln195_fu_2107_p2 = (64'd18446744073709551615 ^ BCu_4_fu_2045_p3);

assign xor_ln196_fu_2125_p2 = (64'd18446744073709551615 ^ BCa_4_fu_1933_p3);

assign xor_ln208_fu_2283_p2 = (64'd18446744073709551615 ^ BCe_5_fu_2191_p3);

assign xor_ln209_fu_2301_p2 = (64'd18446744073709551615 ^ BCi_5_fu_2219_p3);

assign xor_ln210_fu_2319_p2 = (64'd18446744073709551615 ^ BCo_5_fu_2247_p3);

assign xor_ln211_fu_2337_p2 = (64'd18446744073709551615 ^ BCu_5_fu_2275_p3);

assign xor_ln212_fu_2355_p2 = (64'd18446744073709551615 ^ BCa_5_fu_2163_p3);

assign xor_ln215_1_fu_2379_p2 = (Ema_fu_2065_p2 ^ Eba_fu_1377_p2);

assign xor_ln215_2_fu_2385_p2 = (xor_ln215_1_fu_2379_p2 ^ Ega_fu_1607_p2);

assign xor_ln215_fu_2373_p2 = (Esa_fu_2295_p2 ^ Eka_fu_1835_p2);

assign xor_ln216_1_fu_2397_p2 = (Ege_fu_1625_p2 ^ Ebe_fu_1395_p2);

assign xor_ln216_2_fu_2409_p2 = (xor_ln216_fu_2403_p2 ^ Ese_fu_2313_p2);

assign xor_ln216_fu_2403_p2 = (Eme_fu_2083_p2 ^ Eke_fu_1853_p2);

assign xor_ln217_1_fu_2421_p2 = (Esi_fu_2331_p2 ^ Emi_fu_2101_p2);

assign xor_ln217_2_fu_2433_p2 = (xor_ln217_fu_2427_p2 ^ Eki_fu_1871_p2);

assign xor_ln217_fu_2427_p2 = (Egi_fu_1643_p2 ^ Ebi_fu_1413_p2);

assign xor_ln218_1_fu_2451_p2 = (Eso_fu_2349_p2 ^ Ebo_fu_1431_p2);

assign xor_ln218_2_fu_2457_p2 = (xor_ln218_1_fu_2451_p2 ^ Emo_fu_2119_p2);

assign xor_ln218_fu_2445_p2 = (Eko_fu_1889_p2 ^ Ego_fu_1661_p2);

assign xor_ln219_1_fu_2475_p2 = (Eku_fu_1907_p2 ^ Egu_fu_1679_p2);

assign xor_ln219_2_fu_2481_p2 = (xor_ln219_1_fu_2475_p2 ^ Emu_fu_2137_p2);

assign xor_ln219_fu_2469_p2 = (Esu_fu_2367_p2 ^ Ebu_fu_1449_p2);

assign xor_ln239_1_fu_3143_p2 = (KeccakF_RoundConstants_load_1_reg_4196 ^ Eba_2_reg_4149);

assign xor_ln239_fu_3131_p2 = (64'd18446744073709551615 ^ BCe_7_fu_3107_p3);

assign xor_ln240_fu_3153_p2 = (64'd18446744073709551615 ^ BCi_7_fu_3113_p3);

assign xor_ln241_fu_3171_p2 = (64'd18446744073709551615 ^ BCo_7_fu_3119_p3);

assign xor_ln242_fu_3189_p2 = (64'd18446744073709551615 ^ BCu_7_fu_3125_p3);

assign xor_ln243_fu_3206_p2 = (64'd18446744073709551615 ^ Eba_2_reg_4149);

assign xor_ln255_fu_3253_p2 = (64'd18446744073709551615 ^ BCe_8_fu_3229_p3);

assign xor_ln256_fu_3271_p2 = (64'd18446744073709551615 ^ BCi_8_fu_3235_p3);

assign xor_ln257_fu_3289_p2 = (64'd18446744073709551615 ^ BCo_8_fu_3241_p3);

assign xor_ln258_fu_3307_p2 = (64'd18446744073709551615 ^ BCu_8_fu_3247_p3);

assign xor_ln259_fu_3325_p2 = (64'd18446744073709551615 ^ BCa_8_fu_3223_p3);

assign xor_ln271_fu_3373_p2 = (64'd18446744073709551615 ^ BCe_9_fu_3349_p3);

assign xor_ln272_fu_3391_p2 = (64'd18446744073709551615 ^ BCi_9_fu_3355_p3);

assign xor_ln273_fu_3409_p2 = (64'd18446744073709551615 ^ BCo_9_fu_3361_p3);

assign xor_ln274_fu_3427_p2 = (64'd18446744073709551615 ^ BCu_9_fu_3367_p3);

assign xor_ln275_fu_3445_p2 = (64'd18446744073709551615 ^ BCa_9_fu_3343_p3);

assign xor_ln287_fu_3493_p2 = (64'd18446744073709551615 ^ BCe_10_fu_3469_p3);

assign xor_ln288_fu_3511_p2 = (64'd18446744073709551615 ^ BCi_10_fu_3475_p3);

assign xor_ln289_fu_3529_p2 = (64'd18446744073709551615 ^ BCo_10_fu_3481_p3);

assign xor_ln290_fu_3547_p2 = (64'd18446744073709551615 ^ BCu_10_fu_3487_p3);

assign xor_ln291_fu_3565_p2 = (64'd18446744073709551615 ^ BCa_10_fu_3463_p3);

assign xor_ln303_fu_3613_p2 = (64'd18446744073709551615 ^ BCe_11_fu_3589_p3);

assign xor_ln304_fu_3631_p2 = (64'd18446744073709551615 ^ BCi_11_fu_3595_p3);

assign xor_ln305_fu_3649_p2 = (64'd18446744073709551615 ^ BCo_11_fu_3601_p3);

assign xor_ln306_fu_3667_p2 = (64'd18446744073709551615 ^ BCu_11_fu_3607_p3);

assign xor_ln307_fu_3685_p2 = (64'd18446744073709551615 ^ BCa_11_fu_3583_p3);

assign zext_ln144_fu_877_p1 = ap_sig_allocacmp_round_1;

assign zext_ln239_fu_900_p1 = or_ln68_fu_892_p3;

endmodule //sikep503_kem_enc_hw_KeccakF1600_StatePermute_Pipeline_VITIS_LOOP_117_1
