// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_mp_mul_140_Pipeline_VITIS_LOOP_157_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        indvars_iv,
        zext_ln156,
        a_address0,
        a_ce0,
        a_q0,
        empty,
        v_35_out,
        v_35_out_ap_vld,
        u_34_out,
        u_34_out_ap_vld,
        grp_fu_381_p_din0,
        grp_fu_381_p_din1,
        grp_fu_381_p_dout0,
        grp_fu_381_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] indvars_iv;
input  [3:0] zext_ln156;
output  [3:0] a_address0;
output   a_ce0;
input  [63:0] a_q0;
input  [2:0] empty;
output  [63:0] v_35_out;
output   v_35_out_ap_vld;
output  [2:0] u_34_out;
output   u_34_out_ap_vld;
output  [31:0] grp_fu_381_p_din0;
output  [31:0] grp_fu_381_p_din1;
input  [31:0] grp_fu_381_p_dout0;
output   grp_fu_381_p_ce;

reg ap_idle;
reg v_35_out_ap_vld;
reg u_34_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln157_fu_160_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] one_address0;
wire   [63:0] one_q0;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln157_reg_355;
reg   [0:0] icmp_ln157_reg_355_pp0_iter1_reg;
reg   [0:0] icmp_ln157_reg_355_pp0_iter2_reg;
reg   [0:0] icmp_ln157_reg_355_pp0_iter3_reg;
reg   [63:0] a_load_reg_369;
reg   [63:0] a_load_reg_369_pp0_iter2_reg;
reg   [63:0] a_load_reg_369_pp0_iter3_reg;
wire  signed [31:0] al_fu_197_p1;
reg  signed [31:0] al_reg_374;
reg  signed [31:0] al_reg_374_pp0_iter2_reg;
reg  signed [31:0] al_reg_374_pp0_iter3_reg;
reg  signed [31:0] al_reg_374_pp0_iter4_reg;
wire   [0:0] bl_fu_201_p1;
reg   [0:0] bl_reg_380;
reg   [0:0] bl_reg_380_pp0_iter2_reg;
reg   [0:0] bl_reg_380_pp0_iter3_reg;
reg  signed [31:0] tmp_s_reg_385;
reg   [31:0] mul_ln106_reg_390;
wire   [31:0] select_ln106_fu_224_p3;
reg   [31:0] select_ln106_reg_395;
wire   [31:0] temp_fu_237_p2;
reg   [31:0] temp_reg_400;
wire   [31:0] zext_ln158_fu_170_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln158_35_fu_181_p1;
reg   [2:0] u_34_fu_60;
wire   [2:0] u_fu_308_p2;
wire    ap_loop_init;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [63:0] v_35_fu_64;
wire   [63:0] v_fu_266_p2;
wire   [63:0] zext_ln156_cast_fu_134_p1;
reg   [3:0] j_19_fu_68;
wire   [3:0] indvars_iv_cast_fu_138_p1;
wire   [3:0] add_ln157_fu_186_p2;
reg   [3:0] ap_sig_allocacmp_j;
wire    ap_block_pp0_stage0_01001;
reg    a_ce0_local;
reg    one_ce0_local;
wire   [2:0] trunc_ln157_fu_166_p1;
wire   [2:0] sub_ln158_fu_175_p2;
wire   [31:0] trunc_ln106_s_fu_215_p4;
wire   [31:0] and_ln106_1_fu_231_p2;
wire   [31:0] and_ln106_fu_248_p2;
wire   [63:0] or_ln_fu_259_p3;
wire   [63:0] shl_ln125_s_fu_252_p3;
wire   [63:0] xor_ln105_63_fu_272_p2;
wire   [63:0] xor_ln105_64_fu_278_p2;
wire   [63:0] or_ln105_13_fu_284_p2;
wire   [63:0] xor_ln105_65_fu_290_p2;
wire   [0:0] tempReg_fu_296_p3;
wire   [2:0] zext_ln160_fu_304_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 u_34_fu_60 = 3'd0;
#0 v_35_fu_64 = 64'd0;
#0 j_19_fu_68 = 4'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_mp_mul_140_Pipeline_VITIS_LOOP_144_2_one_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
one_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(one_address0),
    .ce0(one_ce0_local),
    .q0(one_q0)
);

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln157_fu_160_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_19_fu_68 <= add_ln157_fu_186_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_19_fu_68 <= indvars_iv_cast_fu_138_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            u_34_fu_60 <= 3'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            u_34_fu_60 <= u_fu_308_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            v_35_fu_64 <= zext_ln156_cast_fu_134_p1;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            v_35_fu_64 <= v_fu_266_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_load_reg_369 <= a_q0;
        al_reg_374 <= al_fu_197_p1;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        bl_reg_380 <= bl_fu_201_p1;
        icmp_ln157_reg_355 <= icmp_ln157_fu_160_p2;
        icmp_ln157_reg_355_pp0_iter1_reg <= icmp_ln157_reg_355;
        tmp_s_reg_385 <= {{one_q0[63:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        a_load_reg_369_pp0_iter2_reg <= a_load_reg_369;
        a_load_reg_369_pp0_iter3_reg <= a_load_reg_369_pp0_iter2_reg;
        al_reg_374_pp0_iter2_reg <= al_reg_374;
        al_reg_374_pp0_iter3_reg <= al_reg_374_pp0_iter2_reg;
        al_reg_374_pp0_iter4_reg <= al_reg_374_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        bl_reg_380_pp0_iter2_reg <= bl_reg_380;
        bl_reg_380_pp0_iter3_reg <= bl_reg_380_pp0_iter2_reg;
        icmp_ln157_reg_355_pp0_iter2_reg <= icmp_ln157_reg_355_pp0_iter1_reg;
        icmp_ln157_reg_355_pp0_iter3_reg <= icmp_ln157_reg_355_pp0_iter2_reg;
        mul_ln106_reg_390 <= grp_fu_381_p_dout0;
        select_ln106_reg_395 <= select_ln106_fu_224_p3;
        temp_reg_400 <= temp_fu_237_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_ce0_local = 1'b1;
    end else begin
        a_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_fu_160_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j = indvars_iv_cast_fu_138_p1;
    end else begin
        ap_sig_allocacmp_j = j_19_fu_68;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        one_ce0_local = 1'b1;
    end else begin
        one_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_reg_355_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        u_34_out_ap_vld = 1'b1;
    end else begin
        u_34_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln157_reg_355_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        v_35_out_ap_vld = 1'b1;
    end else begin
        v_35_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_address0 = zext_ln158_fu_170_p1;

assign a_ce0 = a_ce0_local;

assign add_ln157_fu_186_p2 = (ap_sig_allocacmp_j + 4'd1);

assign al_fu_197_p1 = a_q0[31:0];

assign and_ln106_1_fu_231_p2 = (trunc_ln106_s_fu_215_p4 & select_ln106_fu_224_p3);

assign and_ln106_fu_248_p2 = (select_ln106_reg_395 & al_reg_374_pp0_iter4_reg);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bl_fu_201_p1 = one_q0[0:0];

assign grp_fu_381_p_ce = 1'b1;

assign grp_fu_381_p_din0 = tmp_s_reg_385;

assign grp_fu_381_p_din1 = al_reg_374;

assign icmp_ln157_fu_160_p2 = ((ap_sig_allocacmp_j == 4'd8) ? 1'b1 : 1'b0);

assign indvars_iv_cast_fu_138_p1 = indvars_iv;

assign one_address0 = zext_ln158_35_fu_181_p1;

assign or_ln105_13_fu_284_p2 = (xor_ln105_64_fu_278_p2 | xor_ln105_63_fu_272_p2);

assign or_ln_fu_259_p3 = {{temp_reg_400}, {and_ln106_fu_248_p2}};

assign select_ln106_fu_224_p3 = ((bl_reg_380_pp0_iter3_reg[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign shl_ln125_s_fu_252_p3 = {{temp_reg_400}, {32'd0}};

assign sub_ln158_fu_175_p2 = (empty - trunc_ln157_fu_166_p1);

assign tempReg_fu_296_p3 = xor_ln105_65_fu_290_p2[32'd63];

assign temp_fu_237_p2 = (and_ln106_1_fu_231_p2 + mul_ln106_reg_390);

assign trunc_ln106_s_fu_215_p4 = {{a_load_reg_369_pp0_iter3_reg[63:32]}};

assign trunc_ln157_fu_166_p1 = ap_sig_allocacmp_j[2:0];

assign u_34_out = u_34_fu_60;

assign u_fu_308_p2 = (zext_ln160_fu_304_p1 + u_34_fu_60);

assign v_35_out = v_35_fu_64;

assign v_fu_266_p2 = (or_ln_fu_259_p3 + v_35_fu_64);

assign xor_ln105_63_fu_272_p2 = (v_fu_266_p2 ^ shl_ln125_s_fu_252_p3);

assign xor_ln105_64_fu_278_p2 = (v_35_fu_64 ^ shl_ln125_s_fu_252_p3);

assign xor_ln105_65_fu_290_p2 = (v_fu_266_p2 ^ or_ln105_13_fu_284_p2);

assign zext_ln156_cast_fu_134_p1 = zext_ln156;

assign zext_ln158_35_fu_181_p1 = sub_ln158_fu_175_p2;

assign zext_ln158_fu_170_p1 = ap_sig_allocacmp_j;

assign zext_ln160_fu_304_p1 = tempReg_fu_296_p3;

endmodule //sikep503_kem_enc_hw_mp_mul_140_Pipeline_VITIS_LOOP_157_4
