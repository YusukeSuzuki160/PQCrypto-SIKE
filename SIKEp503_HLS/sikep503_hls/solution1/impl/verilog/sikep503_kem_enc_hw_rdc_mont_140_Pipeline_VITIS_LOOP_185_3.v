// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_rdc_mont_140_Pipeline_VITIS_LOOP_185_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_025,
        u_024,
        i_11,
        add_ln185,
        mc_offset,
        mc_address0,
        mc_ce0,
        mc_q0,
        empty,
        v_68_out,
        v_68_out_ap_vld,
        u_54_out,
        u_54_out_ap_vld,
        t_out,
        t_out_ap_vld,
        grp_fu_901_p_din0,
        grp_fu_901_p_din1,
        grp_fu_901_p_dout0,
        grp_fu_901_p_ce,
        grp_fu_905_p_din0,
        grp_fu_905_p_din1,
        grp_fu_905_p_dout0,
        grp_fu_905_p_ce,
        grp_fu_909_p_din0,
        grp_fu_909_p_din1,
        grp_fu_909_p_dout0,
        grp_fu_909_p_ce,
        grp_fu_913_p_din0,
        grp_fu_913_p_din1,
        grp_fu_913_p_dout0,
        grp_fu_913_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] v_025;
input  [63:0] u_024;
input  [2:0] i_11;
input  [3:0] add_ln185;
input  [0:0] mc_offset;
output  [3:0] mc_address0;
output   mc_ce0;
input  [63:0] mc_q0;
input  [2:0] empty;
output  [63:0] v_68_out;
output   v_68_out_ap_vld;
output  [63:0] u_54_out;
output   u_54_out_ap_vld;
output  [63:0] t_out;
output   t_out_ap_vld;
output  [31:0] grp_fu_901_p_din0;
output  [31:0] grp_fu_901_p_din1;
input  [63:0] grp_fu_901_p_dout0;
output   grp_fu_901_p_ce;
output  [31:0] grp_fu_905_p_din0;
output  [31:0] grp_fu_905_p_din1;
input  [63:0] grp_fu_905_p_dout0;
output   grp_fu_905_p_ce;
output  [31:0] grp_fu_909_p_din0;
output  [31:0] grp_fu_909_p_din1;
input  [63:0] grp_fu_909_p_dout0;
output   grp_fu_909_p_ce;
output  [31:0] grp_fu_913_p_din0;
output  [31:0] grp_fu_913_p_din1;
input  [63:0] grp_fu_913_p_dout0;
output   grp_fu_913_p_ce;

reg ap_idle;
reg v_68_out_ap_vld;
reg u_54_out_ap_vld;
reg t_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln185_fu_226_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [2:0] p503p1_1_address0;
wire   [63:0] p503p1_1_q0;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln185_reg_731;
reg   [0:0] icmp_ln185_reg_731_pp0_iter1_reg;
reg   [0:0] icmp_ln185_reg_731_pp0_iter2_reg;
reg   [0:0] icmp_ln185_reg_731_pp0_iter3_reg;
reg   [0:0] icmp_ln185_reg_731_pp0_iter4_reg;
reg   [0:0] icmp_ln185_reg_731_pp0_iter5_reg;
reg   [0:0] icmp_ln185_reg_731_pp0_iter6_reg;
reg   [0:0] icmp_ln185_reg_731_pp0_iter7_reg;
wire   [0:0] icmp_ln186_fu_238_p2;
reg   [0:0] icmp_ln186_reg_735;
reg   [0:0] icmp_ln186_reg_735_pp0_iter1_reg;
reg   [0:0] icmp_ln186_reg_735_pp0_iter2_reg;
reg   [0:0] icmp_ln186_reg_735_pp0_iter3_reg;
reg   [0:0] icmp_ln186_reg_735_pp0_iter4_reg;
reg   [0:0] icmp_ln186_reg_735_pp0_iter5_reg;
reg   [0:0] icmp_ln186_reg_735_pp0_iter6_reg;
reg   [0:0] icmp_ln186_reg_735_pp0_iter7_reg;
reg   [0:0] icmp_ln186_reg_735_pp0_iter8_reg;
wire   [31:0] al_fu_273_p1;
reg   [31:0] al_reg_752;
wire   [31:0] bl_fu_277_p1;
reg   [31:0] bl_reg_757;
reg   [31:0] ah_reg_762;
reg   [31:0] bh_reg_767;
wire   [63:0] zext_ln105_fu_301_p1;
wire   [63:0] zext_ln110_fu_306_p1;
wire   [63:0] zext_ln105_31_fu_311_p1;
wire   [63:0] zext_ln112_fu_316_p1;
wire   [31:0] trunc_ln106_fu_321_p1;
reg   [31:0] trunc_ln106_reg_796;
reg   [31:0] trunc_ln106_reg_796_pp0_iter4_reg;
reg   [31:0] trunc_ln106_reg_796_pp0_iter5_reg;
reg   [31:0] trunc_ln106_reg_796_pp0_iter6_reg;
wire   [31:0] trunc_ln106_56_fu_325_p1;
reg   [31:0] trunc_ln106_56_reg_801;
wire   [31:0] trunc_ln106_57_fu_329_p1;
reg   [31:0] trunc_ln106_57_reg_806;
wire   [31:0] trunc_ln106_58_fu_333_p1;
reg   [31:0] trunc_ln106_58_reg_811;
reg   [31:0] tmp_72_reg_816;
reg   [31:0] tmp_74_reg_821;
reg   [31:0] trunc_ln106_s_reg_826;
reg   [31:0] trunc_ln106_s_reg_826_pp0_iter4_reg;
reg   [31:0] tmp_75_reg_831;
reg   [31:0] tmp_75_reg_831_pp0_iter4_reg;
reg   [31:0] tmp_75_reg_831_pp0_iter5_reg;
reg   [1:0] tmp_73_reg_836;
wire   [31:0] trunc_ln125_fu_412_p1;
reg   [31:0] trunc_ln125_reg_841;
reg   [31:0] trunc_ln125_reg_841_pp0_iter5_reg;
reg   [31:0] trunc_ln125_reg_841_pp0_iter6_reg;
wire   [32:0] add_ln130_fu_422_p2;
reg   [32:0] add_ln130_reg_847;
wire   [31:0] trunc_ln105_fu_449_p1;
reg   [31:0] trunc_ln105_reg_852;
reg   [1:0] tmp_76_reg_857;
wire   [63:0] xor_ln189_fu_490_p2;
reg   [63:0] xor_ln189_reg_862;
reg   [63:0] xor_ln189_reg_862_pp0_iter7_reg;
reg   [63:0] xor_ln189_reg_862_pp0_iter8_reg;
wire   [63:0] tempReg_18_fu_554_p2;
reg   [63:0] tempReg_18_reg_868;
reg   [63:0] tempReg_18_reg_868_pp0_iter8_reg;
reg   [0:0] tmp_78_reg_877;
wire   [31:0] zext_ln187_fu_252_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln187_8_fu_263_p1;
reg   [63:0] t_fu_84;
wire   [63:0] t_2_fu_676_p3;
wire    ap_loop_init;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [63:0] u_54_fu_88;
wire   [63:0] u_2_fu_609_p3;
reg   [63:0] v_fu_92;
wire   [63:0] v_2_fu_559_p3;
reg   [2:0] j_fu_96;
wire   [2:0] add_ln185_6_fu_232_p2;
reg   [2:0] ap_sig_allocacmp_j_10;
wire    ap_block_pp0_stage0_01001;
reg    mc_ce0_local;
reg    p503p1_1_ce0_local;
wire   [3:0] zext_ln185_fu_222_p1;
wire   [3:0] tmp_s_fu_244_p3;
wire   [2:0] sub_ln187_fu_257_p2;
wire   [32:0] zext_ln123_fu_380_p1;
wire   [32:0] zext_ln123_29_fu_383_p1;
wire   [32:0] add_ln123_fu_386_p2;
wire   [33:0] zext_ln123_30_fu_392_p1;
wire   [33:0] zext_ln106_fu_377_p1;
wire   [33:0] temp_fu_396_p2;
wire   [32:0] zext_ln130_fu_419_p1;
wire   [32:0] zext_ln106_30_fu_416_p1;
wire   [31:0] zext_ln106_29_fu_428_p1;
wire   [31:0] add_ln130_30_fu_434_p2;
wire   [33:0] zext_ln130_30_fu_439_p1;
wire   [33:0] zext_ln130_29_fu_431_p1;
wire   [33:0] temp_18_fu_443_p2;
wire   [33:0] and_ln189_7_fu_470_p3;
wire   [63:0] zext_ln189_fu_477_p1;
wire   [63:0] and_ln_fu_463_p3;
wire   [63:0] add_ln189_fu_484_p2;
wire   [63:0] zext_ln189_7_fu_481_p1;
wire   [63:0] tempReg_fu_506_p3;
wire   [63:0] shl_ln_fu_499_p3;
wire   [63:0] v_67_fu_512_p2;
wire   [63:0] xor_ln105_122_fu_524_p2;
wire   [63:0] xor_ln105_fu_518_p2;
wire   [63:0] or_ln105_fu_530_p2;
wire   [63:0] xor_ln105_123_fu_536_p2;
wire   [0:0] carry_fu_542_p3;
wire   [63:0] zext_ln105_36_fu_550_p1;
wire   [63:0] u_fu_574_p2;
wire   [63:0] xor_ln105_126_fu_584_p2;
wire   [63:0] xor_ln105_125_fu_579_p2;
wire   [63:0] or_ln105_22_fu_589_p2;
wire   [63:0] xor_ln105_127_fu_595_p2;
wire   [0:0] bit_sel_fu_624_p3;
wire   [0:0] xor_ln105_124_fu_631_p2;
wire   [62:0] trunc_ln105_24_fu_637_p1;
wire   [63:0] xor_ln105_s_fu_640_p3;
wire   [63:0] and_ln105_fu_648_p2;
wire   [0:0] tmp_77_fu_653_p3;
wire   [0:0] carry_36_fu_661_p2;
wire   [63:0] zext_ln190_fu_666_p1;
wire   [63:0] t_25_fu_670_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 t_fu_84 = 64'd0;
#0 u_54_fu_88 = 64'd0;
#0 v_fu_92 = 64'd0;
#0 j_fu_96 = 3'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_rdc_mont_14183_Pipeline_VITIS_LOOP_185_3_p503p1_1_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
p503p1_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p503p1_1_address0),
    .ce0(p503p1_1_ce0_local),
    .q0(p503p1_1_q0)
);

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln185_fu_226_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_96 <= add_ln185_6_fu_232_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_96 <= 3'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            t_fu_84 <= 64'd0;
        end else if ((ap_enable_reg_pp0_iter9 == 1'b1)) begin
            t_fu_84 <= t_2_fu_676_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            u_54_fu_88 <= u_024;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            u_54_fu_88 <= u_2_fu_609_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            v_fu_92 <= v_025;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            v_fu_92 <= v_2_fu_559_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln130_reg_847 <= add_ln130_fu_422_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        icmp_ln185_reg_731_pp0_iter2_reg <= icmp_ln185_reg_731_pp0_iter1_reg;
        icmp_ln185_reg_731_pp0_iter3_reg <= icmp_ln185_reg_731_pp0_iter2_reg;
        icmp_ln185_reg_731_pp0_iter4_reg <= icmp_ln185_reg_731_pp0_iter3_reg;
        icmp_ln185_reg_731_pp0_iter5_reg <= icmp_ln185_reg_731_pp0_iter4_reg;
        icmp_ln185_reg_731_pp0_iter6_reg <= icmp_ln185_reg_731_pp0_iter5_reg;
        icmp_ln185_reg_731_pp0_iter7_reg <= icmp_ln185_reg_731_pp0_iter6_reg;
        icmp_ln186_reg_735_pp0_iter2_reg <= icmp_ln186_reg_735_pp0_iter1_reg;
        icmp_ln186_reg_735_pp0_iter3_reg <= icmp_ln186_reg_735_pp0_iter2_reg;
        icmp_ln186_reg_735_pp0_iter4_reg <= icmp_ln186_reg_735_pp0_iter3_reg;
        icmp_ln186_reg_735_pp0_iter5_reg <= icmp_ln186_reg_735_pp0_iter4_reg;
        icmp_ln186_reg_735_pp0_iter6_reg <= icmp_ln186_reg_735_pp0_iter5_reg;
        icmp_ln186_reg_735_pp0_iter7_reg <= icmp_ln186_reg_735_pp0_iter6_reg;
        icmp_ln186_reg_735_pp0_iter8_reg <= icmp_ln186_reg_735_pp0_iter7_reg;
        tempReg_18_reg_868 <= tempReg_18_fu_554_p2;
        tempReg_18_reg_868_pp0_iter8_reg <= tempReg_18_reg_868;
        tmp_72_reg_816 <= {{grp_fu_901_p_dout0[63:32]}};
        tmp_73_reg_836 <= {{temp_fu_396_p2[33:32]}};
        tmp_74_reg_821 <= {{grp_fu_909_p_dout0[63:32]}};
        tmp_75_reg_831 <= {{grp_fu_913_p_dout0[63:32]}};
        tmp_75_reg_831_pp0_iter4_reg <= tmp_75_reg_831;
        tmp_75_reg_831_pp0_iter5_reg <= tmp_75_reg_831_pp0_iter4_reg;
        tmp_76_reg_857 <= {{temp_18_fu_443_p2[33:32]}};
        tmp_78_reg_877 <= xor_ln105_127_fu_595_p2[32'd63];
        trunc_ln105_reg_852 <= trunc_ln105_fu_449_p1;
        trunc_ln106_56_reg_801 <= trunc_ln106_56_fu_325_p1;
        trunc_ln106_57_reg_806 <= trunc_ln106_57_fu_329_p1;
        trunc_ln106_58_reg_811 <= trunc_ln106_58_fu_333_p1;
        trunc_ln106_reg_796 <= trunc_ln106_fu_321_p1;
        trunc_ln106_reg_796_pp0_iter4_reg <= trunc_ln106_reg_796;
        trunc_ln106_reg_796_pp0_iter5_reg <= trunc_ln106_reg_796_pp0_iter4_reg;
        trunc_ln106_reg_796_pp0_iter6_reg <= trunc_ln106_reg_796_pp0_iter5_reg;
        trunc_ln106_s_reg_826 <= {{grp_fu_905_p_dout0[63:32]}};
        trunc_ln106_s_reg_826_pp0_iter4_reg <= trunc_ln106_s_reg_826;
        trunc_ln125_reg_841 <= trunc_ln125_fu_412_p1;
        trunc_ln125_reg_841_pp0_iter5_reg <= trunc_ln125_reg_841;
        trunc_ln125_reg_841_pp0_iter6_reg <= trunc_ln125_reg_841_pp0_iter5_reg;
        xor_ln189_reg_862 <= xor_ln189_fu_490_p2;
        xor_ln189_reg_862_pp0_iter7_reg <= xor_ln189_reg_862;
        xor_ln189_reg_862_pp0_iter8_reg <= xor_ln189_reg_862_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ah_reg_762 <= {{mc_q0[63:32]}};
        al_reg_752 <= al_fu_273_p1;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        bh_reg_767 <= {{p503p1_1_q0[63:32]}};
        bl_reg_757 <= bl_fu_277_p1;
        icmp_ln185_reg_731 <= icmp_ln185_fu_226_p2;
        icmp_ln185_reg_731_pp0_iter1_reg <= icmp_ln185_reg_731;
        icmp_ln186_reg_735 <= icmp_ln186_fu_238_p2;
        icmp_ln186_reg_735_pp0_iter1_reg <= icmp_ln186_reg_735;
    end
end

always @ (*) begin
    if (((icmp_ln185_fu_226_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_10 = 3'd0;
    end else begin
        ap_sig_allocacmp_j_10 = j_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mc_ce0_local = 1'b1;
    end else begin
        mc_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p503p1_1_ce0_local = 1'b1;
    end else begin
        p503p1_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln185_reg_731_pp0_iter7_reg == 1'd1))) begin
        t_out_ap_vld = 1'b1;
    end else begin
        t_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln185_reg_731_pp0_iter7_reg == 1'd1))) begin
        u_54_out_ap_vld = 1'b1;
    end else begin
        u_54_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (icmp_ln185_reg_731_pp0_iter7_reg == 1'd1))) begin
        v_68_out_ap_vld = 1'b1;
    end else begin
        v_68_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln123_fu_386_p2 = (zext_ln123_fu_380_p1 + zext_ln123_29_fu_383_p1);

assign add_ln130_30_fu_434_p2 = (trunc_ln106_s_reg_826_pp0_iter4_reg + zext_ln106_29_fu_428_p1);

assign add_ln130_fu_422_p2 = (zext_ln130_fu_419_p1 + zext_ln106_30_fu_416_p1);

assign add_ln185_6_fu_232_p2 = (ap_sig_allocacmp_j_10 + 3'd1);

assign add_ln189_fu_484_p2 = (zext_ln189_fu_477_p1 + and_ln_fu_463_p3);

assign al_fu_273_p1 = mc_q0[31:0];

assign and_ln105_fu_648_p2 = (xor_ln189_reg_862_pp0_iter8_reg & xor_ln105_s_fu_640_p3);

assign and_ln189_7_fu_470_p3 = {{tmp_76_reg_857}, {32'd0}};

assign and_ln_fu_463_p3 = {{tmp_75_reg_831_pp0_iter5_reg}, {32'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bit_sel_fu_624_p3 = tempReg_18_reg_868_pp0_iter8_reg[64'd63];

assign bl_fu_277_p1 = p503p1_1_q0[31:0];

assign carry_36_fu_661_p2 = (tmp_78_reg_877 | tmp_77_fu_653_p3);

assign carry_fu_542_p3 = xor_ln105_123_fu_536_p2[32'd63];

assign grp_fu_901_p_ce = 1'b1;

assign grp_fu_901_p_din0 = zext_ln105_31_fu_311_p1;

assign grp_fu_901_p_din1 = zext_ln105_fu_301_p1;

assign grp_fu_905_p_ce = 1'b1;

assign grp_fu_905_p_din0 = zext_ln112_fu_316_p1;

assign grp_fu_905_p_din1 = zext_ln105_fu_301_p1;

assign grp_fu_909_p_ce = 1'b1;

assign grp_fu_909_p_din0 = zext_ln105_31_fu_311_p1;

assign grp_fu_909_p_din1 = zext_ln110_fu_306_p1;

assign grp_fu_913_p_ce = 1'b1;

assign grp_fu_913_p_din0 = zext_ln112_fu_316_p1;

assign grp_fu_913_p_din1 = zext_ln110_fu_306_p1;

assign icmp_ln185_fu_226_p2 = ((ap_sig_allocacmp_j_10 == i_11) ? 1'b1 : 1'b0);

assign icmp_ln186_fu_238_p2 = ((zext_ln185_fu_222_p1 < add_ln185) ? 1'b1 : 1'b0);

assign mc_address0 = zext_ln187_fu_252_p1;

assign mc_ce0 = mc_ce0_local;

assign or_ln105_22_fu_589_p2 = (xor_ln105_126_fu_584_p2 | xor_ln105_125_fu_579_p2);

assign or_ln105_fu_530_p2 = (xor_ln105_fu_518_p2 | xor_ln105_122_fu_524_p2);

assign p503p1_1_address0 = zext_ln187_8_fu_263_p1;

assign shl_ln_fu_499_p3 = {{trunc_ln125_reg_841_pp0_iter6_reg}, {32'd0}};

assign sub_ln187_fu_257_p2 = (empty - ap_sig_allocacmp_j_10);

assign t_25_fu_670_p2 = (t_fu_84 + zext_ln190_fu_666_p1);

assign t_2_fu_676_p3 = ((icmp_ln186_reg_735_pp0_iter8_reg[0:0] == 1'b1) ? t_25_fu_670_p2 : t_fu_84);

assign t_out = t_fu_84;

assign tempReg_18_fu_554_p2 = (xor_ln189_reg_862 + zext_ln105_36_fu_550_p1);

assign tempReg_fu_506_p3 = {{trunc_ln125_reg_841_pp0_iter6_reg}, {trunc_ln106_reg_796_pp0_iter6_reg}};

assign temp_18_fu_443_p2 = (zext_ln130_30_fu_439_p1 + zext_ln130_29_fu_431_p1);

assign temp_fu_396_p2 = (zext_ln123_30_fu_392_p1 + zext_ln106_fu_377_p1);

assign tmp_77_fu_653_p3 = and_ln105_fu_648_p2[32'd63];

assign tmp_s_fu_244_p3 = {{mc_offset}, {ap_sig_allocacmp_j_10}};

assign trunc_ln105_24_fu_637_p1 = tempReg_18_reg_868_pp0_iter8_reg[62:0];

assign trunc_ln105_fu_449_p1 = temp_18_fu_443_p2[31:0];

assign trunc_ln106_56_fu_325_p1 = grp_fu_905_p_dout0[31:0];

assign trunc_ln106_57_fu_329_p1 = grp_fu_909_p_dout0[31:0];

assign trunc_ln106_58_fu_333_p1 = grp_fu_913_p_dout0[31:0];

assign trunc_ln106_fu_321_p1 = grp_fu_901_p_dout0[31:0];

assign trunc_ln125_fu_412_p1 = temp_fu_396_p2[31:0];

assign u_2_fu_609_p3 = ((icmp_ln186_reg_735_pp0_iter7_reg[0:0] == 1'b1) ? u_fu_574_p2 : u_54_fu_88);

assign u_54_out = u_54_fu_88;

assign u_fu_574_p2 = (tempReg_18_reg_868 + u_54_fu_88);

assign v_2_fu_559_p3 = ((icmp_ln186_reg_735_pp0_iter6_reg[0:0] == 1'b1) ? v_67_fu_512_p2 : v_fu_92);

assign v_67_fu_512_p2 = (tempReg_fu_506_p3 + v_fu_92);

assign v_68_out = v_fu_92;

assign xor_ln105_122_fu_524_p2 = (v_fu_92 ^ shl_ln_fu_499_p3);

assign xor_ln105_123_fu_536_p2 = (v_67_fu_512_p2 ^ or_ln105_fu_530_p2);

assign xor_ln105_124_fu_631_p2 = (bit_sel_fu_624_p3 ^ 1'd1);

assign xor_ln105_125_fu_579_p2 = (u_fu_574_p2 ^ tempReg_18_reg_868);

assign xor_ln105_126_fu_584_p2 = (u_54_fu_88 ^ tempReg_18_reg_868);

assign xor_ln105_127_fu_595_p2 = (u_fu_574_p2 ^ or_ln105_22_fu_589_p2);

assign xor_ln105_fu_518_p2 = (v_67_fu_512_p2 ^ shl_ln_fu_499_p3);

assign xor_ln105_s_fu_640_p3 = {{xor_ln105_124_fu_631_p2}, {trunc_ln105_24_fu_637_p1}};

assign xor_ln189_fu_490_p2 = (zext_ln189_7_fu_481_p1 ^ add_ln189_fu_484_p2);

assign zext_ln105_31_fu_311_p1 = bl_reg_757;

assign zext_ln105_36_fu_550_p1 = carry_fu_542_p3;

assign zext_ln105_fu_301_p1 = al_reg_752;

assign zext_ln106_29_fu_428_p1 = tmp_73_reg_836;

assign zext_ln106_30_fu_416_p1 = tmp_74_reg_821;

assign zext_ln106_fu_377_p1 = tmp_72_reg_816;

assign zext_ln110_fu_306_p1 = ah_reg_762;

assign zext_ln112_fu_316_p1 = bh_reg_767;

assign zext_ln123_29_fu_383_p1 = trunc_ln106_56_reg_801;

assign zext_ln123_30_fu_392_p1 = add_ln123_fu_386_p2;

assign zext_ln123_fu_380_p1 = trunc_ln106_57_reg_806;

assign zext_ln130_29_fu_431_p1 = add_ln130_reg_847;

assign zext_ln130_30_fu_439_p1 = add_ln130_30_fu_434_p2;

assign zext_ln130_fu_419_p1 = trunc_ln106_58_reg_811;

assign zext_ln185_fu_222_p1 = ap_sig_allocacmp_j_10;

assign zext_ln187_8_fu_263_p1 = sub_ln187_fu_257_p2;

assign zext_ln187_fu_252_p1 = tmp_s_fu_244_p3;

assign zext_ln189_7_fu_481_p1 = trunc_ln105_reg_852;

assign zext_ln189_fu_477_p1 = and_ln189_7_fu_470_p3;

assign zext_ln190_fu_666_p1 = carry_36_fu_661_p2;

endmodule //sikep503_kem_enc_hw_rdc_mont_140_Pipeline_VITIS_LOOP_185_3
