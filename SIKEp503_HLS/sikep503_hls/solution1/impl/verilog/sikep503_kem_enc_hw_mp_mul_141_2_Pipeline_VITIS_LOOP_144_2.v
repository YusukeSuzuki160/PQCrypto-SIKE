// ==============================================================
// Generated by Vitis HLS v2024.2.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sikep503_kem_enc_hw_mp_mul_141_2_Pipeline_VITIS_LOOP_144_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        v_017,
        zext_ln143,
        indvars_iv31,
        b_address0,
        b_ce0,
        b_q0,
        b_address1,
        b_ce1,
        b_q1,
        empty,
        v_114_out,
        v_114_out_ap_vld,
        u_95_out_i,
        u_95_out_o,
        u_95_out_o_ap_vld,
        t_out_i,
        t_out_o,
        t_out_o_ap_vld,
        grp_fu_425_p_din0,
        grp_fu_425_p_din1,
        grp_fu_425_p_dout0,
        grp_fu_425_p_ce,
        grp_fu_429_p_din0,
        grp_fu_429_p_din1,
        grp_fu_429_p_dout0,
        grp_fu_429_p_ce,
        grp_fu_433_p_din0,
        grp_fu_433_p_din1,
        grp_fu_433_p_dout0,
        grp_fu_433_p_ce,
        grp_fu_437_p_din0,
        grp_fu_437_p_din1,
        grp_fu_437_p_dout0,
        grp_fu_437_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [63:0] v_017;
input  [3:0] zext_ln143;
input  [3:0] indvars_iv31;
output  [2:0] b_address0;
output   b_ce0;
input  [63:0] b_q0;
output  [2:0] b_address1;
output   b_ce1;
input  [63:0] b_q1;
input  [2:0] empty;
output  [63:0] v_114_out;
output   v_114_out_ap_vld;
input  [63:0] u_95_out_i;
output  [63:0] u_95_out_o;
output   u_95_out_o_ap_vld;
input  [3:0] t_out_i;
output  [3:0] t_out_o;
output   t_out_o_ap_vld;
output  [31:0] grp_fu_425_p_din0;
output  [31:0] grp_fu_425_p_din1;
input  [63:0] grp_fu_425_p_dout0;
output   grp_fu_425_p_ce;
output  [31:0] grp_fu_429_p_din0;
output  [31:0] grp_fu_429_p_din1;
input  [63:0] grp_fu_429_p_dout0;
output   grp_fu_429_p_ce;
output  [31:0] grp_fu_433_p_din0;
output  [31:0] grp_fu_433_p_din1;
input  [63:0] grp_fu_433_p_dout0;
output   grp_fu_433_p_ce;
output  [31:0] grp_fu_437_p_din0;
output  [31:0] grp_fu_437_p_din1;
input  [63:0] grp_fu_437_p_dout0;
output   grp_fu_437_p_ce;

reg ap_idle;
reg v_114_out_ap_vld;
reg[63:0] u_95_out_o;
reg u_95_out_o_ap_vld;
reg[3:0] t_out_o;
reg t_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln144_fu_183_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln144_reg_651;
reg   [0:0] icmp_ln144_reg_651_pp0_iter1_reg;
reg   [0:0] icmp_ln144_reg_651_pp0_iter2_reg;
reg   [0:0] icmp_ln144_reg_651_pp0_iter3_reg;
reg   [0:0] icmp_ln144_reg_651_pp0_iter4_reg;
reg   [0:0] icmp_ln144_reg_651_pp0_iter5_reg;
reg   [0:0] icmp_ln144_reg_651_pp0_iter6_reg;
wire   [31:0] al_fu_220_p1;
reg   [31:0] al_reg_665;
wire   [31:0] bl_fu_224_p1;
reg   [31:0] bl_reg_670;
reg   [31:0] ah_reg_675;
reg   [31:0] bh_reg_680;
wire   [63:0] zext_ln105_fu_248_p1;
wire   [63:0] zext_ln110_fu_253_p1;
wire   [63:0] zext_ln105_171_fu_258_p1;
wire   [63:0] zext_ln112_fu_263_p1;
wire   [31:0] trunc_ln106_fu_268_p1;
reg   [31:0] trunc_ln106_reg_709;
reg   [31:0] trunc_ln106_reg_709_pp0_iter4_reg;
reg   [31:0] trunc_ln106_reg_709_pp0_iter5_reg;
wire   [31:0] trunc_ln106_255_fu_272_p1;
reg   [31:0] trunc_ln106_255_reg_714;
wire   [31:0] trunc_ln106_256_fu_276_p1;
reg   [31:0] trunc_ln106_256_reg_719;
wire   [31:0] trunc_ln106_257_fu_280_p1;
reg   [31:0] trunc_ln106_257_reg_724;
reg   [31:0] trunc_ln106_257_reg_724_pp0_iter4_reg;
reg   [31:0] tmp_468_reg_730;
reg   [31:0] tmp_470_reg_735;
reg   [31:0] tmp_470_reg_735_pp0_iter4_reg;
reg   [31:0] tmp_471_reg_741;
reg   [31:0] tmp_471_reg_741_pp0_iter4_reg;
reg   [31:0] tmp_472_reg_746;
reg   [31:0] tmp_472_reg_746_pp0_iter4_reg;
reg   [31:0] tmp_472_reg_746_pp0_iter5_reg;
reg   [1:0] tmp_469_reg_751;
wire   [31:0] trunc_ln125_fu_359_p1;
reg   [31:0] trunc_ln125_reg_756;
reg   [31:0] trunc_ln125_reg_756_pp0_iter5_reg;
wire   [31:0] add_ln105_fu_403_p2;
reg   [31:0] add_ln105_reg_762;
reg   [1:0] tmp_473_reg_767;
wire   [63:0] add_ln133_fu_453_p2;
reg   [63:0] add_ln133_reg_772;
reg   [63:0] add_ln133_reg_772_pp0_iter7_reg;
wire   [63:0] tempReg_fu_524_p2;
reg   [63:0] tempReg_reg_777;
reg   [63:0] tempReg_reg_777_pp0_iter7_reg;
reg   [63:0] u_95_out_load_reg_786;
wire   [63:0] v_fu_539_p2;
reg   [63:0] v_reg_791;
wire   [31:0] zext_ln145_fu_199_p1;
wire    ap_block_pp0_stage0;
wire   [31:0] zext_ln145_25_fu_210_p1;
wire   [63:0] zext_ln143_cast_fu_154_p1;
wire    ap_loop_init;
wire   [3:0] u_fu_620_p2;
reg   [63:0] v_114_fu_74;
wire   [63:0] v_196_fu_465_p2;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [3:0] j_fu_78;
wire   [3:0] add_ln144_fu_189_p2;
reg   [3:0] ap_sig_allocacmp_j_44;
wire    ap_block_pp0_stage0_01001;
reg    b_ce1_local;
reg    b_ce0_local;
wire   [2:0] trunc_ln144_fu_195_p1;
wire   [2:0] sub_ln145_fu_204_p2;
wire   [32:0] zext_ln123_fu_327_p1;
wire   [32:0] zext_ln123_161_fu_330_p1;
wire   [32:0] add_ln123_fu_333_p2;
wire   [33:0] zext_ln123_162_fu_339_p1;
wire   [33:0] zext_ln106_fu_324_p1;
wire   [33:0] temp_fu_343_p2;
wire   [32:0] zext_ln130_fu_372_p1;
wire   [32:0] zext_ln106_221_fu_366_p1;
wire   [32:0] add_ln130_fu_379_p2;
wire   [32:0] zext_ln106_222_fu_369_p1;
wire   [32:0] zext_ln106_220_fu_363_p1;
wire   [32:0] add_ln130_191_fu_389_p2;
wire   [31:0] trunc_ln130_fu_395_p1;
wire   [31:0] add_ln130_200_fu_375_p2;
wire   [33:0] zext_ln130_162_fu_399_p1;
wire   [33:0] zext_ln130_161_fu_385_p1;
wire   [33:0] temp_84_fu_409_p2;
wire   [33:0] and_ln133_s_fu_442_p3;
wire   [63:0] zext_ln133_fu_449_p1;
wire   [63:0] and_ln_fu_435_p3;
wire   [63:0] or_ln_fu_459_p3;
wire   [63:0] shl_ln_fu_428_p3;
wire   [63:0] xor_ln105_fu_471_p2;
wire   [63:0] xor_ln105_61_fu_477_p2;
wire   [63:0] or_ln105_fu_483_p2;
wire   [63:0] xor_ln105_62_fu_489_p2;
wire   [0:0] carry_fu_495_p3;
wire   [31:0] tmp_s_fu_507_p4;
wire   [63:0] or_ln52_fu_517_p3;
wire   [63:0] zext_ln105_172_fu_503_p1;
wire   [63:0] xor_ln147_fu_554_p2;
wire   [63:0] xor_ln147_37_fu_558_p2;
wire   [0:0] bit_sel_fu_568_p3;
wire   [0:0] xor_ln147_50_fu_575_p2;
wire   [62:0] trunc_ln147_fu_581_p1;
wire   [63:0] xor_ln147_s_fu_584_p3;
wire   [63:0] or_ln147_25_fu_562_p2;
wire   [63:0] xor_ln147_39_fu_597_p2;
wire   [63:0] and_ln147_fu_592_p2;
wire   [63:0] or_ln147_fu_602_p2;
wire   [0:0] tmp_154_fu_608_p3;
wire   [3:0] zext_ln148_fu_616_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 v_114_fu_74 = 64'd0;
#0 j_fu_78 = 4'd0;
#0 ap_done_reg = 1'b0;
end

sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln144_fu_183_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_78 <= add_ln144_fu_189_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_78 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            v_114_fu_74 <= v_017;
        end else if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
            v_114_fu_74 <= v_196_fu_465_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln105_reg_762 <= add_ln105_fu_403_p2;
        add_ln133_reg_772[63 : 32] <= add_ln133_fu_453_p2[63 : 32];
        add_ln133_reg_772_pp0_iter7_reg[63 : 32] <= add_ln133_reg_772[63 : 32];
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        icmp_ln144_reg_651_pp0_iter2_reg <= icmp_ln144_reg_651_pp0_iter1_reg;
        icmp_ln144_reg_651_pp0_iter3_reg <= icmp_ln144_reg_651_pp0_iter2_reg;
        icmp_ln144_reg_651_pp0_iter4_reg <= icmp_ln144_reg_651_pp0_iter3_reg;
        icmp_ln144_reg_651_pp0_iter5_reg <= icmp_ln144_reg_651_pp0_iter4_reg;
        icmp_ln144_reg_651_pp0_iter6_reg <= icmp_ln144_reg_651_pp0_iter5_reg;
        tempReg_reg_777 <= tempReg_fu_524_p2;
        tempReg_reg_777_pp0_iter7_reg <= tempReg_reg_777;
        tmp_468_reg_730 <= {{grp_fu_425_p_dout0[63:32]}};
        tmp_469_reg_751 <= {{temp_fu_343_p2[33:32]}};
        tmp_470_reg_735 <= {{grp_fu_433_p_dout0[63:32]}};
        tmp_470_reg_735_pp0_iter4_reg <= tmp_470_reg_735;
        tmp_471_reg_741 <= {{grp_fu_429_p_dout0[63:32]}};
        tmp_471_reg_741_pp0_iter4_reg <= tmp_471_reg_741;
        tmp_472_reg_746 <= {{grp_fu_437_p_dout0[63:32]}};
        tmp_472_reg_746_pp0_iter4_reg <= tmp_472_reg_746;
        tmp_472_reg_746_pp0_iter5_reg <= tmp_472_reg_746_pp0_iter4_reg;
        tmp_473_reg_767 <= {{temp_84_fu_409_p2[33:32]}};
        trunc_ln106_255_reg_714 <= trunc_ln106_255_fu_272_p1;
        trunc_ln106_256_reg_719 <= trunc_ln106_256_fu_276_p1;
        trunc_ln106_257_reg_724 <= trunc_ln106_257_fu_280_p1;
        trunc_ln106_257_reg_724_pp0_iter4_reg <= trunc_ln106_257_reg_724;
        trunc_ln106_reg_709 <= trunc_ln106_fu_268_p1;
        trunc_ln106_reg_709_pp0_iter4_reg <= trunc_ln106_reg_709;
        trunc_ln106_reg_709_pp0_iter5_reg <= trunc_ln106_reg_709_pp0_iter4_reg;
        trunc_ln125_reg_756 <= trunc_ln125_fu_359_p1;
        trunc_ln125_reg_756_pp0_iter5_reg <= trunc_ln125_reg_756;
        u_95_out_load_reg_786 <= u_95_out_i;
        v_reg_791 <= v_fu_539_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ah_reg_675 <= {{b_q1[63:32]}};
        al_reg_665 <= al_fu_220_p1;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        bh_reg_680 <= {{b_q0[63:32]}};
        bl_reg_670 <= bl_fu_224_p1;
        icmp_ln144_reg_651 <= icmp_ln144_fu_183_p2;
        icmp_ln144_reg_651_pp0_iter1_reg <= icmp_ln144_reg_651;
    end
end

always @ (*) begin
    if (((icmp_ln144_fu_183_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_44 = 4'd0;
    end else begin
        ap_sig_allocacmp_j_44 = j_fu_78;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_ce0_local = 1'b1;
    end else begin
        b_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_ce1_local = 1'b1;
    end else begin
        b_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            t_out_o = 4'd0;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            t_out_o = u_fu_620_p2;
        end else begin
            t_out_o = t_out_i;
        end
    end else begin
        t_out_o = t_out_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1)))) begin
        t_out_o_ap_vld = 1'b1;
    end else begin
        t_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            u_95_out_o = zext_ln143_cast_fu_154_p1;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            u_95_out_o = v_fu_539_p2;
        end else begin
            u_95_out_o = u_95_out_i;
        end
    end else begin
        u_95_out_o = u_95_out_i;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1)))) begin
        u_95_out_o_ap_vld = 1'b1;
    end else begin
        u_95_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (icmp_ln144_reg_651_pp0_iter6_reg == 1'd1))) begin
        v_114_out_ap_vld = 1'b1;
    end else begin
        v_114_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln105_fu_403_p2 = (trunc_ln130_fu_395_p1 + add_ln130_200_fu_375_p2);

assign add_ln123_fu_333_p2 = (zext_ln123_fu_327_p1 + zext_ln123_161_fu_330_p1);

assign add_ln130_191_fu_389_p2 = (zext_ln106_222_fu_369_p1 + zext_ln106_220_fu_363_p1);

assign add_ln130_200_fu_375_p2 = (trunc_ln106_257_reg_724_pp0_iter4_reg + tmp_470_reg_735_pp0_iter4_reg);

assign add_ln130_fu_379_p2 = (zext_ln130_fu_372_p1 + zext_ln106_221_fu_366_p1);

assign add_ln133_fu_453_p2 = (zext_ln133_fu_449_p1 + and_ln_fu_435_p3);

assign add_ln144_fu_189_p2 = (ap_sig_allocacmp_j_44 + 4'd1);

assign al_fu_220_p1 = b_q1[31:0];

assign and_ln133_s_fu_442_p3 = {{tmp_473_reg_767}, {32'd0}};

assign and_ln147_fu_592_p2 = (xor_ln147_s_fu_584_p3 & add_ln133_reg_772_pp0_iter7_reg);

assign and_ln_fu_435_p3 = {{tmp_472_reg_746_pp0_iter5_reg}, {32'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign b_address0 = zext_ln145_25_fu_210_p1;

assign b_address1 = zext_ln145_fu_199_p1;

assign b_ce0 = b_ce0_local;

assign b_ce1 = b_ce1_local;

assign bit_sel_fu_568_p3 = tempReg_reg_777_pp0_iter7_reg[64'd63];

assign bl_fu_224_p1 = b_q0[31:0];

assign carry_fu_495_p3 = xor_ln105_62_fu_489_p2[32'd63];

assign grp_fu_425_p_ce = 1'b1;

assign grp_fu_425_p_din0 = zext_ln105_171_fu_258_p1;

assign grp_fu_425_p_din1 = zext_ln105_fu_248_p1;

assign grp_fu_429_p_ce = 1'b1;

assign grp_fu_429_p_din0 = zext_ln112_fu_263_p1;

assign grp_fu_429_p_din1 = zext_ln105_fu_248_p1;

assign grp_fu_433_p_ce = 1'b1;

assign grp_fu_433_p_din0 = zext_ln105_171_fu_258_p1;

assign grp_fu_433_p_din1 = zext_ln110_fu_253_p1;

assign grp_fu_437_p_ce = 1'b1;

assign grp_fu_437_p_din0 = zext_ln112_fu_263_p1;

assign grp_fu_437_p_din1 = zext_ln110_fu_253_p1;

assign icmp_ln144_fu_183_p2 = ((ap_sig_allocacmp_j_44 == indvars_iv31) ? 1'b1 : 1'b0);

assign or_ln105_fu_483_p2 = (xor_ln105_fu_471_p2 | xor_ln105_61_fu_477_p2);

assign or_ln147_25_fu_562_p2 = (xor_ln147_fu_554_p2 | xor_ln147_37_fu_558_p2);

assign or_ln147_fu_602_p2 = (xor_ln147_39_fu_597_p2 | and_ln147_fu_592_p2);

assign or_ln52_fu_517_p3 = {{tmp_s_fu_507_p4}, {add_ln105_reg_762}};

assign or_ln_fu_459_p3 = {{trunc_ln125_reg_756_pp0_iter5_reg}, {trunc_ln106_reg_709_pp0_iter5_reg}};

assign shl_ln_fu_428_p3 = {{trunc_ln125_reg_756_pp0_iter5_reg}, {32'd0}};

assign sub_ln145_fu_204_p2 = (empty - trunc_ln144_fu_195_p1);

assign tempReg_fu_524_p2 = (or_ln52_fu_517_p3 + zext_ln105_172_fu_503_p1);

assign temp_84_fu_409_p2 = (zext_ln130_162_fu_399_p1 + zext_ln130_161_fu_385_p1);

assign temp_fu_343_p2 = (zext_ln123_162_fu_339_p1 + zext_ln106_fu_324_p1);

assign tmp_154_fu_608_p3 = or_ln147_fu_602_p2[32'd63];

assign tmp_s_fu_507_p4 = {{add_ln133_fu_453_p2[63:32]}};

assign trunc_ln106_255_fu_272_p1 = grp_fu_429_p_dout0[31:0];

assign trunc_ln106_256_fu_276_p1 = grp_fu_433_p_dout0[31:0];

assign trunc_ln106_257_fu_280_p1 = grp_fu_437_p_dout0[31:0];

assign trunc_ln106_fu_268_p1 = grp_fu_425_p_dout0[31:0];

assign trunc_ln125_fu_359_p1 = temp_fu_343_p2[31:0];

assign trunc_ln130_fu_395_p1 = add_ln130_191_fu_389_p2[31:0];

assign trunc_ln144_fu_195_p1 = ap_sig_allocacmp_j_44[2:0];

assign trunc_ln147_fu_581_p1 = tempReg_reg_777_pp0_iter7_reg[62:0];

assign u_fu_620_p2 = (zext_ln148_fu_616_p1 + t_out_i);

assign v_114_out = v_114_fu_74;

assign v_196_fu_465_p2 = (or_ln_fu_459_p3 + v_114_fu_74);

assign v_fu_539_p2 = (tempReg_reg_777 + u_95_out_i);

assign xor_ln105_61_fu_477_p2 = (v_114_fu_74 ^ shl_ln_fu_428_p3);

assign xor_ln105_62_fu_489_p2 = (v_196_fu_465_p2 ^ or_ln105_fu_483_p2);

assign xor_ln105_fu_471_p2 = (v_196_fu_465_p2 ^ shl_ln_fu_428_p3);

assign xor_ln147_37_fu_558_p2 = (u_95_out_load_reg_786 ^ tempReg_reg_777_pp0_iter7_reg);

assign xor_ln147_39_fu_597_p2 = (v_reg_791 ^ or_ln147_25_fu_562_p2);

assign xor_ln147_50_fu_575_p2 = (bit_sel_fu_568_p3 ^ 1'd1);

assign xor_ln147_fu_554_p2 = (v_reg_791 ^ tempReg_reg_777_pp0_iter7_reg);

assign xor_ln147_s_fu_584_p3 = {{xor_ln147_50_fu_575_p2}, {trunc_ln147_fu_581_p1}};

assign zext_ln105_171_fu_258_p1 = bl_reg_670;

assign zext_ln105_172_fu_503_p1 = carry_fu_495_p3;

assign zext_ln105_fu_248_p1 = al_reg_665;

assign zext_ln106_220_fu_363_p1 = tmp_469_reg_751;

assign zext_ln106_221_fu_366_p1 = tmp_470_reg_735_pp0_iter4_reg;

assign zext_ln106_222_fu_369_p1 = tmp_471_reg_741_pp0_iter4_reg;

assign zext_ln106_fu_324_p1 = tmp_468_reg_730;

assign zext_ln110_fu_253_p1 = ah_reg_675;

assign zext_ln112_fu_263_p1 = bh_reg_680;

assign zext_ln123_161_fu_330_p1 = trunc_ln106_255_reg_714;

assign zext_ln123_162_fu_339_p1 = add_ln123_fu_333_p2;

assign zext_ln123_fu_327_p1 = trunc_ln106_256_reg_719;

assign zext_ln130_161_fu_385_p1 = add_ln130_fu_379_p2;

assign zext_ln130_162_fu_399_p1 = add_ln130_191_fu_389_p2;

assign zext_ln130_fu_372_p1 = trunc_ln106_257_reg_724_pp0_iter4_reg;

assign zext_ln133_fu_449_p1 = and_ln133_s_fu_442_p3;

assign zext_ln143_cast_fu_154_p1 = zext_ln143;

assign zext_ln145_25_fu_210_p1 = sub_ln145_fu_204_p2;

assign zext_ln145_fu_199_p1 = trunc_ln144_fu_195_p1;

assign zext_ln148_fu_616_p1 = tmp_154_fu_608_p3;

always @ (posedge ap_clk) begin
    add_ln133_reg_772[31:0] <= 32'b00000000000000000000000000000000;
    add_ln133_reg_772_pp0_iter7_reg[31:0] <= 32'b00000000000000000000000000000000;
end

endmodule //sikep503_kem_enc_hw_mp_mul_141_2_Pipeline_VITIS_LOOP_144_2
