-- ==============================================================
-- Generated by Vitis HLS v2024.2.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sikep503_kem_enc_hw_cshake256_simple_32_clone is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_r_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    output_r_ce0 : OUT STD_LOGIC;
    output_r_we0 : OUT STD_LOGIC;
    output_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    in_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    in_r_ce0 : OUT STD_LOGIC;
    in_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of sikep503_kem_enc_hw_cshake256_simple_32_clone is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal s_ce0 : STD_LOGIC;
    signal s_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal s_ce1 : STD_LOGIC;
    signal s_we1 : STD_LOGIC_VECTOR (7 downto 0);
    signal s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal s_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal t_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_ce0 : STD_LOGIC;
    signal t_we0 : STD_LOGIC;
    signal t_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_ce1 : STD_LOGIC;
    signal t_we1 : STD_LOGIC;
    signal t_38_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_38_ce0 : STD_LOGIC;
    signal t_38_we0 : STD_LOGIC;
    signal t_38_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_38_ce1 : STD_LOGIC;
    signal t_38_we1 : STD_LOGIC;
    signal t_39_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_39_ce0 : STD_LOGIC;
    signal t_39_we0 : STD_LOGIC;
    signal t_39_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_39_ce1 : STD_LOGIC;
    signal t_39_we1 : STD_LOGIC;
    signal t_40_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_40_ce0 : STD_LOGIC;
    signal t_40_we0 : STD_LOGIC;
    signal t_40_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_40_ce1 : STD_LOGIC;
    signal t_40_we1 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_clone_fu_38_ap_start : STD_LOGIC;
    signal grp_cshake256_simple_absorb_clone_fu_38_ap_done : STD_LOGIC;
    signal grp_cshake256_simple_absorb_clone_fu_38_ap_idle : STD_LOGIC;
    signal grp_cshake256_simple_absorb_clone_fu_38_ap_ready : STD_LOGIC;
    signal grp_cshake256_simple_absorb_clone_fu_38_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cshake256_simple_absorb_clone_fu_38_s_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_clone_fu_38_s_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_absorb_clone_fu_38_s_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cshake256_simple_absorb_clone_fu_38_s_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cshake256_simple_absorb_clone_fu_38_s_ce1 : STD_LOGIC;
    signal grp_cshake256_simple_absorb_clone_fu_38_s_we1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_absorb_clone_fu_38_s_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cshake256_simple_absorb_clone_fu_38_in_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_cshake256_simple_absorb_clone_fu_38_in_r_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_48_ap_start : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_48_ap_done : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_48_ap_idle : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_48_ap_ready : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_48_s_i_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_48_s_i_ce0 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_48_s_i_we0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_48_s_i_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_48_s_i_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_48_s_i_ce1 : STD_LOGIC;
    signal grp_KeccakF1600_StatePermute_fu_48_s_i_we1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_KeccakF1600_StatePermute_fu_48_s_i_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_start : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_done : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_idle : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_ready : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_we0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_ce1 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_we1 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_we0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_ce1 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_we1 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_we0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_ce1 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_we1 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_we0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_ce1 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_we1 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_s_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_s_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_start : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_done : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_idle : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_ready : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_130_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_130_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_131_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_131_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_132_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_132_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_output_r_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_output_r_ce0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_output_r_we0 : STD_LOGIC;
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_output_r_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_cshake256_simple_absorb_clone_fu_38_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_KeccakF1600_StatePermute_fu_48_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sikep503_kem_enc_hw_cshake256_simple_absorb_clone IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_ce0 : OUT STD_LOGIC;
        s_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        s_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        s_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_ce1 : OUT STD_LOGIC;
        s_we1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        s_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        in_r_ce0 : OUT STD_LOGIC;
        in_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sikep503_kem_enc_hw_KeccakF1600_StatePermute IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        s_i_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_i_ce0 : OUT STD_LOGIC;
        s_i_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        s_i_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_i_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        s_i_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_i_ce1 : OUT STD_LOGIC;
        s_i_we1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        s_i_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        s_i_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sikep503_kem_enc_hw_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_132_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_132_ce0 : OUT STD_LOGIC;
        t_132_we0 : OUT STD_LOGIC;
        t_132_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_132_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_132_ce1 : OUT STD_LOGIC;
        t_132_we1 : OUT STD_LOGIC;
        t_132_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_131_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_131_ce0 : OUT STD_LOGIC;
        t_131_we0 : OUT STD_LOGIC;
        t_131_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_131_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_131_ce1 : OUT STD_LOGIC;
        t_131_we1 : OUT STD_LOGIC;
        t_131_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_130_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_130_ce0 : OUT STD_LOGIC;
        t_130_we0 : OUT STD_LOGIC;
        t_130_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_130_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_130_ce1 : OUT STD_LOGIC;
        t_130_we1 : OUT STD_LOGIC;
        t_130_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_we0 : OUT STD_LOGIC;
        t_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        t_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_ce1 : OUT STD_LOGIC;
        t_we1 : OUT STD_LOGIC;
        t_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        s_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        s_ce0 : OUT STD_LOGIC;
        s_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sikep503_kem_enc_hw_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        t_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_ce0 : OUT STD_LOGIC;
        t_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_130_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_130_ce0 : OUT STD_LOGIC;
        t_130_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_131_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_131_ce0 : OUT STD_LOGIC;
        t_131_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_132_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        t_132_ce0 : OUT STD_LOGIC;
        t_132_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sikep503_kem_enc_hw_cshake256_simple_32_clone_s_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (7 downto 0);
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC_VECTOR (7 downto 0);
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component sikep503_kem_enc_hw_cshake256_simple_32_clone_t_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    s_U : component sikep503_kem_enc_hw_cshake256_simple_32_clone_s_RAM_AUTO_1R1W
    generic map (
        DataWidth => 64,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => s_address0,
        ce0 => s_ce0,
        we0 => s_we0,
        d0 => s_d0,
        q0 => s_q0,
        address1 => s_address1,
        ce1 => s_ce1,
        we1 => s_we1,
        d1 => s_d1,
        q1 => s_q1);

    t_U : component sikep503_kem_enc_hw_cshake256_simple_32_clone_t_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t_address0,
        ce0 => t_ce0,
        we0 => t_we0,
        d0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_d0,
        q0 => t_q0,
        address1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_address1,
        ce1 => t_ce1,
        we1 => t_we1,
        d1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_d1);

    t_38_U : component sikep503_kem_enc_hw_cshake256_simple_32_clone_t_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t_38_address0,
        ce0 => t_38_ce0,
        we0 => t_38_we0,
        d0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_d0,
        q0 => t_38_q0,
        address1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_address1,
        ce1 => t_38_ce1,
        we1 => t_38_we1,
        d1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_d1);

    t_39_U : component sikep503_kem_enc_hw_cshake256_simple_32_clone_t_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t_39_address0,
        ce0 => t_39_ce0,
        we0 => t_39_we0,
        d0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_d0,
        q0 => t_39_q0,
        address1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_address1,
        ce1 => t_39_ce1,
        we1 => t_39_we1,
        d1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_d1);

    t_40_U : component sikep503_kem_enc_hw_cshake256_simple_32_clone_t_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 34,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => t_40_address0,
        ce0 => t_40_ce0,
        we0 => t_40_we0,
        d0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_d0,
        q0 => t_40_q0,
        address1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_address1,
        ce1 => t_40_ce1,
        we1 => t_40_we1,
        d1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_d1);

    grp_cshake256_simple_absorb_clone_fu_38 : component sikep503_kem_enc_hw_cshake256_simple_absorb_clone
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cshake256_simple_absorb_clone_fu_38_ap_start,
        ap_done => grp_cshake256_simple_absorb_clone_fu_38_ap_done,
        ap_idle => grp_cshake256_simple_absorb_clone_fu_38_ap_idle,
        ap_ready => grp_cshake256_simple_absorb_clone_fu_38_ap_ready,
        s_address0 => grp_cshake256_simple_absorb_clone_fu_38_s_address0,
        s_ce0 => grp_cshake256_simple_absorb_clone_fu_38_s_ce0,
        s_we0 => grp_cshake256_simple_absorb_clone_fu_38_s_we0,
        s_d0 => grp_cshake256_simple_absorb_clone_fu_38_s_d0,
        s_q0 => s_q0,
        s_address1 => grp_cshake256_simple_absorb_clone_fu_38_s_address1,
        s_ce1 => grp_cshake256_simple_absorb_clone_fu_38_s_ce1,
        s_we1 => grp_cshake256_simple_absorb_clone_fu_38_s_we1,
        s_d1 => grp_cshake256_simple_absorb_clone_fu_38_s_d1,
        s_q1 => s_q1,
        in_r_address0 => grp_cshake256_simple_absorb_clone_fu_38_in_r_address0,
        in_r_ce0 => grp_cshake256_simple_absorb_clone_fu_38_in_r_ce0,
        in_r_q0 => in_r_q0);

    grp_KeccakF1600_StatePermute_fu_48 : component sikep503_kem_enc_hw_KeccakF1600_StatePermute
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_KeccakF1600_StatePermute_fu_48_ap_start,
        ap_done => grp_KeccakF1600_StatePermute_fu_48_ap_done,
        ap_idle => grp_KeccakF1600_StatePermute_fu_48_ap_idle,
        ap_ready => grp_KeccakF1600_StatePermute_fu_48_ap_ready,
        s_i_address0 => grp_KeccakF1600_StatePermute_fu_48_s_i_address0,
        s_i_ce0 => grp_KeccakF1600_StatePermute_fu_48_s_i_ce0,
        s_i_we0 => grp_KeccakF1600_StatePermute_fu_48_s_i_we0,
        s_i_d0 => grp_KeccakF1600_StatePermute_fu_48_s_i_d0,
        s_i_q0 => s_q0,
        s_i_address1 => grp_KeccakF1600_StatePermute_fu_48_s_i_address1,
        s_i_ce1 => grp_KeccakF1600_StatePermute_fu_48_s_i_ce1,
        s_i_we1 => grp_KeccakF1600_StatePermute_fu_48_s_i_we1,
        s_i_d1 => grp_KeccakF1600_StatePermute_fu_48_s_i_d1,
        s_i_q1 => s_q1);

    grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55 : component sikep503_kem_enc_hw_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_start,
        ap_done => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_done,
        ap_idle => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_idle,
        ap_ready => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_ready,
        t_132_address0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_address0,
        t_132_ce0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_ce0,
        t_132_we0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_we0,
        t_132_d0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_d0,
        t_132_address1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_address1,
        t_132_ce1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_ce1,
        t_132_we1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_we1,
        t_132_d1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_d1,
        t_131_address0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_address0,
        t_131_ce0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_ce0,
        t_131_we0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_we0,
        t_131_d0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_d0,
        t_131_address1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_address1,
        t_131_ce1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_ce1,
        t_131_we1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_we1,
        t_131_d1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_d1,
        t_130_address0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_address0,
        t_130_ce0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_ce0,
        t_130_we0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_we0,
        t_130_d0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_d0,
        t_130_address1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_address1,
        t_130_ce1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_ce1,
        t_130_we1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_we1,
        t_130_d1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_d1,
        t_address0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_address0,
        t_ce0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_ce0,
        t_we0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_we0,
        t_d0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_d0,
        t_address1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_address1,
        t_ce1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_ce1,
        t_we1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_we1,
        t_d1 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_d1,
        s_address0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_s_address0,
        s_ce0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_s_ce0,
        s_q0 => s_q0);

    grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64 : component sikep503_kem_enc_hw_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_start,
        ap_done => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_done,
        ap_idle => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_idle,
        ap_ready => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_ready,
        t_address0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_address0,
        t_ce0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_ce0,
        t_q0 => t_q0,
        t_130_address0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_130_address0,
        t_130_ce0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_130_ce0,
        t_130_q0 => t_38_q0,
        t_131_address0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_131_address0,
        t_131_ce0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_131_ce0,
        t_131_q0 => t_39_q0,
        t_132_address0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_132_address0,
        t_132_ce0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_132_ce0,
        t_132_q0 => t_40_q0,
        output_r_address0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_output_r_address0,
        output_r_ce0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_output_r_ce0,
        output_r_we0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_output_r_we0,
        output_r_d0 => grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_output_r_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_KeccakF1600_StatePermute_fu_48_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_KeccakF1600_StatePermute_fu_48_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_KeccakF1600_StatePermute_fu_48_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_KeccakF1600_StatePermute_fu_48_ap_ready = ap_const_logic_1)) then 
                    grp_KeccakF1600_StatePermute_fu_48_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_ready = ap_const_logic_1)) then 
                    grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_ready = ap_const_logic_1)) then 
                    grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_cshake256_simple_absorb_clone_fu_38_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_cshake256_simple_absorb_clone_fu_38_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_cshake256_simple_absorb_clone_fu_38_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_cshake256_simple_absorb_clone_fu_38_ap_ready = ap_const_logic_1)) then 
                    grp_cshake256_simple_absorb_clone_fu_38_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_cshake256_simple_absorb_clone_fu_38_ap_done, grp_KeccakF1600_StatePermute_fu_48_ap_done, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_done, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_cshake256_simple_absorb_clone_fu_38_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_KeccakF1600_StatePermute_fu_48_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_cshake256_simple_absorb_clone_fu_38_ap_done)
    begin
        if ((grp_cshake256_simple_absorb_clone_fu_38_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_KeccakF1600_StatePermute_fu_48_ap_done)
    begin
        if ((grp_KeccakF1600_StatePermute_fu_48_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_done)
    begin
        if ((grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_done)
    begin
        if ((grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_done, ap_CS_fsm_state8)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_done, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_KeccakF1600_StatePermute_fu_48_ap_start <= grp_KeccakF1600_StatePermute_fu_48_ap_start_reg;
    grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_start <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_ap_start_reg;
    grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_start <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_ap_start_reg;
    grp_cshake256_simple_absorb_clone_fu_38_ap_start <= grp_cshake256_simple_absorb_clone_fu_38_ap_start_reg;
    in_r_address0 <= grp_cshake256_simple_absorb_clone_fu_38_in_r_address0;
    in_r_ce0 <= grp_cshake256_simple_absorb_clone_fu_38_in_r_ce0;
    output_r_address0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_output_r_address0;
    output_r_ce0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_output_r_ce0;
    output_r_d0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_output_r_d0;
    output_r_we0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_output_r_we0;

    s_address0_assign_proc : process(grp_cshake256_simple_absorb_clone_fu_38_s_address0, grp_KeccakF1600_StatePermute_fu_48_s_i_address0, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_s_address0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            s_address0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_s_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_address0 <= grp_KeccakF1600_StatePermute_fu_48_s_i_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_address0 <= grp_cshake256_simple_absorb_clone_fu_38_s_address0;
        else 
            s_address0 <= "XXXXX";
        end if; 
    end process;


    s_address1_assign_proc : process(grp_cshake256_simple_absorb_clone_fu_38_s_address1, grp_KeccakF1600_StatePermute_fu_48_s_i_address1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_address1 <= grp_KeccakF1600_StatePermute_fu_48_s_i_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_address1 <= grp_cshake256_simple_absorb_clone_fu_38_s_address1;
        else 
            s_address1 <= "XXXXX";
        end if; 
    end process;


    s_ce0_assign_proc : process(grp_cshake256_simple_absorb_clone_fu_38_s_ce0, grp_KeccakF1600_StatePermute_fu_48_s_i_ce0, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_s_ce0, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            s_ce0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_s_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_ce0 <= grp_KeccakF1600_StatePermute_fu_48_s_i_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_ce0 <= grp_cshake256_simple_absorb_clone_fu_38_s_ce0;
        else 
            s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    s_ce1_assign_proc : process(grp_cshake256_simple_absorb_clone_fu_38_s_ce1, grp_KeccakF1600_StatePermute_fu_48_s_i_ce1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_ce1 <= grp_KeccakF1600_StatePermute_fu_48_s_i_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_ce1 <= grp_cshake256_simple_absorb_clone_fu_38_s_ce1;
        else 
            s_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    s_d0_assign_proc : process(grp_cshake256_simple_absorb_clone_fu_38_s_d0, grp_KeccakF1600_StatePermute_fu_48_s_i_d0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_d0 <= grp_KeccakF1600_StatePermute_fu_48_s_i_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_d0 <= grp_cshake256_simple_absorb_clone_fu_38_s_d0;
        else 
            s_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_d1_assign_proc : process(grp_cshake256_simple_absorb_clone_fu_38_s_d1, grp_KeccakF1600_StatePermute_fu_48_s_i_d1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_d1 <= grp_KeccakF1600_StatePermute_fu_48_s_i_d1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_d1 <= grp_cshake256_simple_absorb_clone_fu_38_s_d1;
        else 
            s_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    s_we0_assign_proc : process(grp_cshake256_simple_absorb_clone_fu_38_s_we0, grp_KeccakF1600_StatePermute_fu_48_s_i_we0, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_we0 <= grp_KeccakF1600_StatePermute_fu_48_s_i_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_we0 <= grp_cshake256_simple_absorb_clone_fu_38_s_we0;
        else 
            s_we0 <= ap_const_lv8_0;
        end if; 
    end process;


    s_we1_assign_proc : process(grp_cshake256_simple_absorb_clone_fu_38_s_we1, grp_KeccakF1600_StatePermute_fu_48_s_i_we1, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            s_we1 <= grp_KeccakF1600_StatePermute_fu_48_s_i_we1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            s_we1 <= grp_cshake256_simple_absorb_clone_fu_38_s_we1;
        else 
            s_we1 <= ap_const_lv8_0;
        end if; 
    end process;


    t_38_address0_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_address0, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_130_address0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_38_address0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_130_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_38_address0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_address0;
        else 
            t_38_address0 <= "XXXXXX";
        end if; 
    end process;


    t_38_ce0_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_ce0, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_130_ce0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_38_ce0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_130_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_38_ce0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_ce0;
        else 
            t_38_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t_38_ce1_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_38_ce1 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_ce1;
        else 
            t_38_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    t_38_we0_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_38_we0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_we0;
        else 
            t_38_we0 <= ap_const_logic_0;
        end if; 
    end process;


    t_38_we1_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_we1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_38_we1 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_130_we1;
        else 
            t_38_we1 <= ap_const_logic_0;
        end if; 
    end process;


    t_39_address0_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_address0, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_131_address0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_39_address0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_131_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_39_address0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_address0;
        else 
            t_39_address0 <= "XXXXXX";
        end if; 
    end process;


    t_39_ce0_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_ce0, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_131_ce0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_39_ce0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_131_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_39_ce0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_ce0;
        else 
            t_39_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t_39_ce1_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_39_ce1 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_ce1;
        else 
            t_39_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    t_39_we0_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_39_we0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_we0;
        else 
            t_39_we0 <= ap_const_logic_0;
        end if; 
    end process;


    t_39_we1_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_we1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_39_we1 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_131_we1;
        else 
            t_39_we1 <= ap_const_logic_0;
        end if; 
    end process;


    t_40_address0_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_address0, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_132_address0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_40_address0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_132_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_40_address0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_address0;
        else 
            t_40_address0 <= "XXXXXX";
        end if; 
    end process;


    t_40_ce0_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_ce0, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_132_ce0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_40_ce0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_132_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_40_ce0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_ce0;
        else 
            t_40_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t_40_ce1_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_40_ce1 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_ce1;
        else 
            t_40_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    t_40_we0_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_40_we0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_we0;
        else 
            t_40_we0 <= ap_const_logic_0;
        end if; 
    end process;


    t_40_we1_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_we1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_40_we1 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_132_we1;
        else 
            t_40_we1 <= ap_const_logic_0;
        end if; 
    end process;


    t_address0_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_address0, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_address0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_address0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_address0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_address0;
        else 
            t_address0 <= "XXXXXX";
        end if; 
    end process;


    t_ce0_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_ce0, grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_ce0, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            t_ce0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_570_1_fu_64_t_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_ce0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_ce0;
        else 
            t_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    t_ce1_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_ce1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_ce1 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_ce1;
        else 
            t_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    t_we0_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_we0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_we0 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_we0;
        else 
            t_we0 <= ap_const_logic_0;
        end if; 
    end process;


    t_we1_assign_proc : process(grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_we1, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            t_we1 <= grp_cshake256_simple_32_clone_Pipeline_VITIS_LOOP_377_2_fu_55_t_we1;
        else 
            t_we1 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
