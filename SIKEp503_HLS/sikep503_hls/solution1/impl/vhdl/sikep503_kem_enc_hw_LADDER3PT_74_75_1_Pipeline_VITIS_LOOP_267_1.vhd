-- ==============================================================
-- Generated by Vitis HLS v2024.2.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sikep503_kem_enc_hw_LADDER3PT_74_75_1_Pipeline_VITIS_LOOP_267_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    R2_X_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    R2_X_ce0 : OUT STD_LOGIC;
    R2_X_we0 : OUT STD_LOGIC;
    R2_X_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    R2_X_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    R2_X_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    R2_X_2_ce0 : OUT STD_LOGIC;
    R2_X_2_we0 : OUT STD_LOGIC;
    R2_X_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    R2_X_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    R2_Z_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    R2_Z_ce0 : OUT STD_LOGIC;
    R2_Z_we0 : OUT STD_LOGIC;
    R2_Z_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    R2_Z_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    R2_Z_2_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    R2_Z_2_ce0 : OUT STD_LOGIC;
    R2_Z_2_we0 : OUT STD_LOGIC;
    R2_Z_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    R2_Z_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    R_X_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    R_X_ce0 : OUT STD_LOGIC;
    R_X_we0 : OUT STD_LOGIC;
    R_X_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    R_X_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    R_X_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    R_X_ce1 : OUT STD_LOGIC;
    R_X_we1 : OUT STD_LOGIC;
    R_X_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    R_X_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    sext_ln288 : IN STD_LOGIC_VECTOR (0 downto 0);
    R_Z_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    R_Z_ce0 : OUT STD_LOGIC;
    R_Z_we0 : OUT STD_LOGIC;
    R_Z_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    R_Z_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    R_Z_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    R_Z_ce1 : OUT STD_LOGIC;
    R_Z_we1 : OUT STD_LOGIC;
    R_Z_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    R_Z_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of sikep503_kem_enc_hw_LADDER3PT_74_75_1_Pipeline_VITIS_LOOP_267_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln267_fu_176_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln288_cast_fu_160_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln288_cast_reg_312 : STD_LOGIC_VECTOR (63 downto 0);
    signal R2_X_addr_reg_323 : STD_LOGIC_VECTOR (2 downto 0);
    signal R2_X_2_addr_reg_328 : STD_LOGIC_VECTOR (2 downto 0);
    signal R2_Z_addr_reg_333 : STD_LOGIC_VECTOR (2 downto 0);
    signal R2_Z_2_addr_reg_338 : STD_LOGIC_VECTOR (2 downto 0);
    signal R_X_addr_reg_343 : STD_LOGIC_VECTOR (3 downto 0);
    signal R_Z_addr_reg_348 : STD_LOGIC_VECTOR (3 downto 0);
    signal R_X_addr_4_reg_353 : STD_LOGIC_VECTOR (3 downto 0);
    signal R_Z_addr_9_reg_358 : STD_LOGIC_VECTOR (3 downto 0);
    signal R_X_load_reg_363 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal R2_X_load_reg_369 : STD_LOGIC_VECTOR (63 downto 0);
    signal R_Z_load_reg_375 : STD_LOGIC_VECTOR (63 downto 0);
    signal R_X_load_3_reg_381 : STD_LOGIC_VECTOR (63 downto 0);
    signal R_Z_load_5_reg_387 : STD_LOGIC_VECTOR (63 downto 0);
    signal R2_X_2_load_reg_393 : STD_LOGIC_VECTOR (63 downto 0);
    signal R2_Z_load_reg_399 : STD_LOGIC_VECTOR (63 downto 0);
    signal R2_Z_2_load_reg_405 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln269_fu_192_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln275_fu_210_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_270_fu_48 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln267_fu_182_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i : STD_LOGIC_VECTOR (3 downto 0);
    signal R_X_ce1_local : STD_LOGIC;
    signal R_X_address1_local : STD_LOGIC_VECTOR (3 downto 0);
    signal R_X_ce0_local : STD_LOGIC;
    signal R_X_address0_local : STD_LOGIC_VECTOR (3 downto 0);
    signal R_X_we1_local : STD_LOGIC;
    signal xor_ln270_fu_230_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal R_X_we0_local : STD_LOGIC;
    signal xor_ln276_fu_251_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal R2_X_ce0_local : STD_LOGIC;
    signal R2_X_address0_local : STD_LOGIC_VECTOR (2 downto 0);
    signal R2_X_we0_local : STD_LOGIC;
    signal xor_ln271_fu_236_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal R_Z_ce1_local : STD_LOGIC;
    signal R_Z_address1_local : STD_LOGIC_VECTOR (3 downto 0);
    signal R_Z_ce0_local : STD_LOGIC;
    signal R_Z_address0_local : STD_LOGIC_VECTOR (3 downto 0);
    signal R_Z_we1_local : STD_LOGIC;
    signal xor_ln273_fu_272_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal R_Z_we0_local : STD_LOGIC;
    signal xor_ln279_fu_293_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal R2_X_2_ce0_local : STD_LOGIC;
    signal R2_X_2_address0_local : STD_LOGIC_VECTOR (2 downto 0);
    signal R2_X_2_we0_local : STD_LOGIC;
    signal xor_ln277_fu_257_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal R2_Z_ce0_local : STD_LOGIC;
    signal R2_Z_address0_local : STD_LOGIC_VECTOR (2 downto 0);
    signal R2_Z_we0_local : STD_LOGIC;
    signal xor_ln274_fu_278_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal R2_Z_2_ce0_local : STD_LOGIC;
    signal R2_Z_2_address0_local : STD_LOGIC_VECTOR (2 downto 0);
    signal R2_Z_2_we0_local : STD_LOGIC;
    signal xor_ln280_fu_299_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln269_fu_188_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln_fu_202_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln269_fu_221_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_fu_225_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln275_fu_242_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_97_fu_246_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln272_fu_263_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_96_fu_267_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln278_fu_284_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_98_fu_288_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_270_fu_48_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                if ((icmp_ln267_fu_176_p2 = ap_const_lv1_0)) then 
                    i_270_fu_48 <= add_ln267_fu_182_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_270_fu_48 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                R2_X_2_addr_reg_328 <= zext_ln269_fu_192_p1(3 - 1 downto 0);
                R2_X_addr_reg_323 <= zext_ln269_fu_192_p1(3 - 1 downto 0);
                R2_Z_2_addr_reg_338 <= zext_ln269_fu_192_p1(3 - 1 downto 0);
                R2_Z_addr_reg_333 <= zext_ln269_fu_192_p1(3 - 1 downto 0);
                    R_X_addr_4_reg_353(2 downto 0) <= zext_ln275_fu_210_p1(4 - 1 downto 0)(2 downto 0);
                    R_X_addr_reg_343(2 downto 0) <= zext_ln269_fu_192_p1(4 - 1 downto 0)(2 downto 0);
                    R_Z_addr_9_reg_358(2 downto 0) <= zext_ln275_fu_210_p1(4 - 1 downto 0)(2 downto 0);
                    R_Z_addr_reg_348(2 downto 0) <= zext_ln269_fu_192_p1(4 - 1 downto 0)(2 downto 0);
                sext_ln288_cast_reg_312 <= sext_ln288_cast_fu_160_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                R2_X_2_load_reg_393 <= R2_X_2_q0;
                R2_X_load_reg_369 <= R2_X_q0;
                R2_Z_2_load_reg_405 <= R2_Z_2_q0;
                R2_Z_load_reg_399 <= R2_Z_q0;
                R_X_load_3_reg_381 <= R_X_q0;
                R_X_load_reg_363 <= R_X_q1;
                R_Z_load_5_reg_387 <= R_Z_q0;
                R_Z_load_reg_375 <= R_Z_q1;
            end if;
        end if;
    end process;
    R_X_addr_reg_343(3) <= '0';
    R_Z_addr_reg_348(3) <= '0';
    R_X_addr_4_reg_353(3) <= '1';
    R_Z_addr_9_reg_358(3) <= '1';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln267_fu_176_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((icmp_ln267_fu_176_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    R2_X_2_address0 <= R2_X_2_address0_local;

    R2_X_2_address0_local_assign_proc : process(ap_CS_fsm_state1, icmp_ln267_fu_176_p2, ap_CS_fsm_state3, R2_X_2_addr_reg_328, zext_ln269_fu_192_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R2_X_2_address0_local <= R2_X_2_addr_reg_328;
        elsif (((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            R2_X_2_address0_local <= zext_ln269_fu_192_p1(3 - 1 downto 0);
        else 
            R2_X_2_address0_local <= "XXX";
        end if; 
    end process;

    R2_X_2_ce0 <= R2_X_2_ce0_local;

    R2_X_2_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln267_fu_176_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            R2_X_2_ce0_local <= ap_const_logic_1;
        else 
            R2_X_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    R2_X_2_d0 <= xor_ln277_fu_257_p2;
    R2_X_2_we0 <= R2_X_2_we0_local;

    R2_X_2_we0_local_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R2_X_2_we0_local <= ap_const_logic_1;
        else 
            R2_X_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    R2_X_address0 <= R2_X_address0_local;

    R2_X_address0_local_assign_proc : process(ap_CS_fsm_state1, icmp_ln267_fu_176_p2, ap_CS_fsm_state3, R2_X_addr_reg_323, zext_ln269_fu_192_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R2_X_address0_local <= R2_X_addr_reg_323;
        elsif (((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            R2_X_address0_local <= zext_ln269_fu_192_p1(3 - 1 downto 0);
        else 
            R2_X_address0_local <= "XXX";
        end if; 
    end process;

    R2_X_ce0 <= R2_X_ce0_local;

    R2_X_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln267_fu_176_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            R2_X_ce0_local <= ap_const_logic_1;
        else 
            R2_X_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    R2_X_d0 <= xor_ln271_fu_236_p2;
    R2_X_we0 <= R2_X_we0_local;

    R2_X_we0_local_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R2_X_we0_local <= ap_const_logic_1;
        else 
            R2_X_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    R2_Z_2_address0 <= R2_Z_2_address0_local;

    R2_Z_2_address0_local_assign_proc : process(ap_CS_fsm_state1, icmp_ln267_fu_176_p2, ap_CS_fsm_state3, R2_Z_2_addr_reg_338, zext_ln269_fu_192_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R2_Z_2_address0_local <= R2_Z_2_addr_reg_338;
        elsif (((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            R2_Z_2_address0_local <= zext_ln269_fu_192_p1(3 - 1 downto 0);
        else 
            R2_Z_2_address0_local <= "XXX";
        end if; 
    end process;

    R2_Z_2_ce0 <= R2_Z_2_ce0_local;

    R2_Z_2_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln267_fu_176_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            R2_Z_2_ce0_local <= ap_const_logic_1;
        else 
            R2_Z_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    R2_Z_2_d0 <= xor_ln280_fu_299_p2;
    R2_Z_2_we0 <= R2_Z_2_we0_local;

    R2_Z_2_we0_local_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R2_Z_2_we0_local <= ap_const_logic_1;
        else 
            R2_Z_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    R2_Z_address0 <= R2_Z_address0_local;

    R2_Z_address0_local_assign_proc : process(ap_CS_fsm_state1, icmp_ln267_fu_176_p2, ap_CS_fsm_state3, R2_Z_addr_reg_333, zext_ln269_fu_192_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R2_Z_address0_local <= R2_Z_addr_reg_333;
        elsif (((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            R2_Z_address0_local <= zext_ln269_fu_192_p1(3 - 1 downto 0);
        else 
            R2_Z_address0_local <= "XXX";
        end if; 
    end process;

    R2_Z_ce0 <= R2_Z_ce0_local;

    R2_Z_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln267_fu_176_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            R2_Z_ce0_local <= ap_const_logic_1;
        else 
            R2_Z_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    R2_Z_d0 <= xor_ln274_fu_278_p2;
    R2_Z_we0 <= R2_Z_we0_local;

    R2_Z_we0_local_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R2_Z_we0_local <= ap_const_logic_1;
        else 
            R2_Z_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    R_X_address0 <= R_X_address0_local;

    R_X_address0_local_assign_proc : process(ap_CS_fsm_state1, icmp_ln267_fu_176_p2, ap_CS_fsm_state3, R_X_addr_4_reg_353, zext_ln275_fu_210_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R_X_address0_local <= R_X_addr_4_reg_353;
        elsif (((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            R_X_address0_local <= zext_ln275_fu_210_p1(4 - 1 downto 0);
        else 
            R_X_address0_local <= "XXXX";
        end if; 
    end process;

    R_X_address1 <= R_X_address1_local;

    R_X_address1_local_assign_proc : process(ap_CS_fsm_state1, icmp_ln267_fu_176_p2, ap_CS_fsm_state3, R_X_addr_reg_343, zext_ln269_fu_192_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R_X_address1_local <= R_X_addr_reg_343;
        elsif (((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            R_X_address1_local <= zext_ln269_fu_192_p1(4 - 1 downto 0);
        else 
            R_X_address1_local <= "XXXX";
        end if; 
    end process;

    R_X_ce0 <= R_X_ce0_local;

    R_X_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln267_fu_176_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            R_X_ce0_local <= ap_const_logic_1;
        else 
            R_X_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    R_X_ce1 <= R_X_ce1_local;

    R_X_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln267_fu_176_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            R_X_ce1_local <= ap_const_logic_1;
        else 
            R_X_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    R_X_d0 <= xor_ln276_fu_251_p2;
    R_X_d1 <= xor_ln270_fu_230_p2;
    R_X_we0 <= R_X_we0_local;

    R_X_we0_local_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R_X_we0_local <= ap_const_logic_1;
        else 
            R_X_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    R_X_we1 <= R_X_we1_local;

    R_X_we1_local_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R_X_we1_local <= ap_const_logic_1;
        else 
            R_X_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    R_Z_address0 <= R_Z_address0_local;

    R_Z_address0_local_assign_proc : process(ap_CS_fsm_state1, icmp_ln267_fu_176_p2, ap_CS_fsm_state3, R_Z_addr_9_reg_358, zext_ln275_fu_210_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R_Z_address0_local <= R_Z_addr_9_reg_358;
        elsif (((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            R_Z_address0_local <= zext_ln275_fu_210_p1(4 - 1 downto 0);
        else 
            R_Z_address0_local <= "XXXX";
        end if; 
    end process;

    R_Z_address1 <= R_Z_address1_local;

    R_Z_address1_local_assign_proc : process(ap_CS_fsm_state1, icmp_ln267_fu_176_p2, ap_CS_fsm_state3, R_Z_addr_reg_348, zext_ln269_fu_192_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R_Z_address1_local <= R_Z_addr_reg_348;
        elsif (((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            R_Z_address1_local <= zext_ln269_fu_192_p1(4 - 1 downto 0);
        else 
            R_Z_address1_local <= "XXXX";
        end if; 
    end process;

    R_Z_ce0 <= R_Z_ce0_local;

    R_Z_ce0_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln267_fu_176_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            R_Z_ce0_local <= ap_const_logic_1;
        else 
            R_Z_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    R_Z_ce1 <= R_Z_ce1_local;

    R_Z_ce1_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln267_fu_176_p2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln267_fu_176_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            R_Z_ce1_local <= ap_const_logic_1;
        else 
            R_Z_ce1_local <= ap_const_logic_0;
        end if; 
    end process;

    R_Z_d0 <= xor_ln279_fu_293_p2;
    R_Z_d1 <= xor_ln273_fu_272_p2;
    R_Z_we0 <= R_Z_we0_local;

    R_Z_we0_local_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R_Z_we0_local <= ap_const_logic_1;
        else 
            R_Z_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    R_Z_we1 <= R_Z_we1_local;

    R_Z_we1_local_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            R_Z_we1_local <= ap_const_logic_1;
        else 
            R_Z_we1_local <= ap_const_logic_0;
        end if; 
    end process;

    add_ln267_fu_182_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv4_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1_pp0_stage0_iter0)
    begin
        if ((ap_const_boolean_1 = ap_block_state1_pp0_stage0_iter0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start_int)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start_int = ap_const_logic_0);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, icmp_ln267_fu_176_p2)
    begin
        if (((icmp_ln267_fu_176_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_state1, ap_block_state1_pp0_stage0_iter0, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_state1_pp0_stage0_iter0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_state1, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_assign_proc : process(ap_CS_fsm_state1, i_270_fu_48, ap_loop_init)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i <= i_270_fu_48;
        end if; 
    end process;

    icmp_ln267_fu_176_p2 <= "1" when (ap_sig_allocacmp_i = ap_const_lv4_8) else "0";
    sext_ln288_cast_fu_160_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (sext_ln288(0) = '1') else 
        ap_const_lv64_0;
    temp_96_fu_267_p2 <= (xor_ln272_fu_263_p2 and sext_ln288_cast_reg_312);
    temp_97_fu_246_p2 <= (xor_ln275_fu_242_p2 and sext_ln288_cast_reg_312);
    temp_98_fu_288_p2 <= (xor_ln278_fu_284_p2 and sext_ln288_cast_reg_312);
    temp_fu_225_p2 <= (xor_ln269_fu_221_p2 and sext_ln288_cast_reg_312);
    trunc_ln269_fu_188_p1 <= ap_sig_allocacmp_i(3 - 1 downto 0);
    xor_ln269_fu_221_p2 <= (R_X_load_reg_363 xor R2_X_load_reg_369);
    xor_ln270_fu_230_p2 <= (temp_fu_225_p2 xor R_X_load_reg_363);
    xor_ln271_fu_236_p2 <= (temp_fu_225_p2 xor R2_X_load_reg_369);
    xor_ln272_fu_263_p2 <= (R_Z_load_reg_375 xor R2_Z_load_reg_399);
    xor_ln273_fu_272_p2 <= (temp_96_fu_267_p2 xor R_Z_load_reg_375);
    xor_ln274_fu_278_p2 <= (temp_96_fu_267_p2 xor R2_Z_load_reg_399);
    xor_ln275_fu_242_p2 <= (R_X_load_3_reg_381 xor R2_X_2_load_reg_393);
    xor_ln276_fu_251_p2 <= (temp_97_fu_246_p2 xor R_X_load_3_reg_381);
    xor_ln277_fu_257_p2 <= (temp_97_fu_246_p2 xor R2_X_2_load_reg_393);
    xor_ln278_fu_284_p2 <= (R_Z_load_5_reg_387 xor R2_Z_2_load_reg_405);
    xor_ln279_fu_293_p2 <= (temp_98_fu_288_p2 xor R_Z_load_5_reg_387);
    xor_ln280_fu_299_p2 <= (temp_98_fu_288_p2 xor R2_Z_2_load_reg_405);
    zext_ln269_fu_192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln269_fu_188_p1),32));
    zext_ln275_fu_210_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln_fu_202_p3),32));
    zext_ln_fu_202_p3 <= (ap_const_lv1_1 & trunc_ln269_fu_188_p1);
end behav;
