-- ==============================================================
-- Generated by Vitis HLS v2024.2.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sikep503_kem_enc_hw_fp2_decode_1_Pipeline_VITIS_LOOP_53_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem2_0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem2_0_AWREADY : IN STD_LOGIC;
    m_axi_gmem2_0_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_WVALID : OUT STD_LOGIC;
    m_axi_gmem2_0_WREADY : IN STD_LOGIC;
    m_axi_gmem2_0_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_0_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_WLAST : OUT STD_LOGIC;
    m_axi_gmem2_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem2_0_ARREADY : IN STD_LOGIC;
    m_axi_gmem2_0_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem2_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem2_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem2_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_RVALID : IN STD_LOGIC;
    m_axi_gmem2_0_RREADY : OUT STD_LOGIC;
    m_axi_gmem2_0_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem2_0_RLAST : IN STD_LOGIC;
    m_axi_gmem2_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
    m_axi_gmem2_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_BVALID : IN STD_LOGIC;
    m_axi_gmem2_0_BREADY : OUT STD_LOGIC;
    m_axi_gmem2_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem2_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem2_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    enc : IN STD_LOGIC_VECTOR (31 downto 0);
    PKB_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    PKB_ce0 : OUT STD_LOGIC;
    PKB_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    PKB_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of sikep503_kem_enc_hw_fp2_decode_1_Pipeline_VITIS_LOOP_53_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal icmp_ln53_reg_268 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_io_grp1 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone_grp1_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage1_subdone_grp1 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone_grp3_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage1_subdone_grp3 : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage1 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem2_blk_n_AR : STD_LOGIC;
    signal ap_block_pp0_stage1_grp1 : BOOLEAN;
    signal gmem2_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage1_grp3 : BOOLEAN;
    signal ap_block_pp0_stage0_grp2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp2_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage0_grp4 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp4_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp4 : BOOLEAN;
    signal i_reg_260 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_reg_260_pp0_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_260_pp0_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_260_pp0_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_260_pp0_iter4_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln53_fu_127_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem2_addr_reg_272 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_addr_2_reg_278 : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem2_addr_read_reg_284 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage1_11001_grp3 : BOOLEAN;
    signal shl_ln55_fu_195_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln55_reg_289 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp0 : BOOLEAN;
    signal zext_ln55_4_fu_207_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln55_4_reg_294 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln_fu_218_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln_reg_299 : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem2_addr_2_read_reg_304 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_11001_grp4 : BOOLEAN;
    signal zext_ln55_5_fu_227_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_grp0 : BOOLEAN;
    signal zext_ln56_8_fu_248_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_grp0 : BOOLEAN;
    signal add_ln55_fu_141_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal add_ln56_fu_163_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_11001_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_grp2 : BOOLEAN;
    signal i_244_fu_66 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal add_ln53_fu_175_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage1_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage1_subdone_grp0 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i : STD_LOGIC_VECTOR (5 downto 0);
    signal PKB_ce0_local : STD_LOGIC;
    signal PKB_we0_local : STD_LOGIC_VECTOR (7 downto 0);
    signal PKB_address0_local : STD_LOGIC_VECTOR (5 downto 0);
    signal PKB_d0_local : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln55_4_fu_211_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln56_fu_235_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln49_fu_137_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln53_fu_133_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln56_3_fu_153_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln56_6_fu_159_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln55_fu_188_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln55_3_fu_191_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln55_3_fu_202_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln55_fu_185_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_fu_232_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_7_fu_241_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_1to5 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_condition_247 : BOOLEAN;
    signal ap_condition_483 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component sikep503_kem_enc_hw_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage1,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                        ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0)) then 
                        ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp2_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp2_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                        ap_block_pp0_stage0_subdone_grp2_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2)) then 
                        ap_block_pp0_stage0_subdone_grp2_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp4_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp4_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                        ap_block_pp0_stage0_subdone_grp4_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4)) then 
                        ap_block_pp0_stage0_subdone_grp4_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage1_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then 
                        ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0)) then 
                        ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage1_subdone_grp1_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage1_subdone_grp1_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then 
                        ap_block_pp0_stage1_subdone_grp1_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1)) then 
                        ap_block_pp0_stage1_subdone_grp1_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage1_subdone_grp3_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage1_subdone_grp3_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then 
                        ap_block_pp0_stage1_subdone_grp3_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp3)) then 
                        ap_block_pp0_stage1_subdone_grp3_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage1)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    i_244_fu_66_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_244_fu_66 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (icmp_ln53_reg_268 = ap_const_lv1_0))) then 
                i_244_fu_66 <= add_ln53_fu_175_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp4) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg))) then
                gmem2_addr_2_read_reg_304 <= m_axi_gmem2_0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                gmem2_addr_2_reg_278 <= add_ln56_fu_163_p2;
                gmem2_addr_reg_272 <= add_ln55_fu_141_p2;
                i_reg_260 <= ap_sig_allocacmp_i;
                i_reg_260_pp0_iter1_reg <= i_reg_260;
                i_reg_260_pp0_iter2_reg <= i_reg_260_pp0_iter1_reg;
                i_reg_260_pp0_iter3_reg <= i_reg_260_pp0_iter2_reg;
                i_reg_260_pp0_iter4_reg <= i_reg_260_pp0_iter3_reg;
                icmp_ln53_reg_268 <= icmp_ln53_fu_127_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp3) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp3_done_reg))) then
                gmem2_addr_read_reg_284 <= m_axi_gmem2_0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0))) then
                lshr_ln_reg_299 <= i_reg_260_pp0_iter4_reg(5 downto 3);
                shl_ln55_reg_289 <= shl_ln55_fu_195_p2;
                    zext_ln55_4_reg_294(5 downto 0) <= zext_ln55_4_fu_207_p1(5 downto 0);
            end if;
        end if;
    end process;
    zext_ln55_4_reg_294(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to5, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to5 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    PKB_address0 <= PKB_address0_local;

    PKB_address0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, zext_ln55_5_fu_227_p1, ap_block_pp0_stage0_grp0, zext_ln56_8_fu_248_p1, ap_block_pp0_stage1_grp0)
    begin
        if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp0))) then 
                PKB_address0_local <= zext_ln56_8_fu_248_p1(6 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp0))) then 
                PKB_address0_local <= zext_ln55_5_fu_227_p1(6 - 1 downto 0);
            else 
                PKB_address0_local <= "XXXXXX";
            end if;
        else 
            PKB_address0_local <= "XXXXXX";
        end if; 
    end process;

    PKB_ce0 <= PKB_ce0_local;

    PKB_ce0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0)) or ((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0)))) then 
            PKB_ce0_local <= ap_const_logic_1;
        else 
            PKB_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    PKB_d0 <= PKB_d0_local;

    PKB_d0_local_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_grp0, ap_block_pp0_stage1_grp0, shl_ln55_4_fu_211_p2, shl_ln56_fu_235_p2)
    begin
        if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp0))) then 
                PKB_d0_local <= shl_ln56_fu_235_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp0))) then 
                PKB_d0_local <= shl_ln55_4_fu_211_p2;
            else 
                PKB_d0_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            PKB_d0_local <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    PKB_we0 <= PKB_we0_local;

    PKB_we0_local_assign_proc : process(ap_enable_reg_pp0_iter5, shl_ln55_fu_195_p2, shl_ln55_reg_289, ap_condition_247, ap_condition_483)
    begin
        if ((ap_enable_reg_pp0_iter5 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_483)) then 
                PKB_we0_local <= shl_ln55_reg_289;
            elsif ((ap_const_boolean_1 = ap_condition_247)) then 
                PKB_we0_local <= shl_ln55_fu_195_p2;
            else 
                PKB_we0_local <= ap_const_lv8_0;
            end if;
        else 
            PKB_we0_local <= ap_const_lv8_0;
        end if; 
    end process;

    add_ln53_fu_175_p2 <= std_logic_vector(unsigned(i_reg_260) + unsigned(ap_const_lv6_1));
    add_ln55_fu_141_p2 <= std_logic_vector(unsigned(zext_ln49_fu_137_p1) + unsigned(enc));
    add_ln56_3_fu_153_p2 <= std_logic_vector(unsigned(zext_ln53_fu_133_p1) + unsigned(ap_const_lv7_3F));
    add_ln56_fu_163_p2 <= std_logic_vector(unsigned(zext_ln56_6_fu_159_p1) + unsigned(enc));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, m_axi_gmem2_0_ARREADY, m_axi_gmem2_0_RVALID, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_block_pp0_stage0_subdone_grp4_done_reg)
    begin
                ap_block_pp0_stage0_11001 <= (((m_axi_gmem2_0_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg)) or ((m_axi_gmem2_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg)));
    end process;

        ap_block_pp0_stage0_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_grp2_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem2_0_ARREADY, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_11001_grp2 <= ((m_axi_gmem2_0_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg));
    end process;


    ap_block_pp0_stage0_11001_grp4_assign_proc : process(ap_enable_reg_pp0_iter5, m_axi_gmem2_0_RVALID, ap_block_pp0_stage0_subdone_grp4_done_reg)
    begin
                ap_block_pp0_stage0_11001_grp4 <= ((m_axi_gmem2_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg));
    end process;

        ap_block_pp0_stage0_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_grp4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, m_axi_gmem2_0_ARREADY, m_axi_gmem2_0_RVALID, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_block_pp0_stage0_subdone_grp4_done_reg)
    begin
                ap_block_pp0_stage0_subdone <= (((m_axi_gmem2_0_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg)) or ((m_axi_gmem2_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg)));
    end process;

        ap_block_pp0_stage0_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_grp2_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem2_0_ARREADY, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
                ap_block_pp0_stage0_subdone_grp2 <= ((m_axi_gmem2_0_ARREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg));
    end process;


    ap_block_pp0_stage0_subdone_grp4_assign_proc : process(ap_enable_reg_pp0_iter5, m_axi_gmem2_0_RVALID, ap_block_pp0_stage0_subdone_grp4_done_reg)
    begin
                ap_block_pp0_stage0_subdone_grp4 <= ((m_axi_gmem2_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter4, m_axi_gmem2_0_RVALID, ap_block_state2_io_grp1, ap_block_pp0_stage1_subdone_grp1_done_reg, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage1_subdone_grp3_done_reg)
    begin
                ap_block_pp0_stage1_11001 <= (((m_axi_gmem2_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp3_done_reg)) or ((ap_const_boolean_1 = ap_block_state2_io_grp1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg)));
    end process;

        ap_block_pp0_stage1_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_grp1_assign_proc : process(ap_block_state2_io_grp1, ap_block_pp0_stage1_subdone_grp1_done_reg, ap_enable_reg_pp0_iter0_reg)
    begin
                ap_block_pp0_stage1_11001_grp1 <= ((ap_const_boolean_1 = ap_block_state2_io_grp1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg));
    end process;


    ap_block_pp0_stage1_11001_grp3_assign_proc : process(ap_enable_reg_pp0_iter4, m_axi_gmem2_0_RVALID, ap_block_pp0_stage1_subdone_grp3_done_reg)
    begin
                ap_block_pp0_stage1_11001_grp3 <= ((m_axi_gmem2_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp3_done_reg));
    end process;

        ap_block_pp0_stage1_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_grp3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter4, m_axi_gmem2_0_RVALID, ap_block_state2_io_grp1, ap_block_pp0_stage1_subdone_grp1_done_reg, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage1_subdone_grp3_done_reg)
    begin
                ap_block_pp0_stage1_subdone <= (((m_axi_gmem2_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp3_done_reg)) or ((ap_const_boolean_1 = ap_block_state2_io_grp1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg)));
    end process;

        ap_block_pp0_stage1_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_grp1_assign_proc : process(ap_block_state2_io_grp1, ap_block_pp0_stage1_subdone_grp1_done_reg, ap_enable_reg_pp0_iter0_reg)
    begin
                ap_block_pp0_stage1_subdone_grp1 <= ((ap_const_boolean_1 = ap_block_state2_io_grp1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg));
    end process;


    ap_block_pp0_stage1_subdone_grp3_assign_proc : process(ap_enable_reg_pp0_iter4, m_axi_gmem2_0_RVALID, ap_block_pp0_stage1_subdone_grp3_done_reg)
    begin
                ap_block_pp0_stage1_subdone_grp3 <= ((m_axi_gmem2_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp3_done_reg));
    end process;


    ap_block_state2_io_grp1_assign_proc : process(m_axi_gmem2_0_ARREADY, icmp_ln53_reg_268)
    begin
                ap_block_state2_io_grp1 <= ((m_axi_gmem2_0_ARREADY = ap_const_logic_0) and (icmp_ln53_reg_268 = ap_const_lv1_0));
    end process;


    ap_condition_247_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg)
    begin
                ap_condition_247 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0));
    end process;


    ap_condition_483_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
                ap_condition_483 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0));
    end process;


    ap_condition_exit_pp0_iter0_stage1_assign_proc : process(ap_CS_fsm_pp0_stage1, icmp_ln53_reg_268, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter0_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (icmp_ln53_reg_268 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter4_reg)
    begin
        if (((ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to5_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to5 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to5 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage1;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter0_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_244_fu_66, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_i <= ap_const_lv6_0;
        else 
            ap_sig_allocacmp_i <= i_244_fu_66;
        end if; 
    end process;


    gmem2_blk_n_AR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, m_axi_gmem2_0_ARREADY, icmp_ln53_reg_268, ap_block_pp0_stage1_subdone_grp1_done_reg, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage1_grp1, ap_block_pp0_stage0_grp2, ap_block_pp0_stage0_subdone_grp2_done_reg)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg) and (icmp_ln53_reg_268 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp2)))) then 
            gmem2_blk_n_AR <= m_axi_gmem2_0_ARREADY;
        else 
            gmem2_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem2_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, m_axi_gmem2_0_RVALID, ap_block_pp0_stage1_subdone_grp3_done_reg, ap_block_pp0_stage1_grp3, ap_block_pp0_stage0_grp4, ap_block_pp0_stage0_subdone_grp4_done_reg)
    begin
        if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_grp4)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp3) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp3_done_reg)))) then 
            gmem2_blk_n_R <= m_axi_gmem2_0_RVALID;
        else 
            gmem2_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln53_fu_127_p2 <= "1" when (ap_sig_allocacmp_i = ap_const_lv6_3F) else "0";
    lshr_ln_fu_218_p4 <= i_reg_260_pp0_iter4_reg(5 downto 3);

    m_axi_gmem2_0_ARADDR_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln53_reg_268, ap_block_pp0_stage1_subdone_grp1_done_reg, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_subdone_grp2_done_reg, gmem2_addr_reg_272, gmem2_addr_2_reg_278, ap_block_pp0_stage1_11001_grp1, ap_block_pp0_stage0_11001_grp2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg))) then 
            m_axi_gmem2_0_ARADDR <= gmem2_addr_2_reg_278;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg) and (icmp_ln53_reg_268 = ap_const_lv1_0))) then 
            m_axi_gmem2_0_ARADDR <= gmem2_addr_reg_272;
        else 
            m_axi_gmem2_0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_gmem2_0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem2_0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem2_0_ARID <= ap_const_lv1_0;
    m_axi_gmem2_0_ARLEN <= ap_const_lv32_1;
    m_axi_gmem2_0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem2_0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem2_0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem2_0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem2_0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem2_0_ARUSER <= ap_const_lv1_0;

    m_axi_gmem2_0_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage1, icmp_ln53_reg_268, ap_block_pp0_stage1_subdone_grp1_done_reg, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage0_subdone_grp2_done_reg, ap_block_pp0_stage1_11001_grp1, ap_block_pp0_stage0_11001_grp2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp1_done_reg) and (icmp_ln53_reg_268 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp2_done_reg)))) then 
            m_axi_gmem2_0_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem2_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem2_0_AWADDR <= ap_const_lv32_0;
    m_axi_gmem2_0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem2_0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem2_0_AWID <= ap_const_lv1_0;
    m_axi_gmem2_0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem2_0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem2_0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem2_0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem2_0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem2_0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem2_0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem2_0_AWVALID <= ap_const_logic_0;
    m_axi_gmem2_0_BREADY <= ap_const_logic_0;

    m_axi_gmem2_0_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone_grp3_done_reg, ap_block_pp0_stage0_subdone_grp4_done_reg, ap_block_pp0_stage1_11001_grp3, ap_block_pp0_stage0_11001_grp4)
    begin
        if ((((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp4) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp4_done_reg)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp3) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp3_done_reg)))) then 
            m_axi_gmem2_0_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem2_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem2_0_WDATA <= ap_const_lv8_0;
    m_axi_gmem2_0_WID <= ap_const_lv1_0;
    m_axi_gmem2_0_WLAST <= ap_const_logic_0;
    m_axi_gmem2_0_WSTRB <= ap_const_lv1_0;
    m_axi_gmem2_0_WUSER <= ap_const_lv1_0;
    m_axi_gmem2_0_WVALID <= ap_const_logic_0;
    shl_ln55_3_fu_202_p2 <= std_logic_vector(shift_left(unsigned(i_reg_260_pp0_iter4_reg),to_integer(unsigned('0' & ap_const_lv6_3(6-1 downto 0)))));
    shl_ln55_4_fu_211_p2 <= std_logic_vector(shift_left(unsigned(zext_ln55_fu_185_p1),to_integer(unsigned('0' & zext_ln55_4_fu_207_p1(31-1 downto 0)))));
    shl_ln55_fu_195_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_1),to_integer(unsigned('0' & zext_ln55_3_fu_191_p1(8-1 downto 0)))));
    shl_ln56_fu_235_p2 <= std_logic_vector(shift_left(unsigned(zext_ln56_fu_232_p1),to_integer(unsigned('0' & zext_ln55_4_reg_294(31-1 downto 0)))));
    trunc_ln55_fu_188_p1 <= i_reg_260_pp0_iter4_reg(3 - 1 downto 0);
    zext_ln49_fu_137_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i),32));
    zext_ln53_fu_133_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_i),7));
    zext_ln55_3_fu_191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln55_fu_188_p1),8));
    zext_ln55_4_fu_207_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln55_3_fu_202_p2),64));
    zext_ln55_5_fu_227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_218_p4),32));
    zext_ln55_fu_185_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gmem2_addr_read_reg_284),64));
    zext_ln56_6_fu_159_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln56_3_fu_153_p2),32));
    zext_ln56_7_fu_241_p3 <= (ap_const_lv1_1 & lshr_ln_reg_299);
    zext_ln56_8_fu_248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln56_7_fu_241_p3),32));
    zext_ln56_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(gmem2_addr_2_read_reg_304),64));
end behav;
