

================================================================
== Vitis HLS Report for 'rdc_mont_3_Pipeline_VITIS_LOOP_206_5'
================================================================
* Date:           Tue May 20 14:30:40 2025

* Version:        2024.2.2 (Build 6049644 on Mar  5 2025)
* Project:        sikep503_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.040 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |       11|       17|  0.110 us|  0.170 us|    2|    8|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- VITIS_LOOP_206_5  |        9|       15|        10|          1|          1|  1 ~ 7|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 1, D = 10, States = { 1 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.56>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%t = alloca i32 1" [src/generic/fp_generic.c:178]   --->   Operation 13 'alloca' 't' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%u = alloca i32 1" [src/generic/fp_generic.c:178]   --->   Operation 14 'alloca' 'u' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%v = alloca i32 1" [src/generic/fp_generic.c:178]   --->   Operation 15 'alloca' 'v' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%j_3 = alloca i32 1" [src/generic/fp_generic.c:177]   --->   Operation 16 'alloca' 'j_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %empty"   --->   Operation 17 'read' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sub66_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %sub66"   --->   Operation 18 'read' 'sub66_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%u_23_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %u_23"   --->   Operation 19 'read' 'u_23_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%v_26_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %v_26"   --->   Operation 20 'read' 'v_26_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%indvars_iv_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %indvars_iv"   --->   Operation 21 'read' 'indvars_iv_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%indvars_iv_cast = zext i3 %indvars_iv_read"   --->   Operation 22 'zext' 'indvars_iv_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.58ns)   --->   "%store_ln177 = store i4 %indvars_iv_cast, i4 %j_3" [src/generic/fp_generic.c:177]   --->   Operation 23 'store' 'store_ln177' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 24 [1/1] (1.58ns)   --->   "%store_ln178 = store i64 %v_26_read, i64 %v" [src/generic/fp_generic.c:178]   --->   Operation 24 'store' 'store_ln178' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 25 [1/1] (1.58ns)   --->   "%store_ln178 = store i64 %u_23_read, i64 %u" [src/generic/fp_generic.c:178]   --->   Operation 25 'store' 'store_ln178' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln178 = store i64 0, i64 %t" [src/generic/fp_generic.c:178]   --->   Operation 26 'store' 'store_ln178' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body65"   --->   Operation 27 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%j = load i4 %j_3" [src/generic/fp_generic.c:206]   --->   Operation 28 'load' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (1.73ns)   --->   "%icmp_ln206 = icmp_eq  i4 %j, i4 8" [src/generic/fp_generic.c:206]   --->   Operation 29 'icmp' 'icmp_ln206' <Predicate = true> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln206 = br i1 %icmp_ln206, void %for.body65.split_ifconv, void %for.inc118.exitStub" [src/generic/fp_generic.c:206]   --->   Operation 30 'br' 'br_ln206' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln206 = zext i4 %j" [src/generic/fp_generic.c:206]   --->   Operation 31 'zext' 'zext_ln206' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%trunc_ln206 = trunc i4 %j" [src/generic/fp_generic.c:206]   --->   Operation 32 'trunc' 'trunc_ln206' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (2.55ns)   --->   "%icmp_ln207 = icmp_ult  i32 %zext_ln206, i32 %sub66_read" [src/generic/fp_generic.c:207]   --->   Operation 33 'icmp' 'icmp_ln207' <Predicate = (!icmp_ln206)> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%R_Z_addr = getelementptr i64 %R_Z, i32 0, i32 %zext_ln206" [src/generic/fp_generic.c:208]   --->   Operation 34 'getelementptr' 'R_Z_addr' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_1 : Operation 35 [2/2] (3.25ns)   --->   "%R_Z_load = load i4 %R_Z_addr" [src/generic/fp_generic.c:208]   --->   Operation 35 'load' 'R_Z_load' <Predicate = (!icmp_ln206)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 16> <RAM>
ST_1 : Operation 36 [1/1] (1.65ns)   --->   "%sub_ln208 = sub i3 %tmp, i3 %trunc_ln206" [src/generic/fp_generic.c:208]   --->   Operation 36 'sub' 'sub_ln208' <Predicate = (!icmp_ln206)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%zext_ln208 = zext i3 %sub_ln208" [src/generic/fp_generic.c:208]   --->   Operation 37 'zext' 'zext_ln208' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%p503p1_1_addr = getelementptr i64 %p503p1_1, i32 0, i32 %zext_ln208" [src/generic/fp_generic.c:208]   --->   Operation 38 'getelementptr' 'p503p1_1_addr' <Predicate = (!icmp_ln206)> <Delay = 0.00>
ST_1 : Operation 39 [2/2] (2.32ns)   --->   "%p503p1_1_load = load i3 %p503p1_1_addr" [src/generic/fp_generic.c:208]   --->   Operation 39 'load' 'p503p1_1_load' <Predicate = (!icmp_ln206)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 64> <Depth = 8> <ROM>
ST_1 : Operation 40 [1/1] (1.73ns)   --->   "%add_ln206 = add i4 %j, i4 1" [src/generic/fp_generic.c:206]   --->   Operation 40 'add' 'add_ln206' <Predicate = (!icmp_ln206)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (1.58ns)   --->   "%store_ln177 = store i4 %add_ln206, i4 %j_3" [src/generic/fp_generic.c:177]   --->   Operation 41 'store' 'store_ln177' <Predicate = (!icmp_ln206)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 42 [1/2] ( I:3.25ns O:3.25ns )   --->   "%R_Z_load = load i4 %R_Z_addr" [src/generic/fp_generic.c:208]   --->   Operation 42 'load' 'R_Z_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 16> <RAM>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%al = trunc i64 %R_Z_load" [src/generic/fp_generic.c:208]   --->   Operation 43 'trunc' 'al' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 44 [1/2] ( I:2.32ns O:2.32ns )   --->   "%p503p1_1_load = load i3 %p503p1_1_addr" [src/generic/fp_generic.c:208]   --->   Operation 44 'load' 'p503p1_1_load' <Predicate = true> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 64> <Depth = 8> <ROM>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%bl = trunc i64 %p503p1_1_load" [src/generic/fp_generic.c:103->src/generic/fp_generic.c:208]   --->   Operation 45 'trunc' 'bl' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%ah = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %R_Z_load, i32 32, i32 63" [src/generic/fp_generic.c:110->src/generic/fp_generic.c:208]   --->   Operation 46 'partselect' 'ah' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%bh = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %p503p1_1_load, i32 32, i32 63" [src/generic/fp_generic.c:112->src/generic/fp_generic.c:208]   --->   Operation 47 'partselect' 'bh' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.91>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln105_13 = zext i32 %al" [src/generic/fp_generic.c:105->src/generic/fp_generic.c:208]   --->   Operation 48 'zext' 'zext_ln105_13' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln110 = zext i32 %ah" [src/generic/fp_generic.c:110->src/generic/fp_generic.c:208]   --->   Operation 49 'zext' 'zext_ln110' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln105 = zext i32 %bl" [src/generic/fp_generic.c:105->src/generic/fp_generic.c:208]   --->   Operation 50 'zext' 'zext_ln105' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln112 = zext i32 %bh" [src/generic/fp_generic.c:112->src/generic/fp_generic.c:208]   --->   Operation 51 'zext' 'zext_ln112' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [2/2] (6.91ns)   --->   "%albl = mul i64 %zext_ln105, i64 %zext_ln105_13" [src/generic/fp_generic.c:114->src/generic/fp_generic.c:208]   --->   Operation 52 'mul' 'albl' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [2/2] (6.91ns)   --->   "%albh = mul i64 %zext_ln112, i64 %zext_ln105_13" [src/generic/fp_generic.c:115->src/generic/fp_generic.c:208]   --->   Operation 53 'mul' 'albh' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [2/2] (6.91ns)   --->   "%ahbl = mul i64 %zext_ln105, i64 %zext_ln110" [src/generic/fp_generic.c:116->src/generic/fp_generic.c:208]   --->   Operation 54 'mul' 'ahbl' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [2/2] (6.91ns)   --->   "%ahbh = mul i64 %zext_ln112, i64 %zext_ln110" [src/generic/fp_generic.c:117->src/generic/fp_generic.c:208]   --->   Operation 55 'mul' 'ahbh' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.91>
ST_4 : Operation 56 [1/2] (6.91ns)   --->   "%albl = mul i64 %zext_ln105, i64 %zext_ln105_13" [src/generic/fp_generic.c:114->src/generic/fp_generic.c:208]   --->   Operation 56 'mul' 'albl' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln106 = trunc i64 %albl" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:208]   --->   Operation 57 'trunc' 'trunc_ln106' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/2] (6.91ns)   --->   "%albh = mul i64 %zext_ln112, i64 %zext_ln105_13" [src/generic/fp_generic.c:115->src/generic/fp_generic.c:208]   --->   Operation 58 'mul' 'albh' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%trunc_ln106_20 = trunc i64 %albh" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:208]   --->   Operation 59 'trunc' 'trunc_ln106_20' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/2] (6.91ns)   --->   "%ahbl = mul i64 %zext_ln105, i64 %zext_ln110" [src/generic/fp_generic.c:116->src/generic/fp_generic.c:208]   --->   Operation 60 'mul' 'ahbl' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%trunc_ln106_22 = trunc i64 %ahbl" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:208]   --->   Operation 61 'trunc' 'trunc_ln106_22' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/2] (6.91ns)   --->   "%ahbh = mul i64 %zext_ln112, i64 %zext_ln110" [src/generic/fp_generic.c:117->src/generic/fp_generic.c:208]   --->   Operation 62 'mul' 'ahbh' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln106_23 = trunc i64 %ahbh" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:208]   --->   Operation 63 'trunc' 'trunc_ln106_23' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_s = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %albl, i32 32, i32 63" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:208]   --->   Operation 64 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_25 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ahbl, i32 32, i32 63" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:208]   --->   Operation 65 'partselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%trunc_ln106_s = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %albh, i32 32, i32 63" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:208]   --->   Operation 66 'partselect' 'trunc_ln106_s' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_26 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ahbh, i32 32, i32 63" [src/generic/fp_generic.c:210]   --->   Operation 67 'partselect' 'tmp_26' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 5.14>
ST_5 : Operation 68 [1/1] (0.00ns)   --->   "%zext_ln106 = zext i32 %tmp_s" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:208]   --->   Operation 68 'zext' 'zext_ln106' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 69 [1/1] (0.00ns)   --->   "%zext_ln123 = zext i32 %trunc_ln106_22" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:208]   --->   Operation 69 'zext' 'zext_ln123' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 70 [1/1] (0.00ns)   --->   "%zext_ln123_8 = zext i32 %trunc_ln106_20" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:208]   --->   Operation 70 'zext' 'zext_ln123_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 71 [1/1] (2.55ns)   --->   "%add_ln123 = add i33 %zext_ln123, i33 %zext_ln123_8" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:208]   --->   Operation 71 'add' 'add_ln123' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln123_9 = zext i33 %add_ln123" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:208]   --->   Operation 72 'zext' 'zext_ln123_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (2.59ns)   --->   "%temp = add i34 %zext_ln123_9, i34 %zext_ln106" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:208]   --->   Operation 73 'add' 'temp' <Predicate = true> <Delay = 2.59> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_24 = partselect i2 @_ssdm_op_PartSelect.i2.i34.i32.i32, i34 %temp, i32 32, i32 33" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:208]   --->   Operation 74 'partselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%trunc_ln125 = trunc i34 %temp" [src/generic/fp_generic.c:125->src/generic/fp_generic.c:208]   --->   Operation 75 'trunc' 'trunc_ln125' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (0.00ns)   --->   "%zext_ln106_9 = zext i32 %tmp_25" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:208]   --->   Operation 76 'zext' 'zext_ln106_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln130 = zext i32 %trunc_ln106_23" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:208]   --->   Operation 77 'zext' 'zext_ln130' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (2.55ns)   --->   "%add_ln130 = add i33 %zext_ln130, i33 %zext_ln106_9" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:208]   --->   Operation 78 'add' 'add_ln130' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.14>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln106_8 = zext i2 %tmp_24" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:208]   --->   Operation 79 'zext' 'zext_ln106_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln130_8 = zext i33 %add_ln130" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:208]   --->   Operation 80 'zext' 'zext_ln130_8' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (2.55ns)   --->   "%add_ln130_9 = add i32 %trunc_ln106_s, i32 %zext_ln106_8" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:208]   --->   Operation 81 'add' 'add_ln130_9' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln130_9 = zext i32 %add_ln130_9" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:208]   --->   Operation 82 'zext' 'zext_ln130_9' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (2.59ns)   --->   "%temp_7 = add i34 %zext_ln130_9, i34 %zext_ln130_8" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:208]   --->   Operation 83 'add' 'temp_7' <Predicate = true> <Delay = 2.59> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 84 [1/1] (0.00ns)   --->   "%trunc_ln105 = trunc i34 %temp_7" [src/generic/fp_generic.c:105->src/generic/fp_generic.c:208]   --->   Operation 84 'trunc' 'trunc_ln105' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_27 = partselect i2 @_ssdm_op_PartSelect.i2.i34.i32.i32, i34 %temp_7, i32 32, i32 33" [src/generic/fp_generic.c:210]   --->   Operation 85 'partselect' 'tmp_27' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 4.51>
ST_7 : Operation 86 [1/1] (0.00ns)   --->   "%and_ln3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %tmp_26, i32 0" [src/generic/fp_generic.c:210]   --->   Operation 86 'bitconcatenate' 'and_ln3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "%and_ln210_3 = bitconcatenate i34 @_ssdm_op_BitConcatenate.i34.i2.i32, i2 %tmp_27, i32 0" [src/generic/fp_generic.c:210]   --->   Operation 87 'bitconcatenate' 'and_ln210_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln210 = zext i34 %and_ln210_3" [src/generic/fp_generic.c:210]   --->   Operation 88 'zext' 'zext_ln210' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln210_3 = zext i32 %trunc_ln105" [src/generic/fp_generic.c:210]   --->   Operation 89 'zext' 'zext_ln210_3' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 90 [1/1] (3.52ns)   --->   "%add_ln210 = add i64 %zext_ln210, i64 %and_ln3" [src/generic/fp_generic.c:210]   --->   Operation 90 'add' 'add_ln210' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 91 [1/1] (0.99ns)   --->   "%xor_ln210 = xor i64 %add_ln210, i64 %zext_ln210_3" [src/generic/fp_generic.c:210]   --->   Operation 91 'xor' 'xor_ln210' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.04>
ST_8 : Operation 92 [1/1] (0.00ns)   --->   "%v_load_5 = load i64 %v" [src/generic/fp_generic.c:209]   --->   Operation 92 'load' 'v_load_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "%shl_ln125_3 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %trunc_ln125, i32 0" [src/generic/fp_generic.c:125->src/generic/fp_generic.c:208]   --->   Operation 93 'bitconcatenate' 'shl_ln125_3' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 94 [1/1] (0.00ns)   --->   "%tempReg = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %trunc_ln125, i32 %trunc_ln106" [src/generic/fp_generic.c:125->src/generic/fp_generic.c:208]   --->   Operation 94 'bitconcatenate' 'tempReg' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 95 [1/1] (3.52ns)   --->   "%v_27 = add i64 %tempReg, i64 %v_load_5" [src/generic/fp_generic.c:209]   --->   Operation 95 'add' 'v_27' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node tempReg_7)   --->   "%xor_ln105 = xor i64 %shl_ln125_3, i64 %v_27" [src/config.h:105->src/generic/fp_generic.c:209]   --->   Operation 96 'xor' 'xor_ln105' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node tempReg_7)   --->   "%xor_ln105_36 = xor i64 %v_load_5, i64 %shl_ln125_3" [src/config.h:105->src/generic/fp_generic.c:209]   --->   Operation 97 'xor' 'xor_ln105_36' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node tempReg_7)   --->   "%or_ln105 = or i64 %xor_ln105_36, i64 %xor_ln105" [src/config.h:105->src/generic/fp_generic.c:209]   --->   Operation 98 'or' 'or_ln105' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node tempReg_7)   --->   "%xor_ln105_37 = xor i64 %or_ln105, i64 %v_27" [src/config.h:105->src/generic/fp_generic.c:209]   --->   Operation 99 'xor' 'xor_ln105_37' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node tempReg_7)   --->   "%carry = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %xor_ln105_37, i32 63" [src/config.h:105->src/generic/fp_generic.c:209]   --->   Operation 100 'bitselect' 'carry' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node tempReg_7)   --->   "%zext_ln105_14 = zext i1 %carry" [src/config.h:105->src/generic/fp_generic.c:209]   --->   Operation 101 'zext' 'zext_ln105_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 102 [1/1] (3.52ns) (out node of the LUT)   --->   "%tempReg_7 = add i64 %xor_ln210, i64 %zext_ln105_14" [src/generic/fp_generic.c:210]   --->   Operation 102 'add' 'tempReg_7' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 103 [1/1] (1.48ns)   --->   "%v_5 = select i1 %icmp_ln207, i64 %v_27, i64 %v_load_5" [src/generic/fp_generic.c:207]   --->   Operation 103 'select' 'v_5' <Predicate = true> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 104 [1/1] (1.58ns)   --->   "%store_ln178 = store i64 %v_5, i64 %v" [src/generic/fp_generic.c:178]   --->   Operation 104 'store' 'store_ln178' <Predicate = true> <Delay = 1.58>

State 9 <SV = 8> <Delay = 6.58>
ST_9 : Operation 105 [1/1] (0.00ns)   --->   "%u_load_4 = load i64 %u" [src/generic/fp_generic.c:210]   --->   Operation 105 'load' 'u_load_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 106 [1/1] (3.52ns)   --->   "%u_24 = add i64 %tempReg_7, i64 %u_load_4" [src/generic/fp_generic.c:210]   --->   Operation 106 'add' 'u_24' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node tmp_29)   --->   "%xor_ln105_39 = xor i64 %tempReg_7, i64 %u_24" [src/config.h:105->src/generic/fp_generic.c:210]   --->   Operation 107 'xor' 'xor_ln105_39' <Predicate = (icmp_ln207)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node tmp_29)   --->   "%xor_ln105_40 = xor i64 %u_load_4, i64 %tempReg_7" [src/config.h:105->src/generic/fp_generic.c:210]   --->   Operation 108 'xor' 'xor_ln105_40' <Predicate = (icmp_ln207)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node tmp_29)   --->   "%or_ln105_7 = or i64 %xor_ln105_40, i64 %xor_ln105_39" [src/config.h:105->src/generic/fp_generic.c:210]   --->   Operation 109 'or' 'or_ln105_7' <Predicate = (icmp_ln207)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node tmp_29)   --->   "%xor_ln105_41 = xor i64 %or_ln105_7, i64 %u_24" [src/config.h:105->src/generic/fp_generic.c:210]   --->   Operation 110 'xor' 'xor_ln105_41' <Predicate = (icmp_ln207)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 111 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp_29 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %xor_ln105_41, i32 63" [src/generic/fp_generic.c:210]   --->   Operation 111 'bitselect' 'tmp_29' <Predicate = (icmp_ln207)> <Delay = 0.99>
ST_9 : Operation 112 [1/1] (1.48ns)   --->   "%u_5 = select i1 %icmp_ln207, i64 %u_24, i64 %u_load_4" [src/generic/fp_generic.c:207]   --->   Operation 112 'select' 'u_5' <Predicate = true> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 113 [1/1] (1.58ns)   --->   "%store_ln178 = store i64 %u_5, i64 %u" [src/generic/fp_generic.c:178]   --->   Operation 113 'store' 'store_ln178' <Predicate = true> <Delay = 1.58>
ST_9 : Operation 130 [1/1] (0.00ns)   --->   "%t_load = load i64 %t"   --->   Operation 130 'load' 't_load' <Predicate = (icmp_ln206)> <Delay = 0.00>
ST_9 : Operation 131 [1/1] (0.00ns)   --->   "%u_load = load i64 %u"   --->   Operation 131 'load' 'u_load' <Predicate = (icmp_ln206)> <Delay = 0.00>
ST_9 : Operation 132 [1/1] (0.00ns)   --->   "%v_load = load i64 %v"   --->   Operation 132 'load' 'v_load' <Predicate = (icmp_ln206)> <Delay = 0.00>
ST_9 : Operation 133 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %v_33_out, i64 %v_load"   --->   Operation 133 'write' 'write_ln0' <Predicate = (icmp_ln206)> <Delay = 0.00>
ST_9 : Operation 134 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %u_30_out, i64 %u_load"   --->   Operation 134 'write' 'write_ln0' <Predicate = (icmp_ln206)> <Delay = 0.00>
ST_9 : Operation 135 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %t_15_out, i64 %t_load"   --->   Operation 135 'write' 'write_ln0' <Predicate = (icmp_ln206)> <Delay = 0.00>
ST_9 : Operation 136 [1/1] (1.58ns)   --->   "%ret_ln0 = ret"   --->   Operation 136 'ret' 'ret_ln0' <Predicate = (icmp_ln206)> <Delay = 1.58>

State 10 <SV = 9> <Delay = 6.58>
ST_10 : Operation 114 [1/1] (0.00ns)   --->   "%t_load_5 = load i64 %t" [src/generic/fp_generic.c:211]   --->   Operation 114 'load' 't_load_5' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 115 [1/1] (0.00ns)   --->   "%specpipeline_ln178 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_44" [src/generic/fp_generic.c:178]   --->   Operation 115 'specpipeline' 'specpipeline_ln178' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 116 [1/1] (0.00ns)   --->   "%speclooptripcount_ln178 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 1, i64 7, i64 4" [src/generic/fp_generic.c:178]   --->   Operation 116 'speclooptripcount' 'speclooptripcount_ln178' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 117 [1/1] (0.00ns)   --->   "%specloopname_ln206 = specloopname void @_ssdm_op_SpecLoopName, void @empty_97" [src/generic/fp_generic.c:206]   --->   Operation 117 'specloopname' 'specloopname_ln206' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node t_10)   --->   "%bit_sel4 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i64, i64 %tempReg_7, i64 63" [src/config.h:105->src/generic/fp_generic.c:210]   --->   Operation 118 'bitselect' 'bit_sel4' <Predicate = (icmp_ln207)> <Delay = 0.00>
ST_10 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node t_10)   --->   "%xor_ln105_38 = xor i1 %bit_sel4, i1 1" [src/config.h:105->src/generic/fp_generic.c:210]   --->   Operation 119 'xor' 'xor_ln105_38' <Predicate = (icmp_ln207)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node t_10)   --->   "%trunc_ln105_9 = trunc i64 %tempReg_7" [src/config.h:105->src/generic/fp_generic.c:210]   --->   Operation 120 'trunc' 'trunc_ln105_9' <Predicate = (icmp_ln207)> <Delay = 0.00>
ST_10 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node t_10)   --->   "%xor_ln105_s = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i1.i63, i1 %xor_ln105_38, i63 %trunc_ln105_9" [src/config.h:105->src/generic/fp_generic.c:210]   --->   Operation 121 'bitconcatenate' 'xor_ln105_s' <Predicate = (icmp_ln207)> <Delay = 0.00>
ST_10 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node t_10)   --->   "%and_ln105 = and i64 %xor_ln210, i64 %xor_ln105_s" [src/config.h:105->src/generic/fp_generic.c:210]   --->   Operation 122 'and' 'and_ln105' <Predicate = (icmp_ln207)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node t_10)   --->   "%tmp_28 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %and_ln105, i32 63" [src/config.h:103->src/generic/fp_generic.c:210]   --->   Operation 123 'bitselect' 'tmp_28' <Predicate = (icmp_ln207)> <Delay = 0.00>
ST_10 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node t_10)   --->   "%carry_13 = or i1 %tmp_29, i1 %tmp_28" [src/generic/fp_generic.c:210]   --->   Operation 124 'or' 'carry_13' <Predicate = (icmp_ln207)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 125 [1/1] (0.00ns) (grouped into LUT with out node t_10)   --->   "%zext_ln211 = zext i1 %carry_13" [src/generic/fp_generic.c:211]   --->   Operation 125 'zext' 'zext_ln211' <Predicate = (icmp_ln207)> <Delay = 0.00>
ST_10 : Operation 126 [1/1] (3.52ns) (out node of the LUT)   --->   "%t_10 = add i64 %t_load_5, i64 %zext_ln211" [src/generic/fp_generic.c:211]   --->   Operation 126 'add' 't_10' <Predicate = (icmp_ln207)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 127 [1/1] (1.48ns)   --->   "%t_5 = select i1 %icmp_ln207, i64 %t_10, i64 %t_load_5" [src/generic/fp_generic.c:207]   --->   Operation 127 'select' 't_5' <Predicate = true> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 128 [1/1] (1.58ns)   --->   "%store_ln178 = store i64 %t_5, i64 %t" [src/generic/fp_generic.c:178]   --->   Operation 128 'store' 'store_ln178' <Predicate = true> <Delay = 1.58>
ST_10 : Operation 129 [1/1] (0.00ns)   --->   "%br_ln206 = br void %for.body65" [src/generic/fp_generic.c:206]   --->   Operation 129 'br' 'br_ln206' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.560ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln177', src/generic/fp_generic.c:177) of variable 'indvars_iv_cast' on local variable 'j', src/generic/fp_generic.c:177 [21]  (1.588 ns)
	'load' operation 4 bit ('j', src/generic/fp_generic.c:206) on local variable 'j', src/generic/fp_generic.c:177 [27]  (0.000 ns)
	'sub' operation 3 bit ('sub_ln208', src/generic/fp_generic.c:208) [43]  (1.650 ns)
	'getelementptr' operation 3 bit ('p503p1_1_addr', src/generic/fp_generic.c:208) [45]  (0.000 ns)
	'load' operation 64 bit ('b', src/generic/fp_generic.c:208) on array 'p503p1_1' [46]  (2.322 ns)

 <State 2>: 3.254ns
The critical path consists of the following:
	'load' operation 64 bit ('a', src/generic/fp_generic.c:208) on array 'R_Z' [41]  (3.254 ns)

 <State 3>: 6.912ns
The critical path consists of the following:
	'mul' operation 64 bit ('albl', src/generic/fp_generic.c:114->src/generic/fp_generic.c:208) [54]  (6.912 ns)

 <State 4>: 6.912ns
The critical path consists of the following:
	'mul' operation 64 bit ('albl', src/generic/fp_generic.c:114->src/generic/fp_generic.c:208) [54]  (6.912 ns)

 <State 5>: 5.145ns
The critical path consists of the following:
	'add' operation 33 bit ('add_ln123', src/generic/fp_generic.c:123->src/generic/fp_generic.c:208) [66]  (2.552 ns)
	'add' operation 34 bit ('temp', src/generic/fp_generic.c:123->src/generic/fp_generic.c:208) [68]  (2.593 ns)

 <State 6>: 5.145ns
The critical path consists of the following:
	'add' operation 32 bit ('add_ln130_9', src/generic/fp_generic.c:130->src/generic/fp_generic.c:208) [80]  (2.552 ns)
	'add' operation 34 bit ('temp', src/generic/fp_generic.c:130->src/generic/fp_generic.c:208) [82]  (2.593 ns)

 <State 7>: 4.510ns
The critical path consists of the following:
	'add' operation 64 bit ('add_ln210', src/generic/fp_generic.c:210) [97]  (3.520 ns)
	'xor' operation 64 bit ('xor_ln210', src/generic/fp_generic.c:210) [98]  (0.990 ns)

 <State 8>: 7.040ns
The critical path consists of the following:
	'load' operation 64 bit ('v_load_5', src/generic/fp_generic.c:209) on local variable 'v', src/generic/fp_generic.c:178 [33]  (0.000 ns)
	'add' operation 64 bit ('v', src/generic/fp_generic.c:209) [84]  (3.520 ns)
	'xor' operation 64 bit ('xor_ln105_37', src/config.h:105->src/generic/fp_generic.c:209) [88]  (0.000 ns)
	'add' operation 64 bit ('tempReg', src/generic/fp_generic.c:210) [99]  (3.520 ns)

 <State 9>: 6.589ns
The critical path consists of the following:
	'load' operation 64 bit ('u_load_4', src/generic/fp_generic.c:210) on local variable 'u', src/generic/fp_generic.c:178 [32]  (0.000 ns)
	'add' operation 64 bit ('u', src/generic/fp_generic.c:210) [100]  (3.520 ns)
	'select' operation 64 bit ('u', src/generic/fp_generic.c:207) [116]  (1.481 ns)
	'store' operation 0 bit ('store_ln178', src/generic/fp_generic.c:178) of variable 'u', src/generic/fp_generic.c:207 on local variable 'u', src/generic/fp_generic.c:178 [121]  (1.588 ns)

 <State 10>: 6.589ns
The critical path consists of the following:
	'load' operation 64 bit ('t_load_5', src/generic/fp_generic.c:211) on local variable 't', src/generic/fp_generic.c:178 [31]  (0.000 ns)
	'add' operation 64 bit ('t', src/generic/fp_generic.c:211) [114]  (3.520 ns)
	'select' operation 64 bit ('t', src/generic/fp_generic.c:207) [115]  (1.481 ns)
	'store' operation 0 bit ('store_ln178', src/generic/fp_generic.c:178) of variable 't', src/generic/fp_generic.c:207 on local variable 't', src/generic/fp_generic.c:178 [122]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
