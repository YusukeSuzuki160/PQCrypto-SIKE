

================================================================
== Vitis HLS Report for 'fp2sqr503_mont_136_Pipeline_VITIS_LOOP_47_1'
================================================================
* Date:           Tue May 20 14:34:14 2025

* Version:        2024.2.2 (Build 6049644 on Mar  5 2025)
* Project:        sikep503_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.774 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |       11|       11|  0.110 us|  0.110 us|    9|    9|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_47_1  |        9|        9|         3|          1|          1|     8|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 1
  Pipeline-0 : II = 1, D = 3, States = { 1 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.91>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i_173 = alloca i32 1" [src/generic/fp_generic.c:44->src/fpx.c:158]   --->   Operation 6 'alloca' 'i_173' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (1.58ns)   --->   "%store_ln44 = store i4 0, i4 %i_173" [src/generic/fp_generic.c:44->src/fpx.c:158]   --->   Operation 7 'store' 'store_ln44' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 8 [1/1] (1.58ns)   --->   "%br_ln0 = br void %for.inc.i"   --->   Operation 8 'br' 'br_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = load i4 %i_173" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 9 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.73ns)   --->   "%icmp_ln47 = icmp_eq  i4 %i, i4 8" [src/generic/fp_generic.c:47->src/fpx.c:158]   --->   Operation 10 'icmp' 'icmp_ln47' <Predicate = true> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 11 [1/1] (1.73ns)   --->   "%add_ln47 = add i4 %i, i4 1" [src/generic/fp_generic.c:47->src/fpx.c:158]   --->   Operation 11 'add' 'add_ln47' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%trunc_ln48 = trunc i4 %i" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 12 'trunc' 'trunc_ln48' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%zext_ln48_36 = zext i3 %trunc_ln48" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 13 'zext' 'zext_ln48_36' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%a_addr = getelementptr i64 %a, i32 0, i32 %zext_ln48_36" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 14 'getelementptr' 'a_addr' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_913_cast = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i3, i1 1, i3 %trunc_ln48" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 15 'bitconcatenate' 'tmp_913_cast' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%zext_ln48_37 = zext i4 %tmp_913_cast" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 16 'zext' 'zext_ln48_37' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%a_addr_3 = getelementptr i64 %a, i32 0, i32 %zext_ln48_37" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 17 'getelementptr' 'a_addr_3' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_1 : Operation 18 [2/2] (3.25ns)   --->   "%a_load = load i4 %a_addr" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 18 'load' 'a_load' <Predicate = (!icmp_ln47)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 16> <RAM>
ST_1 : Operation 19 [2/2] (3.25ns)   --->   "%a_load_2 = load i4 %a_addr_3" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 19 'load' 'a_load_2' <Predicate = (!icmp_ln47)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 16> <RAM>
ST_1 : Operation 20 [1/1] (1.58ns)   --->   "%store_ln44 = store i4 %add_ln47, i4 %i_173" [src/generic/fp_generic.c:44->src/fpx.c:158]   --->   Operation 20 'store' 'store_ln44' <Predicate = (!icmp_ln47)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 6.77>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%borrow = phi i1 %borrowReg, void %for.inc.i.split, i1 0, void %newFuncRoot"   --->   Operation 21 'phi' 'borrow' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%br_ln47 = br i1 %icmp_ln47, void %for.inc.i.split, void %for.end.i.exitStub" [src/generic/fp_generic.c:47->src/fpx.c:158]   --->   Operation 22 'br' 'br_ln47' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/2] ( I:3.25ns O:3.25ns )   --->   "%a_load = load i4 %a_addr" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 23 'load' 'a_load' <Predicate = (!icmp_ln47)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 16> <RAM>
ST_2 : Operation 24 [1/2] ( I:3.25ns O:3.25ns )   --->   "%a_load_2 = load i4 %a_addr_3" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 24 'load' 'a_load_2' <Predicate = (!icmp_ln47)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 16> <RAM>
ST_2 : Operation 25 [1/1] (3.52ns)   --->   "%tempReg = sub i64 %a_load, i64 %a_load_2" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 25 'sub' 'tempReg' <Predicate = (!icmp_ln47)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%write_ln48 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %borrow_out, i1 %borrow" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 45 'write' 'write_ln48' <Predicate = (icmp_ln47)> <Delay = 0.00>
ST_2 : Operation 46 [1/1] (1.58ns)   --->   "%ret_ln0 = ret"   --->   Operation 46 'ret' 'ret_ln0' <Predicate = (icmp_ln47)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 6.09>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%specpipeline_ln44 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_44" [src/generic/fp_generic.c:44->src/fpx.c:158]   --->   Operation 26 'specpipeline' 'specpipeline_ln44' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (0.00ns)   --->   "%speclooptripcount_ln44 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 8, i64 8, i64 8" [src/generic/fp_generic.c:44->src/fpx.c:158]   --->   Operation 27 'speclooptripcount' 'speclooptripcount_ln44' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%specloopname_ln47 = specloopname void @_ssdm_op_SpecLoopName, void @empty_35" [src/generic/fp_generic.c:47->src/fpx.c:158]   --->   Operation 28 'specloopname' 'specloopname_ln47' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns) (grouped into LUT with out node tmp)   --->   "%xor_ln105 = xor i64 %a_load_2, i64 %a_load" [src/config.h:105->src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 29 'xor' 'xor_ln105' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 30 [1/1] (0.00ns) (grouped into LUT with out node tmp)   --->   "%xor_ln105_130 = xor i64 %a_load_2, i64 %tempReg" [src/config.h:105->src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 30 'xor' 'xor_ln105_130' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (0.00ns) (grouped into LUT with out node tmp)   --->   "%or_ln105 = or i64 %xor_ln105_130, i64 %xor_ln105" [src/config.h:105->src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 31 'or' 'or_ln105' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (0.00ns) (grouped into LUT with out node tmp)   --->   "%xor_ln105_131 = xor i64 %a_load, i64 %or_ln105" [src/config.h:105->src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 32 'xor' 'xor_ln105_131' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %xor_ln105_131, i32 63" [src/config.h:98->src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 33 'bitselect' 'tmp' <Predicate = (!icmp_ln47)> <Delay = 0.99>
ST_3 : Operation 34 [1/1] (3.52ns)   --->   "%sub_ln95 = sub i64 0, i64 %tempReg" [src/config.h:95->src/config.h:100->src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 34 'sub' 'sub_ln95' <Predicate = (!icmp_ln47)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 35 [1/1] (0.00ns) (grouped into LUT with out node borrowReg)   --->   "%or_ln95 = or i64 %tempReg, i64 %sub_ln95" [src/config.h:95->src/config.h:100->src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 35 'or' 'or_ln95' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node borrowReg)   --->   "%tmp_241 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %or_ln95, i32 63" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 36 'bitselect' 'tmp_241' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node borrowReg)   --->   "%xor_ln48 = xor i1 %tmp_241, i1 1" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 37 'xor' 'xor_ln48' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node borrowReg)   --->   "%and_ln48 = and i1 %borrow, i1 %xor_ln48" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 38 'and' 'and_ln48' <Predicate = (!icmp_ln47)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.99ns) (out node of the LUT)   --->   "%borrowReg = or i1 %and_ln48, i1 %tmp" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 39 'or' 'borrowReg' <Predicate = (!icmp_ln47)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln48 = zext i1 %borrow" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 40 'zext' 'zext_ln48' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (3.52ns)   --->   "%sub_ln48 = sub i64 %tempReg, i64 %zext_ln48" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 41 'sub' 'sub_ln48' <Predicate = (!icmp_ln47)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%t2_addr = getelementptr i64 %t2, i32 0, i32 %zext_ln48_36" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 42 'getelementptr' 't2_addr' <Predicate = (!icmp_ln47)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] ( I:2.32ns O:2.32ns )   --->   "%store_ln48 = store i64 %sub_ln48, i3 %t2_addr" [src/generic/fp_generic.c:48->src/fpx.c:158]   --->   Operation 43 'store' 'store_ln48' <Predicate = (!icmp_ln47)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%br_ln47 = br void %for.inc.i" [src/generic/fp_generic.c:47->src/fpx.c:158]   --->   Operation 44 'br' 'br_ln47' <Predicate = (!icmp_ln47)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 4.911ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln44', src/generic/fp_generic.c:44->src/fpx.c:158) of constant 0 on local variable 'i', src/generic/fp_generic.c:44->src/fpx.c:158 [5]  (1.588 ns)
	'load' operation 4 bit ('i', src/generic/fp_generic.c:48->src/fpx.c:158) on local variable 'i', src/generic/fp_generic.c:44->src/fpx.c:158 [9]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln47', src/generic/fp_generic.c:47->src/fpx.c:158) [10]  (1.735 ns)
	'store' operation 0 bit ('store_ln44', src/generic/fp_generic.c:44->src/fpx.c:158) of variable 'add_ln47', src/generic/fp_generic.c:47->src/fpx.c:158 on local variable 'i', src/generic/fp_generic.c:44->src/fpx.c:158 [41]  (1.588 ns)

 <State 2>: 6.774ns
The critical path consists of the following:
	'load' operation 64 bit ('x', src/generic/fp_generic.c:48->src/fpx.c:158) on array 'a' [23]  (3.254 ns)
	'sub' operation 64 bit ('tempReg', src/generic/fp_generic.c:48->src/fpx.c:158) [25]  (3.520 ns)

 <State 3>: 6.098ns
The critical path consists of the following:
	'sub' operation 64 bit ('sub_ln95', src/config.h:95->src/config.h:100->src/generic/fp_generic.c:48->src/fpx.c:158) [31]  (3.520 ns)
	'or' operation 64 bit ('or_ln95', src/config.h:95->src/config.h:100->src/generic/fp_generic.c:48->src/fpx.c:158) [32]  (0.000 ns)
	'xor' operation 1 bit ('xor_ln48', src/generic/fp_generic.c:48->src/fpx.c:158) [34]  (0.000 ns)
	'and' operation 1 bit ('and_ln48', src/generic/fp_generic.c:48->src/fpx.c:158) [35]  (0.000 ns)
	'or' operation 1 bit ('borrowReg', src/generic/fp_generic.c:48->src/fpx.c:158) [36]  (0.990 ns)
	multiplexor before 'phi' operation 1 bit ('borrowReg') with incoming values : ('borrowReg', src/generic/fp_generic.c:48->src/fpx.c:158) [8]  (1.588 ns)
	'phi' operation 1 bit ('borrowReg') with incoming values : ('borrowReg', src/generic/fp_generic.c:48->src/fpx.c:158) [8]  (0.000 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
