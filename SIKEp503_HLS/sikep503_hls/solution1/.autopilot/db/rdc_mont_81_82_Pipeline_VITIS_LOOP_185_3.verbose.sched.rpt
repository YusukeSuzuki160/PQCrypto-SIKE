

================================================================
== Vitis HLS Report for 'rdc_mont_81_82_Pipeline_VITIS_LOOP_185_3'
================================================================
* Date:           Tue May 20 14:33:49 2025

* Version:        2024.2.2 (Build 6049644 on Mar  5 2025)
* Project:        sikep503_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.040 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval |                    Pipeline                    |
    |   min   |   max   |    min    |    max   | min | max |                      Type                      |
    +---------+---------+-----------+----------+-----+-----+------------------------------------------------+
    |        2|       17|  20.000 ns|  0.170 us|    1|    8|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+-----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- VITIS_LOOP_185_3  |        0|       15|        10|          1|          1|  0 ~ 7|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 10


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 1, D = 10, States = { 1 2 3 4 5 6 7 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.56>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%t_1 = alloca i32 1" [src/generic/fp_generic.c:178]   --->   Operation 13 'alloca' 't_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%u_6 = alloca i32 1" [src/generic/fp_generic.c:178]   --->   Operation 14 'alloca' 'u_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%v_6 = alloca i32 1" [src/generic/fp_generic.c:178]   --->   Operation 15 'alloca' 'v_6' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%j = alloca i32 1" [src/generic/fp_generic.c:177]   --->   Operation 16 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%tmp = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %empty"   --->   Operation 17 'read' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%mc_1_offset_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %mc_1_offset"   --->   Operation 18 'read' 'mc_1_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%mc_0_offset_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %mc_0_offset"   --->   Operation 19 'read' 'mc_0_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%add_ln185_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %add_ln185"   --->   Operation 20 'read' 'add_ln185_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%i_1_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %i_1"   --->   Operation 21 'read' 'i_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%u_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %u"   --->   Operation 22 'read' 'u_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%v_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %v"   --->   Operation 23 'read' 'v_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (1.58ns)   --->   "%store_ln177 = store i3 0, i3 %j" [src/generic/fp_generic.c:177]   --->   Operation 24 'store' 'store_ln177' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 25 [1/1] (1.58ns)   --->   "%store_ln178 = store i64 %v_read, i64 %v_6" [src/generic/fp_generic.c:178]   --->   Operation 25 'store' 'store_ln178' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln178 = store i64 %u_read, i64 %u_6" [src/generic/fp_generic.c:178]   --->   Operation 26 'store' 'store_ln178' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (1.58ns)   --->   "%store_ln178 = store i64 0, i64 %t_1" [src/generic/fp_generic.c:178]   --->   Operation 27 'store' 'store_ln178' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body6"   --->   Operation 28 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%j_3 = load i3 %j" [src/generic/fp_generic.c:185]   --->   Operation 29 'load' 'j_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln185 = zext i3 %j_3" [src/generic/fp_generic.c:185]   --->   Operation 30 'zext' 'zext_ln185' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (1.65ns)   --->   "%icmp_ln185 = icmp_eq  i3 %j_3, i3 %i_1_read" [src/generic/fp_generic.c:185]   --->   Operation 31 'icmp' 'icmp_ln185' <Predicate = true> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (1.65ns)   --->   "%add_ln185_1 = add i3 %j_3, i3 1" [src/generic/fp_generic.c:185]   --->   Operation 32 'add' 'add_ln185_1' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%br_ln185 = br i1 %icmp_ln185, void %for.body6.split_ifconv, void %for.inc51.loopexit.exitStub" [src/generic/fp_generic.c:185]   --->   Operation 33 'br' 'br_ln185' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln185 = trunc i3 %j_3" [src/generic/fp_generic.c:185]   --->   Operation 34 'trunc' 'trunc_ln185' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%lshr_ln1 = partselect i2 @_ssdm_op_PartSelect.i2.i3.i32.i32, i3 %j_3, i32 1, i32 2" [src/generic/fp_generic.c:178]   --->   Operation 35 'partselect' 'lshr_ln1' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (1.73ns)   --->   "%icmp_ln186 = icmp_ult  i4 %zext_ln185, i4 %add_ln185_read" [src/generic/fp_generic.c:186]   --->   Operation 36 'icmp' 'icmp_ln186' <Predicate = (!icmp_ln185)> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_9 = bitconcatenate i3 @_ssdm_op_BitConcatenate.i3.i1.i2, i1 %mc_0_offset_read, i2 %lshr_ln1" [src/generic/fp_generic.c:187]   --->   Operation 37 'bitconcatenate' 'tmp_9' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln187 = zext i3 %tmp_9" [src/generic/fp_generic.c:187]   --->   Operation 38 'zext' 'zext_ln187' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%mc_0_addr = getelementptr i64 %mc_0, i32 0, i32 %zext_ln187" [src/generic/fp_generic.c:187]   --->   Operation 39 'getelementptr' 'mc_0_addr' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_10 = bitconcatenate i3 @_ssdm_op_BitConcatenate.i3.i1.i2, i1 %mc_1_offset_read, i2 %lshr_ln1" [src/generic/fp_generic.c:187]   --->   Operation 40 'bitconcatenate' 'tmp_10' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%zext_ln187_2 = zext i3 %tmp_10" [src/generic/fp_generic.c:187]   --->   Operation 41 'zext' 'zext_ln187_2' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%mc_1_addr = getelementptr i64 %mc_1, i32 0, i32 %zext_ln187_2" [src/generic/fp_generic.c:187]   --->   Operation 42 'getelementptr' 'mc_1_addr' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_1 : Operation 43 [2/2] (2.32ns)   --->   "%mc_0_load = load i3 %mc_0_addr" [src/generic/fp_generic.c:187]   --->   Operation 43 'load' 'mc_0_load' <Predicate = (!icmp_ln185)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_1 : Operation 44 [2/2] (2.32ns)   --->   "%mc_1_load = load i3 %mc_1_addr" [src/generic/fp_generic.c:187]   --->   Operation 44 'load' 'mc_1_load' <Predicate = (!icmp_ln185)> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_1 : Operation 45 [1/1] (1.65ns)   --->   "%sub_ln187 = sub i3 %tmp, i3 %j_3" [src/generic/fp_generic.c:187]   --->   Operation 45 'sub' 'sub_ln187' <Predicate = (!icmp_ln185)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%zext_ln187_1 = zext i3 %sub_ln187" [src/generic/fp_generic.c:187]   --->   Operation 46 'zext' 'zext_ln187_1' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%p503p1_1_addr = getelementptr i64 %p503p1_1, i32 0, i32 %zext_ln187_1" [src/generic/fp_generic.c:187]   --->   Operation 47 'getelementptr' 'p503p1_1_addr' <Predicate = (!icmp_ln185)> <Delay = 0.00>
ST_1 : Operation 48 [2/2] (2.32ns)   --->   "%p503p1_1_load = load i3 %p503p1_1_addr" [src/generic/fp_generic.c:187]   --->   Operation 48 'load' 'p503p1_1_load' <Predicate = (!icmp_ln185)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 64> <Depth = 8> <ROM>
ST_1 : Operation 49 [1/1] (1.58ns)   --->   "%store_ln177 = store i3 %add_ln185_1, i3 %j" [src/generic/fp_generic.c:177]   --->   Operation 49 'store' 'store_ln177' <Predicate = (!icmp_ln185)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 3.80>
ST_2 : Operation 50 [1/2] ( I:2.32ns O:2.32ns )   --->   "%mc_0_load = load i3 %mc_0_addr" [src/generic/fp_generic.c:187]   --->   Operation 50 'load' 'mc_0_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_2 : Operation 51 [1/2] ( I:2.32ns O:2.32ns )   --->   "%mc_1_load = load i3 %mc_1_addr" [src/generic/fp_generic.c:187]   --->   Operation 51 'load' 'mc_1_load' <Predicate = true> <Delay = 2.32> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 8> <RAM>
ST_2 : Operation 52 [1/1] (1.48ns)   --->   "%select_ln187 = select i1 %trunc_ln185, i64 %mc_1_load, i64 %mc_0_load" [src/generic/fp_generic.c:187]   --->   Operation 52 'select' 'select_ln187' <Predicate = true> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns)   --->   "%al = trunc i64 %select_ln187" [src/generic/fp_generic.c:187]   --->   Operation 53 'trunc' 'al' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 54 [1/2] ( I:2.32ns O:2.32ns )   --->   "%p503p1_1_load = load i3 %p503p1_1_addr" [src/generic/fp_generic.c:187]   --->   Operation 54 'load' 'p503p1_1_load' <Predicate = true> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 64> <Depth = 8> <ROM>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%bl = trunc i64 %p503p1_1_load" [src/generic/fp_generic.c:103->src/generic/fp_generic.c:187]   --->   Operation 55 'trunc' 'bl' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%ah = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %select_ln187, i32 32, i32 63" [src/generic/fp_generic.c:110->src/generic/fp_generic.c:187]   --->   Operation 56 'partselect' 'ah' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%bh = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %p503p1_1_load, i32 32, i32 63" [src/generic/fp_generic.c:112->src/generic/fp_generic.c:187]   --->   Operation 57 'partselect' 'bh' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.91>
ST_3 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln105 = zext i32 %al" [src/generic/fp_generic.c:105->src/generic/fp_generic.c:187]   --->   Operation 58 'zext' 'zext_ln105' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln110 = zext i32 %ah" [src/generic/fp_generic.c:110->src/generic/fp_generic.c:187]   --->   Operation 59 'zext' 'zext_ln110' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln105_1 = zext i32 %bl" [src/generic/fp_generic.c:105->src/generic/fp_generic.c:187]   --->   Operation 60 'zext' 'zext_ln105_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln112 = zext i32 %bh" [src/generic/fp_generic.c:112->src/generic/fp_generic.c:187]   --->   Operation 61 'zext' 'zext_ln112' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 62 [2/2] (6.91ns)   --->   "%albl = mul i64 %zext_ln105_1, i64 %zext_ln105" [src/generic/fp_generic.c:114->src/generic/fp_generic.c:187]   --->   Operation 62 'mul' 'albl' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 63 [2/2] (6.91ns)   --->   "%albh = mul i64 %zext_ln112, i64 %zext_ln105" [src/generic/fp_generic.c:115->src/generic/fp_generic.c:187]   --->   Operation 63 'mul' 'albh' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [2/2] (6.91ns)   --->   "%ahbl = mul i64 %zext_ln105_1, i64 %zext_ln110" [src/generic/fp_generic.c:116->src/generic/fp_generic.c:187]   --->   Operation 64 'mul' 'ahbl' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 65 [2/2] (6.91ns)   --->   "%ahbh = mul i64 %zext_ln112, i64 %zext_ln110" [src/generic/fp_generic.c:117->src/generic/fp_generic.c:187]   --->   Operation 65 'mul' 'ahbh' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.91>
ST_4 : Operation 66 [1/2] (6.91ns)   --->   "%albl = mul i64 %zext_ln105_1, i64 %zext_ln105" [src/generic/fp_generic.c:114->src/generic/fp_generic.c:187]   --->   Operation 66 'mul' 'albl' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%trunc_ln106 = trunc i64 %albl" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:187]   --->   Operation 67 'trunc' 'trunc_ln106' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/2] (6.91ns)   --->   "%albh = mul i64 %zext_ln112, i64 %zext_ln105" [src/generic/fp_generic.c:115->src/generic/fp_generic.c:187]   --->   Operation 68 'mul' 'albh' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%trunc_ln106_10 = trunc i64 %albh" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:187]   --->   Operation 69 'trunc' 'trunc_ln106_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/2] (6.91ns)   --->   "%ahbl = mul i64 %zext_ln105_1, i64 %zext_ln110" [src/generic/fp_generic.c:116->src/generic/fp_generic.c:187]   --->   Operation 70 'mul' 'ahbl' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%trunc_ln106_11 = trunc i64 %ahbl" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:187]   --->   Operation 71 'trunc' 'trunc_ln106_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 72 [1/2] (6.91ns)   --->   "%ahbh = mul i64 %zext_ln112, i64 %zext_ln110" [src/generic/fp_generic.c:117->src/generic/fp_generic.c:187]   --->   Operation 72 'mul' 'ahbh' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%trunc_ln106_12 = trunc i64 %ahbh" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:187]   --->   Operation 73 'trunc' 'trunc_ln106_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%tmp_11 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %albl, i32 32, i32 63" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:187]   --->   Operation 74 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%tmp_s = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ahbl, i32 32, i32 63" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:187]   --->   Operation 75 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.00ns)   --->   "%trunc_ln106_7 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %albh, i32 32, i32 63" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:187]   --->   Operation 76 'partselect' 'trunc_ln106_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_13 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ahbh, i32 32, i32 63" [src/generic/fp_generic.c:189]   --->   Operation 77 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 5.14>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln106 = zext i32 %tmp_11" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:187]   --->   Operation 78 'zext' 'zext_ln106' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln123 = zext i32 %trunc_ln106_11" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:187]   --->   Operation 79 'zext' 'zext_ln123' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln123_1 = zext i32 %trunc_ln106_10" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:187]   --->   Operation 80 'zext' 'zext_ln123_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 81 [1/1] (2.55ns)   --->   "%add_ln123 = add i33 %zext_ln123, i33 %zext_ln123_1" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:187]   --->   Operation 81 'add' 'add_ln123' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln123_2 = zext i33 %add_ln123" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:187]   --->   Operation 82 'zext' 'zext_ln123_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 83 [1/1] (2.59ns)   --->   "%temp = add i34 %zext_ln123_2, i34 %zext_ln106" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:187]   --->   Operation 83 'add' 'temp' <Predicate = true> <Delay = 2.59> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_12 = partselect i2 @_ssdm_op_PartSelect.i2.i34.i32.i32, i34 %temp, i32 32, i32 33" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:187]   --->   Operation 84 'partselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 85 [1/1] (0.00ns)   --->   "%trunc_ln125 = trunc i34 %temp" [src/generic/fp_generic.c:125->src/generic/fp_generic.c:187]   --->   Operation 85 'trunc' 'trunc_ln125' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln106_2 = zext i32 %tmp_s" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:187]   --->   Operation 86 'zext' 'zext_ln106_2' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln130 = zext i32 %trunc_ln106_12" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:187]   --->   Operation 87 'zext' 'zext_ln130' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 88 [1/1] (2.55ns)   --->   "%add_ln130 = add i33 %zext_ln130, i33 %zext_ln106_2" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:187]   --->   Operation 88 'add' 'add_ln130' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 5.14>
ST_6 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln106_1 = zext i2 %tmp_12" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:187]   --->   Operation 89 'zext' 'zext_ln106_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 90 [1/1] (0.00ns)   --->   "%zext_ln130_1 = zext i33 %add_ln130" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:187]   --->   Operation 90 'zext' 'zext_ln130_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 91 [1/1] (2.55ns)   --->   "%add_ln130_1 = add i32 %trunc_ln106_7, i32 %zext_ln106_1" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:187]   --->   Operation 91 'add' 'add_ln130_1' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 92 [1/1] (0.00ns)   --->   "%zext_ln130_2 = zext i32 %add_ln130_1" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:187]   --->   Operation 92 'zext' 'zext_ln130_2' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 93 [1/1] (2.59ns)   --->   "%temp_4 = add i34 %zext_ln130_2, i34 %zext_ln130_1" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:187]   --->   Operation 93 'add' 'temp_4' <Predicate = true> <Delay = 2.59> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 94 [1/1] (0.00ns)   --->   "%trunc_ln105 = trunc i34 %temp_4" [src/generic/fp_generic.c:105->src/generic/fp_generic.c:187]   --->   Operation 94 'trunc' 'trunc_ln105' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 95 [1/1] (0.00ns)   --->   "%tmp_14 = partselect i2 @_ssdm_op_PartSelect.i2.i34.i32.i32, i34 %temp_4, i32 32, i32 33" [src/generic/fp_generic.c:189]   --->   Operation 95 'partselect' 'tmp_14' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 4.51>
ST_7 : Operation 96 [1/1] (0.00ns)   --->   "%and_ln = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %tmp_13, i32 0" [src/generic/fp_generic.c:189]   --->   Operation 96 'bitconcatenate' 'and_ln' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 97 [1/1] (0.00ns)   --->   "%and_ln189_1 = bitconcatenate i34 @_ssdm_op_BitConcatenate.i34.i2.i32, i2 %tmp_14, i32 0" [src/generic/fp_generic.c:189]   --->   Operation 97 'bitconcatenate' 'and_ln189_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 98 [1/1] (0.00ns)   --->   "%zext_ln189 = zext i34 %and_ln189_1" [src/generic/fp_generic.c:189]   --->   Operation 98 'zext' 'zext_ln189' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln189_1 = zext i32 %trunc_ln105" [src/generic/fp_generic.c:189]   --->   Operation 99 'zext' 'zext_ln189_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 100 [1/1] (3.52ns)   --->   "%add_ln189 = add i64 %zext_ln189, i64 %and_ln" [src/generic/fp_generic.c:189]   --->   Operation 100 'add' 'add_ln189' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 101 [1/1] (0.99ns)   --->   "%xor_ln189 = xor i64 %add_ln189, i64 %zext_ln189_1" [src/generic/fp_generic.c:189]   --->   Operation 101 'xor' 'xor_ln189' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.04>
ST_8 : Operation 102 [1/1] (0.00ns)   --->   "%v_6_load_1 = load i64 %v_6" [src/generic/fp_generic.c:188]   --->   Operation 102 'load' 'v_6_load_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 103 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %trunc_ln125, i32 0" [src/generic/fp_generic.c:125->src/generic/fp_generic.c:187]   --->   Operation 103 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 104 [1/1] (0.00ns)   --->   "%tempReg = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %trunc_ln125, i32 %trunc_ln106" [src/generic/fp_generic.c:125->src/generic/fp_generic.c:187]   --->   Operation 104 'bitconcatenate' 'tempReg' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 105 [1/1] (3.52ns)   --->   "%v_7 = add i64 %tempReg, i64 %v_6_load_1" [src/generic/fp_generic.c:188]   --->   Operation 105 'add' 'v_7' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node tempReg_4)   --->   "%xor_ln105_4 = xor i64 %shl_ln, i64 %v_7" [src/config.h:105->src/generic/fp_generic.c:188]   --->   Operation 106 'xor' 'xor_ln105_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node tempReg_4)   --->   "%xor_ln105_5 = xor i64 %v_6_load_1, i64 %shl_ln" [src/config.h:105->src/generic/fp_generic.c:188]   --->   Operation 107 'xor' 'xor_ln105_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node tempReg_4)   --->   "%or_ln105_1 = or i64 %xor_ln105_5, i64 %xor_ln105_4" [src/config.h:105->src/generic/fp_generic.c:188]   --->   Operation 108 'or' 'or_ln105_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node tempReg_4)   --->   "%xor_ln105_6 = xor i64 %or_ln105_1, i64 %v_7" [src/config.h:105->src/generic/fp_generic.c:188]   --->   Operation 109 'xor' 'xor_ln105_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node tempReg_4)   --->   "%carry = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %xor_ln105_6, i32 63" [src/config.h:105->src/generic/fp_generic.c:188]   --->   Operation 110 'bitselect' 'carry' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node tempReg_4)   --->   "%zext_ln105_5 = zext i1 %carry" [src/config.h:105->src/generic/fp_generic.c:188]   --->   Operation 111 'zext' 'zext_ln105_5' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 112 [1/1] (3.52ns) (out node of the LUT)   --->   "%tempReg_4 = add i64 %xor_ln189, i64 %zext_ln105_5" [src/generic/fp_generic.c:189]   --->   Operation 112 'add' 'tempReg_4' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 113 [1/1] (1.48ns)   --->   "%v_2 = select i1 %icmp_ln186, i64 %v_7, i64 %v_6_load_1" [src/generic/fp_generic.c:186]   --->   Operation 113 'select' 'v_2' <Predicate = true> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_8 : Operation 114 [1/1] (1.58ns)   --->   "%store_ln178 = store i64 %v_2, i64 %v_6" [src/generic/fp_generic.c:178]   --->   Operation 114 'store' 'store_ln178' <Predicate = true> <Delay = 1.58>

State 9 <SV = 8> <Delay = 6.58>
ST_9 : Operation 115 [1/1] (0.00ns)   --->   "%u_6_load = load i64 %u_6" [src/generic/fp_generic.c:189]   --->   Operation 115 'load' 'u_6_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 116 [1/1] (3.52ns)   --->   "%u_7 = add i64 %tempReg_4, i64 %u_6_load" [src/generic/fp_generic.c:189]   --->   Operation 116 'add' 'u_7' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node tmp_19)   --->   "%xor_ln105_8 = xor i64 %tempReg_4, i64 %u_7" [src/config.h:105->src/generic/fp_generic.c:189]   --->   Operation 117 'xor' 'xor_ln105_8' <Predicate = (icmp_ln186)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node tmp_19)   --->   "%xor_ln105_9 = xor i64 %u_6_load, i64 %tempReg_4" [src/config.h:105->src/generic/fp_generic.c:189]   --->   Operation 118 'xor' 'xor_ln105_9' <Predicate = (icmp_ln186)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node tmp_19)   --->   "%or_ln105_2 = or i64 %xor_ln105_9, i64 %xor_ln105_8" [src/config.h:105->src/generic/fp_generic.c:189]   --->   Operation 119 'or' 'or_ln105_2' <Predicate = (icmp_ln186)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node tmp_19)   --->   "%xor_ln105_10 = xor i64 %or_ln105_2, i64 %u_7" [src/config.h:105->src/generic/fp_generic.c:189]   --->   Operation 120 'xor' 'xor_ln105_10' <Predicate = (icmp_ln186)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 121 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp_19 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %xor_ln105_10, i32 63" [src/generic/fp_generic.c:189]   --->   Operation 121 'bitselect' 'tmp_19' <Predicate = (icmp_ln186)> <Delay = 0.99>
ST_9 : Operation 122 [1/1] (1.48ns)   --->   "%u_2 = select i1 %icmp_ln186, i64 %u_7, i64 %u_6_load" [src/generic/fp_generic.c:186]   --->   Operation 122 'select' 'u_2' <Predicate = true> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 123 [1/1] (1.58ns)   --->   "%store_ln178 = store i64 %u_2, i64 %u_6" [src/generic/fp_generic.c:178]   --->   Operation 123 'store' 'store_ln178' <Predicate = true> <Delay = 1.58>
ST_9 : Operation 140 [1/1] (0.00ns)   --->   "%t_1_load_1 = load i64 %t_1"   --->   Operation 140 'load' 't_1_load_1' <Predicate = (icmp_ln185)> <Delay = 0.00>
ST_9 : Operation 141 [1/1] (0.00ns)   --->   "%u_6_load_1 = load i64 %u_6"   --->   Operation 141 'load' 'u_6_load_1' <Predicate = (icmp_ln185)> <Delay = 0.00>
ST_9 : Operation 142 [1/1] (0.00ns)   --->   "%v_6_load = load i64 %v_6"   --->   Operation 142 'load' 'v_6_load' <Predicate = (icmp_ln185)> <Delay = 0.00>
ST_9 : Operation 143 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %v_7_out, i64 %v_6_load"   --->   Operation 143 'write' 'write_ln0' <Predicate = (icmp_ln185)> <Delay = 0.00>
ST_9 : Operation 144 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %u_6_out, i64 %u_6_load_1"   --->   Operation 144 'write' 'write_ln0' <Predicate = (icmp_ln185)> <Delay = 0.00>
ST_9 : Operation 145 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %t_1_out, i64 %t_1_load_1"   --->   Operation 145 'write' 'write_ln0' <Predicate = (icmp_ln185)> <Delay = 0.00>
ST_9 : Operation 146 [1/1] (1.58ns)   --->   "%ret_ln0 = ret"   --->   Operation 146 'ret' 'ret_ln0' <Predicate = (icmp_ln185)> <Delay = 1.58>

State 10 <SV = 9> <Delay = 6.58>
ST_10 : Operation 124 [1/1] (0.00ns)   --->   "%t_1_load = load i64 %t_1" [src/generic/fp_generic.c:190]   --->   Operation 124 'load' 't_1_load' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 125 [1/1] (0.00ns)   --->   "%specpipeline_ln178 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_44" [src/generic/fp_generic.c:178]   --->   Operation 125 'specpipeline' 'specpipeline_ln178' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 126 [1/1] (0.00ns)   --->   "%speclooptripcount_ln178 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 0, i64 7, i64 3" [src/generic/fp_generic.c:178]   --->   Operation 126 'speclooptripcount' 'speclooptripcount_ln178' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 127 [1/1] (0.00ns)   --->   "%specloopname_ln185 = specloopname void @_ssdm_op_SpecLoopName, void @empty_39" [src/generic/fp_generic.c:185]   --->   Operation 127 'specloopname' 'specloopname_ln185' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%bit_sel = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i64, i64 %tempReg_4, i64 63" [src/config.h:105->src/generic/fp_generic.c:189]   --->   Operation 128 'bitselect' 'bit_sel' <Predicate = (icmp_ln186)> <Delay = 0.00>
ST_10 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%xor_ln105 = xor i1 %bit_sel, i1 1" [src/config.h:105->src/generic/fp_generic.c:189]   --->   Operation 129 'xor' 'xor_ln105' <Predicate = (icmp_ln186)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%trunc_ln105_4 = trunc i64 %tempReg_4" [src/config.h:105->src/generic/fp_generic.c:189]   --->   Operation 130 'trunc' 'trunc_ln105_4' <Predicate = (icmp_ln186)> <Delay = 0.00>
ST_10 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%xor_ln105_7 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i1.i63, i1 %xor_ln105, i63 %trunc_ln105_4" [src/config.h:105->src/generic/fp_generic.c:189]   --->   Operation 131 'bitconcatenate' 'xor_ln105_7' <Predicate = (icmp_ln186)> <Delay = 0.00>
ST_10 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%and_ln105 = and i64 %xor_ln189, i64 %xor_ln105_7" [src/config.h:105->src/generic/fp_generic.c:189]   --->   Operation 132 'and' 'and_ln105' <Predicate = (icmp_ln186)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%tmp_18 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %and_ln105, i32 63" [src/config.h:103->src/generic/fp_generic.c:189]   --->   Operation 133 'bitselect' 'tmp_18' <Predicate = (icmp_ln186)> <Delay = 0.00>
ST_10 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%carry_4 = or i1 %tmp_19, i1 %tmp_18" [src/generic/fp_generic.c:189]   --->   Operation 134 'or' 'carry_4' <Predicate = (icmp_ln186)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%zext_ln190 = zext i1 %carry_4" [src/generic/fp_generic.c:190]   --->   Operation 135 'zext' 'zext_ln190' <Predicate = (icmp_ln186)> <Delay = 0.00>
ST_10 : Operation 136 [1/1] (3.52ns) (out node of the LUT)   --->   "%t = add i64 %t_1_load, i64 %zext_ln190" [src/generic/fp_generic.c:190]   --->   Operation 136 'add' 't' <Predicate = (icmp_ln186)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 137 [1/1] (1.48ns)   --->   "%t_2 = select i1 %icmp_ln186, i64 %t, i64 %t_1_load" [src/generic/fp_generic.c:186]   --->   Operation 137 'select' 't_2' <Predicate = true> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 138 [1/1] (1.58ns)   --->   "%store_ln178 = store i64 %t_2, i64 %t_1" [src/generic/fp_generic.c:178]   --->   Operation 138 'store' 'store_ln178' <Predicate = true> <Delay = 1.58>
ST_10 : Operation 139 [1/1] (0.00ns)   --->   "%br_ln185 = br void %for.body6" [src/generic/fp_generic.c:185]   --->   Operation 139 'br' 'br_ln185' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.560ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln177', src/generic/fp_generic.c:177) of constant 0 on local variable 'j', src/generic/fp_generic.c:177 [25]  (1.588 ns)
	'load' operation 3 bit ('j', src/generic/fp_generic.c:185) on local variable 'j', src/generic/fp_generic.c:177 [31]  (0.000 ns)
	'sub' operation 3 bit ('sub_ln187', src/generic/fp_generic.c:187) [56]  (1.650 ns)
	'getelementptr' operation 3 bit ('p503p1_1_addr', src/generic/fp_generic.c:187) [58]  (0.000 ns)
	'load' operation 64 bit ('b', src/generic/fp_generic.c:187) on array 'p503p1_1' [59]  (2.322 ns)

 <State 2>: 3.803ns
The critical path consists of the following:
	'load' operation 64 bit ('mc_0_load', src/generic/fp_generic.c:187) on array 'mc_0' [52]  (2.322 ns)
	'select' operation 64 bit ('a', src/generic/fp_generic.c:187) [54]  (1.481 ns)

 <State 3>: 6.912ns
The critical path consists of the following:
	'mul' operation 64 bit ('albl', src/generic/fp_generic.c:114->src/generic/fp_generic.c:187) [67]  (6.912 ns)

 <State 4>: 6.912ns
The critical path consists of the following:
	'mul' operation 64 bit ('albl', src/generic/fp_generic.c:114->src/generic/fp_generic.c:187) [67]  (6.912 ns)

 <State 5>: 5.145ns
The critical path consists of the following:
	'add' operation 33 bit ('add_ln123', src/generic/fp_generic.c:123->src/generic/fp_generic.c:187) [79]  (2.552 ns)
	'add' operation 34 bit ('temp', src/generic/fp_generic.c:123->src/generic/fp_generic.c:187) [81]  (2.593 ns)

 <State 6>: 5.145ns
The critical path consists of the following:
	'add' operation 32 bit ('add_ln130_1', src/generic/fp_generic.c:130->src/generic/fp_generic.c:187) [93]  (2.552 ns)
	'add' operation 34 bit ('temp', src/generic/fp_generic.c:130->src/generic/fp_generic.c:187) [95]  (2.593 ns)

 <State 7>: 4.510ns
The critical path consists of the following:
	'add' operation 64 bit ('add_ln189', src/generic/fp_generic.c:189) [110]  (3.520 ns)
	'xor' operation 64 bit ('xor_ln189', src/generic/fp_generic.c:189) [111]  (0.990 ns)

 <State 8>: 7.040ns
The critical path consists of the following:
	'load' operation 64 bit ('v_6_load_1', src/generic/fp_generic.c:188) on local variable 'v', src/generic/fp_generic.c:178 [39]  (0.000 ns)
	'add' operation 64 bit ('v', src/generic/fp_generic.c:188) [97]  (3.520 ns)
	'xor' operation 64 bit ('xor_ln105_6', src/config.h:105->src/generic/fp_generic.c:188) [101]  (0.000 ns)
	'add' operation 64 bit ('tempReg', src/generic/fp_generic.c:189) [112]  (3.520 ns)

 <State 9>: 6.589ns
The critical path consists of the following:
	'load' operation 64 bit ('u_6_load', src/generic/fp_generic.c:189) on local variable 'u', src/generic/fp_generic.c:178 [38]  (0.000 ns)
	'add' operation 64 bit ('u', src/generic/fp_generic.c:189) [113]  (3.520 ns)
	'select' operation 64 bit ('u', src/generic/fp_generic.c:186) [129]  (1.481 ns)
	'store' operation 0 bit ('store_ln178', src/generic/fp_generic.c:178) of variable 'u', src/generic/fp_generic.c:186 on local variable 'u', src/generic/fp_generic.c:178 [133]  (1.588 ns)

 <State 10>: 6.589ns
The critical path consists of the following:
	'load' operation 64 bit ('t_1_load', src/generic/fp_generic.c:190) on local variable 't', src/generic/fp_generic.c:178 [37]  (0.000 ns)
	'add' operation 64 bit ('t', src/generic/fp_generic.c:190) [127]  (3.520 ns)
	'select' operation 64 bit ('t', src/generic/fp_generic.c:186) [128]  (1.481 ns)
	'store' operation 0 bit ('store_ln178', src/generic/fp_generic.c:178) of variable 't', src/generic/fp_generic.c:186 on local variable 't', src/generic/fp_generic.c:178 [134]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
