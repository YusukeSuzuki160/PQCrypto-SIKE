

================================================================
== Vitis HLS Report for 'mp_mul_862_Pipeline_VITIS_LOOP_157_4'
================================================================
* Date:           Tue May 20 14:32:45 2025

* Version:        2024.2.2 (Build 6049644 on Mar  5 2025)
* Project:        sikep503_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.040 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |       10|       16|  0.100 us|  0.160 us|    2|    8|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count | Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+
        |- VITIS_LOOP_157_4  |        8|       14|         9|          1|          1|  1 ~ 7|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 9


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 9
* Pipeline : 1
  Pipeline-0 : II = 1, D = 9, States = { 1 2 3 4 5 6 7 8 9 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.66>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%t_33 = alloca i32 1" [src/generic/fp_generic.c:140]   --->   Operation 12 'alloca' 't_33' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%v_35 = alloca i32 1" [src/generic/fp_generic.c:140]   --->   Operation 13 'alloca' 'v_35' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%j_9 = alloca i32 1" [src/generic/fp_generic.c:139]   --->   Operation 14 'alloca' 'j_9' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln0 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i64 %PKB"   --->   Operation 15 'specbramwithbyteenable' 'specbramwithbyteenable_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %empty"   --->   Operation 16 'read' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%a_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %a"   --->   Operation 17 'read' 'a_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln156_read = read i4 @_ssdm_op_Read.ap_auto.i4, i4 %zext_ln156"   --->   Operation 18 'read' 'zext_ln156_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%v_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %v"   --->   Operation 19 'read' 'v_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%indvars_iv_read = read i3 @_ssdm_op_Read.ap_auto.i3, i3 %indvars_iv"   --->   Operation 20 'read' 'indvars_iv_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%zext_ln156_cast = zext i4 %zext_ln156_read"   --->   Operation 21 'zext' 'zext_ln156_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%indvars_iv_cast = zext i3 %indvars_iv_read"   --->   Operation 22 'zext' 'indvars_iv_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (1.58ns)   --->   "%store_ln139 = store i4 %indvars_iv_cast, i4 %j_9" [src/generic/fp_generic.c:139]   --->   Operation 23 'store' 'store_ln139' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 24 [1/1] (1.58ns)   --->   "%store_ln140 = store i64 %v_read, i64 %v_35" [src/generic/fp_generic.c:140]   --->   Operation 24 'store' 'store_ln140' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 25 [1/1] (1.58ns)   --->   "%store_ln140 = store i64 %zext_ln156_cast, i64 %u_34_out" [src/generic/fp_generic.c:140]   --->   Operation 25 'store' 'store_ln140' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 26 [1/1] (1.58ns)   --->   "%store_ln140 = store i3 0, i3 %t_33" [src/generic/fp_generic.c:140]   --->   Operation 26 'store' 'store_ln140' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc58"   --->   Operation 27 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%j = load i4 %j_9" [src/generic/fp_generic.c:157]   --->   Operation 28 'load' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (1.73ns)   --->   "%icmp_ln157 = icmp_eq  i4 %j, i4 8" [src/generic/fp_generic.c:157]   --->   Operation 29 'icmp' 'icmp_ln157' <Predicate = true> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%br_ln157 = br i1 %icmp_ln157, void %for.inc58.split, void %for.inc63.exitStub" [src/generic/fp_generic.c:157]   --->   Operation 30 'br' 'br_ln157' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln157 = trunc i4 %j" [src/generic/fp_generic.c:157]   --->   Operation 31 'trunc' 'trunc_ln157' <Predicate = (!icmp_ln157)> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%shl_ln8 = bitconcatenate i7 @_ssdm_op_BitConcatenate.i7.i4.i3, i4 %j, i3 0" [src/generic/fp_generic.c:158]   --->   Operation 32 'bitconcatenate' 'shl_ln8' <Predicate = (!icmp_ln157)> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln158 = zext i7 %shl_ln8" [src/generic/fp_generic.c:158]   --->   Operation 33 'zext' 'zext_ln158' <Predicate = (!icmp_ln157)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (1.82ns)   --->   "%add_ln158 = add i9 %zext_ln158, i9 %a_read" [src/generic/fp_generic.c:158]   --->   Operation 34 'add' 'add_ln158' <Predicate = (!icmp_ln157)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%lshr_ln8 = partselect i6 @_ssdm_op_PartSelect.i6.i9.i32.i32, i9 %add_ln158, i32 3, i32 8" [src/generic/fp_generic.c:158]   --->   Operation 35 'partselect' 'lshr_ln8' <Predicate = (!icmp_ln157)> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln158_4 = zext i6 %lshr_ln8" [src/generic/fp_generic.c:158]   --->   Operation 36 'zext' 'zext_ln158_4' <Predicate = (!icmp_ln157)> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%PKB_addr = getelementptr i64 %PKB, i32 0, i32 %zext_ln158_4" [src/generic/fp_generic.c:158]   --->   Operation 37 'getelementptr' 'PKB_addr' <Predicate = (!icmp_ln157)> <Delay = 0.00>
ST_1 : Operation 38 [2/2] (3.25ns)   --->   "%PKB_load = load i6 %PKB_addr" [src/generic/fp_generic.c:158]   --->   Operation 38 'load' 'PKB_load' <Predicate = (!icmp_ln157)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 48> <RAM>
ST_1 : Operation 39 [1/1] (1.65ns)   --->   "%sub_ln158 = sub i3 %tmp, i3 %trunc_ln157" [src/generic/fp_generic.c:158]   --->   Operation 39 'sub' 'sub_ln158' <Predicate = (!icmp_ln157)> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln158_5 = zext i3 %sub_ln158" [src/generic/fp_generic.c:158]   --->   Operation 40 'zext' 'zext_ln158_5' <Predicate = (!icmp_ln157)> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%b_addr = getelementptr i64 %b, i32 0, i32 %zext_ln158_5" [src/generic/fp_generic.c:158]   --->   Operation 41 'getelementptr' 'b_addr' <Predicate = (!icmp_ln157)> <Delay = 0.00>
ST_1 : Operation 42 [2/2] (2.32ns)   --->   "%b_load = load i3 %b_addr" [src/generic/fp_generic.c:158]   --->   Operation 42 'load' 'b_load' <Predicate = (!icmp_ln157)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 64> <Depth = 8> <ROM>
ST_1 : Operation 43 [1/1] (1.73ns)   --->   "%add_ln157 = add i4 %j, i4 1" [src/generic/fp_generic.c:157]   --->   Operation 43 'add' 'add_ln157' <Predicate = (!icmp_ln157)> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (1.58ns)   --->   "%store_ln139 = store i4 %add_ln157, i4 %j_9" [src/generic/fp_generic.c:139]   --->   Operation 44 'store' 'store_ln139' <Predicate = (!icmp_ln157)> <Delay = 1.58>

State 2 <SV = 1> <Delay = 3.25>
ST_2 : Operation 45 [1/2] ( I:3.25ns O:3.25ns )   --->   "%PKB_load = load i6 %PKB_addr" [src/generic/fp_generic.c:158]   --->   Operation 45 'load' 'PKB_load' <Predicate = true> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 48> <RAM>
ST_2 : Operation 46 [1/1] (0.00ns)   --->   "%al = trunc i64 %PKB_load" [src/generic/fp_generic.c:158]   --->   Operation 46 'trunc' 'al' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 47 [1/2] ( I:2.32ns O:2.32ns )   --->   "%b_load = load i3 %b_addr" [src/generic/fp_generic.c:158]   --->   Operation 47 'load' 'b_load' <Predicate = true> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 64> <Depth = 8> <ROM>
ST_2 : Operation 48 [1/1] (0.00ns)   --->   "%bl = trunc i64 %b_load" [src/generic/fp_generic.c:103->src/generic/fp_generic.c:158]   --->   Operation 48 'trunc' 'bl' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 49 [1/1] (0.00ns)   --->   "%ah = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %PKB_load, i32 32, i32 63" [src/generic/fp_generic.c:110->src/generic/fp_generic.c:158]   --->   Operation 49 'partselect' 'ah' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%bh = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %b_load, i32 32, i32 63" [src/generic/fp_generic.c:112->src/generic/fp_generic.c:158]   --->   Operation 50 'partselect' 'bh' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 6.91>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln105 = zext i32 %al" [src/generic/fp_generic.c:105->src/generic/fp_generic.c:158]   --->   Operation 51 'zext' 'zext_ln105' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln110 = zext i32 %ah" [src/generic/fp_generic.c:110->src/generic/fp_generic.c:158]   --->   Operation 52 'zext' 'zext_ln110' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln105_66 = zext i32 %bl" [src/generic/fp_generic.c:105->src/generic/fp_generic.c:158]   --->   Operation 53 'zext' 'zext_ln105_66' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln112 = zext i32 %bh" [src/generic/fp_generic.c:112->src/generic/fp_generic.c:158]   --->   Operation 54 'zext' 'zext_ln112' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 55 [2/2] (6.91ns)   --->   "%albl = mul i64 %zext_ln105_66, i64 %zext_ln105" [src/generic/fp_generic.c:114->src/generic/fp_generic.c:158]   --->   Operation 55 'mul' 'albl' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 56 [2/2] (6.91ns)   --->   "%albh = mul i64 %zext_ln112, i64 %zext_ln105" [src/generic/fp_generic.c:115->src/generic/fp_generic.c:158]   --->   Operation 56 'mul' 'albh' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 57 [2/2] (6.91ns)   --->   "%ahbl = mul i64 %zext_ln105_66, i64 %zext_ln110" [src/generic/fp_generic.c:116->src/generic/fp_generic.c:158]   --->   Operation 57 'mul' 'ahbl' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 58 [2/2] (6.91ns)   --->   "%ahbh = mul i64 %zext_ln112, i64 %zext_ln110" [src/generic/fp_generic.c:117->src/generic/fp_generic.c:158]   --->   Operation 58 'mul' 'ahbh' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.91>
ST_4 : Operation 59 [1/2] (6.91ns)   --->   "%albl = mul i64 %zext_ln105_66, i64 %zext_ln105" [src/generic/fp_generic.c:114->src/generic/fp_generic.c:158]   --->   Operation 59 'mul' 'albl' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%trunc_ln106 = trunc i64 %albl" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:158]   --->   Operation 60 'trunc' 'trunc_ln106' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/2] (6.91ns)   --->   "%albh = mul i64 %zext_ln112, i64 %zext_ln105" [src/generic/fp_generic.c:115->src/generic/fp_generic.c:158]   --->   Operation 61 'mul' 'albh' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%trunc_ln106_96 = trunc i64 %albh" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:158]   --->   Operation 62 'trunc' 'trunc_ln106_96' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/2] (6.91ns)   --->   "%ahbl = mul i64 %zext_ln105_66, i64 %zext_ln110" [src/generic/fp_generic.c:116->src/generic/fp_generic.c:158]   --->   Operation 63 'mul' 'ahbl' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln106_97 = trunc i64 %ahbl" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:158]   --->   Operation 64 'trunc' 'trunc_ln106_97' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/2] (6.91ns)   --->   "%ahbh = mul i64 %zext_ln112, i64 %zext_ln110" [src/generic/fp_generic.c:117->src/generic/fp_generic.c:158]   --->   Operation 65 'mul' 'ahbh' <Predicate = true> <Delay = 6.91> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 1> <II = 1> <Delay = 6.91> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 66 [1/1] (0.00ns)   --->   "%trunc_ln106_98 = trunc i64 %ahbh" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:158]   --->   Operation 66 'trunc' 'trunc_ln106_98' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_s = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %albl, i32 32, i32 63" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:158]   --->   Operation 67 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.00ns)   --->   "%tmp_158 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ahbl, i32 32, i32 63" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:158]   --->   Operation 68 'partselect' 'tmp_158' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%tmp_159 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %albh, i32 32, i32 63" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:158]   --->   Operation 69 'partselect' 'tmp_159' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (0.00ns)   --->   "%tmp_160 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %ahbh, i32 32, i32 63" [src/generic/fp_generic.c:133->src/generic/fp_generic.c:158]   --->   Operation 70 'partselect' 'tmp_160' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 5.14>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "%zext_ln106 = zext i32 %tmp_s" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:158]   --->   Operation 71 'zext' 'zext_ln106' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%zext_ln123 = zext i32 %trunc_ln106_97" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:158]   --->   Operation 72 'zext' 'zext_ln123' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln123_55 = zext i32 %trunc_ln106_96" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:158]   --->   Operation 73 'zext' 'zext_ln123_55' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (2.55ns)   --->   "%add_ln123 = add i33 %zext_ln123, i33 %zext_ln123_55" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:158]   --->   Operation 74 'add' 'add_ln123' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%zext_ln123_56 = zext i33 %add_ln123" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:158]   --->   Operation 75 'zext' 'zext_ln123_56' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (2.59ns)   --->   "%temp = add i34 %zext_ln123_56, i34 %zext_ln106" [src/generic/fp_generic.c:123->src/generic/fp_generic.c:158]   --->   Operation 76 'add' 'temp' <Predicate = true> <Delay = 2.59> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%tmp_157 = partselect i2 @_ssdm_op_PartSelect.i2.i34.i32.i32, i34 %temp, i32 32, i32 33" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:158]   --->   Operation 77 'partselect' 'tmp_157' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "%trunc_ln125 = trunc i34 %temp" [src/generic/fp_generic.c:125->src/generic/fp_generic.c:158]   --->   Operation 78 'trunc' 'trunc_ln125' <Predicate = true> <Delay = 0.00>

State 6 <SV = 5> <Delay = 6.92>
ST_6 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln106_63 = zext i2 %tmp_157" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:158]   --->   Operation 79 'zext' 'zext_ln106_63' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln106_64 = zext i32 %tmp_158" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:158]   --->   Operation 80 'zext' 'zext_ln106_64' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln106_65 = zext i32 %tmp_159" [src/generic/fp_generic.c:106->src/generic/fp_generic.c:158]   --->   Operation 81 'zext' 'zext_ln106_65' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 82 [1/1] (0.00ns)   --->   "%zext_ln130 = zext i32 %trunc_ln106_98" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:158]   --->   Operation 82 'zext' 'zext_ln130' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 83 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln130 = add i32 %trunc_ln106_98, i32 %tmp_158" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:158]   --->   Operation 83 'add' 'add_ln130' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 84 [1/1] (2.55ns)   --->   "%add_ln130_64 = add i33 %zext_ln130, i33 %zext_ln106_64" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:158]   --->   Operation 84 'add' 'add_ln130_64' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 85 [1/1] (0.00ns)   --->   "%zext_ln130_55 = zext i33 %add_ln130_64" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:158]   --->   Operation 85 'zext' 'zext_ln130_55' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 86 [1/1] (2.55ns)   --->   "%add_ln130_65 = add i33 %zext_ln106_65, i33 %zext_ln106_63" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:158]   --->   Operation 86 'add' 'add_ln130_65' <Predicate = true> <Delay = 2.55> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 87 [1/1] (0.00ns)   --->   "%trunc_ln130 = trunc i33 %add_ln130_65" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:158]   --->   Operation 87 'trunc' 'trunc_ln130' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 88 [1/1] (0.00ns)   --->   "%zext_ln130_56 = zext i33 %add_ln130_65" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:158]   --->   Operation 88 'zext' 'zext_ln130_56' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 89 [1/1] (4.37ns) (root node of TernaryAdder)   --->   "%add_ln105 = add i32 %trunc_ln130, i32 %add_ln130" [src/generic/fp_generic.c:105->src/generic/fp_generic.c:158]   --->   Operation 89 'add' 'add_ln105' <Predicate = true> <Delay = 4.37> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.18> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 90 [1/1] (2.59ns)   --->   "%temp_31 = add i34 %zext_ln130_56, i34 %zext_ln130_55" [src/generic/fp_generic.c:130->src/generic/fp_generic.c:158]   --->   Operation 90 'add' 'temp_31' <Predicate = true> <Delay = 2.59> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.59> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 91 [1/1] (0.00ns)   --->   "%tmp_161 = partselect i2 @_ssdm_op_PartSelect.i2.i34.i32.i32, i34 %temp_31, i32 32, i32 33" [src/generic/fp_generic.c:133->src/generic/fp_generic.c:158]   --->   Operation 91 'partselect' 'tmp_161' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 7.04>
ST_7 : Operation 92 [1/1] (0.00ns)   --->   "%v_35_load = load i64 %v_35" [src/generic/fp_generic.c:159]   --->   Operation 92 'load' 'v_35_load' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 93 [1/1] (0.00ns)   --->   "%shl_ln125_9 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %trunc_ln125, i32 0" [src/generic/fp_generic.c:125->src/generic/fp_generic.c:158]   --->   Operation 93 'bitconcatenate' 'shl_ln125_9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 94 [1/1] (0.00ns)   --->   "%and_ln133_8 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %tmp_160, i32 0" [src/generic/fp_generic.c:133->src/generic/fp_generic.c:158]   --->   Operation 94 'bitconcatenate' 'and_ln133_8' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 95 [1/1] (0.00ns)   --->   "%and_ln133_9 = bitconcatenate i34 @_ssdm_op_BitConcatenate.i34.i2.i32, i2 %tmp_161, i32 0" [src/generic/fp_generic.c:133->src/generic/fp_generic.c:158]   --->   Operation 95 'bitconcatenate' 'and_ln133_9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 96 [1/1] (0.00ns)   --->   "%zext_ln133 = zext i34 %and_ln133_9" [src/generic/fp_generic.c:133->src/generic/fp_generic.c:158]   --->   Operation 96 'zext' 'zext_ln133' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 97 [1/1] (3.52ns)   --->   "%add_ln133 = add i64 %zext_ln133, i64 %and_ln133_8" [src/generic/fp_generic.c:133->src/generic/fp_generic.c:158]   --->   Operation 97 'add' 'add_ln133' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 98 [1/1] (0.00ns)   --->   "%or_ln8 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %trunc_ln125, i32 %trunc_ln106" [src/generic/fp_generic.c:159]   --->   Operation 98 'bitconcatenate' 'or_ln8' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 99 [1/1] (3.52ns)   --->   "%v_118 = add i64 %or_ln8, i64 %v_35_load" [src/generic/fp_generic.c:159]   --->   Operation 99 'add' 'v_118' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node tempReg)   --->   "%xor_ln105_13 = xor i64 %v_118, i64 %shl_ln125_9" [src/config.h:105->src/generic/fp_generic.c:159]   --->   Operation 100 'xor' 'xor_ln105_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node tempReg)   --->   "%xor_ln105_14 = xor i64 %shl_ln125_9, i64 %v_35_load" [src/config.h:105->src/generic/fp_generic.c:159]   --->   Operation 101 'xor' 'xor_ln105_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node tempReg)   --->   "%or_ln105_3 = or i64 %xor_ln105_13, i64 %xor_ln105_14" [src/config.h:105->src/generic/fp_generic.c:159]   --->   Operation 102 'or' 'or_ln105_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node tempReg)   --->   "%xor_ln105_15 = xor i64 %or_ln105_3, i64 %v_118" [src/config.h:105->src/generic/fp_generic.c:159]   --->   Operation 103 'xor' 'xor_ln105_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node tempReg)   --->   "%carry = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %xor_ln105_15, i32 63" [src/config.h:105->src/generic/fp_generic.c:159]   --->   Operation 104 'bitselect' 'carry' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node tempReg)   --->   "%zext_ln105_67 = zext i1 %carry" [src/config.h:105->src/generic/fp_generic.c:159]   --->   Operation 105 'zext' 'zext_ln105_67' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node tempReg)   --->   "%tmp_6 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %add_ln133, i32 32, i32 63" [src/generic/fp_generic.c:160]   --->   Operation 106 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node tempReg)   --->   "%or_ln9 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i32.i32, i32 %tmp_6, i32 %add_ln105" [src/generic/fp_generic.c:160]   --->   Operation 107 'bitconcatenate' 'or_ln9' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 108 [1/1] (3.52ns) (out node of the LUT)   --->   "%tempReg = add i64 %or_ln9, i64 %zext_ln105_67" [src/generic/fp_generic.c:160]   --->   Operation 108 'add' 'tempReg' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 109 [1/1] (1.58ns)   --->   "%store_ln140 = store i64 %v_118, i64 %v_35" [src/generic/fp_generic.c:140]   --->   Operation 109 'store' 'store_ln140' <Predicate = true> <Delay = 1.58>

State 8 <SV = 7> <Delay = 5.10>
ST_8 : Operation 110 [1/1] (0.00ns)   --->   "%u_34_out_load = load i64 %u_34_out" [src/generic/fp_generic.c:160]   --->   Operation 110 'load' 'u_34_out_load' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 111 [1/1] (3.52ns)   --->   "%u = add i64 %tempReg, i64 %u_34_out_load" [src/generic/fp_generic.c:160]   --->   Operation 111 'add' 'u' <Predicate = true> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 112 [1/1] (1.58ns)   --->   "%store_ln140 = store i64 %u, i64 %u_34_out" [src/generic/fp_generic.c:140]   --->   Operation 112 'store' 'store_ln140' <Predicate = true> <Delay = 1.58>
ST_8 : Operation 132 [1/1] (0.00ns)   --->   "%t_33_load24 = load i3 %t_33"   --->   Operation 132 'load' 't_33_load24' <Predicate = (icmp_ln157)> <Delay = 0.00>
ST_8 : Operation 133 [1/1] (0.00ns)   --->   "%v_35_load22 = load i64 %v_35"   --->   Operation 133 'load' 'v_35_load22' <Predicate = (icmp_ln157)> <Delay = 0.00>
ST_8 : Operation 134 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i64P0A, i64 %v_35_out, i64 %v_35_load22"   --->   Operation 134 'write' 'write_ln0' <Predicate = (icmp_ln157)> <Delay = 0.00>
ST_8 : Operation 135 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i3P0A, i3 %t_33_out, i3 %t_33_load24"   --->   Operation 135 'write' 'write_ln0' <Predicate = (icmp_ln157)> <Delay = 0.00>
ST_8 : Operation 136 [1/1] (1.58ns)   --->   "%ret_ln0 = ret"   --->   Operation 136 'ret' 'ret_ln0' <Predicate = (icmp_ln157)> <Delay = 1.58>

State 9 <SV = 8> <Delay = 4.22>
ST_9 : Operation 113 [1/1] (0.00ns)   --->   "%t_33_load = load i3 %t_33" [src/generic/fp_generic.c:161]   --->   Operation 113 'load' 't_33_load' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 114 [1/1] (0.00ns)   --->   "%specpipeline_ln139 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_44" [src/generic/fp_generic.c:139]   --->   Operation 114 'specpipeline' 'specpipeline_ln139' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 115 [1/1] (0.00ns)   --->   "%speclooptripcount_ln139 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 1, i64 7, i64 4" [src/generic/fp_generic.c:139]   --->   Operation 115 'speclooptripcount' 'speclooptripcount_ln139' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 116 [1/1] (0.00ns)   --->   "%specloopname_ln157 = specloopname void @_ssdm_op_SpecLoopName, void @empty_41" [src/generic/fp_generic.c:157]   --->   Operation 116 'specloopname' 'specloopname_ln157' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node xor_ln160_9)   --->   "%xor_ln160 = xor i64 %u, i64 %tempReg" [src/generic/fp_generic.c:160]   --->   Operation 117 'xor' 'xor_ln160' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node xor_ln160_9)   --->   "%xor_ln160_7 = xor i64 %tempReg, i64 %u_34_out_load" [src/generic/fp_generic.c:160]   --->   Operation 118 'xor' 'xor_ln160_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node xor_ln160_9)   --->   "%or_ln160 = or i64 %xor_ln160, i64 %xor_ln160_7" [src/generic/fp_generic.c:160]   --->   Operation 119 'or' 'or_ln160' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%bit_sel1 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i64, i64 %tempReg, i64 63" [src/generic/fp_generic.c:160]   --->   Operation 120 'bitselect' 'bit_sel1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%xor_ln160_10 = xor i1 %bit_sel1, i1 1" [src/generic/fp_generic.c:160]   --->   Operation 121 'xor' 'xor_ln160_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%trunc_ln160 = trunc i64 %tempReg" [src/generic/fp_generic.c:160]   --->   Operation 122 'trunc' 'trunc_ln160' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%xor_ln160_8 = bitconcatenate i64 @_ssdm_op_BitConcatenate.i64.i1.i63, i1 %xor_ln160_10, i63 %trunc_ln160" [src/generic/fp_generic.c:160]   --->   Operation 123 'bitconcatenate' 'xor_ln160_8' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%and_ln160 = and i64 %xor_ln160_8, i64 %add_ln133" [src/generic/fp_generic.c:160]   --->   Operation 124 'and' 'and_ln160' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 125 [1/1] (0.99ns) (out node of the LUT)   --->   "%xor_ln160_9 = xor i64 %or_ln160, i64 %u" [src/generic/fp_generic.c:160]   --->   Operation 125 'xor' 'xor_ln160_9' <Predicate = true> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%or_ln160_3 = or i64 %xor_ln160_9, i64 %and_ln160" [src/generic/fp_generic.c:160]   --->   Operation 126 'or' 'or_ln160_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%tmp_126 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %or_ln160_3, i32 63" [src/generic/fp_generic.c:161]   --->   Operation 127 'bitselect' 'tmp_126' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 128 [1/1] (0.00ns) (grouped into LUT with out node t)   --->   "%zext_ln161 = zext i1 %tmp_126" [src/generic/fp_generic.c:161]   --->   Operation 128 'zext' 'zext_ln161' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 129 [1/1] (1.65ns) (out node of the LUT)   --->   "%t = add i3 %zext_ln161, i3 %t_33_load" [src/generic/fp_generic.c:161]   --->   Operation 129 'add' 't' <Predicate = true> <Delay = 1.65> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 130 [1/1] (1.58ns)   --->   "%store_ln140 = store i3 %t, i3 %t_33" [src/generic/fp_generic.c:140]   --->   Operation 130 'store' 'store_ln140' <Predicate = true> <Delay = 1.58>
ST_9 : Operation 131 [1/1] (0.00ns)   --->   "%br_ln157 = br void %for.inc58" [src/generic/fp_generic.c:157]   --->   Operation 131 'br' 'br_ln157' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.665ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln139', src/generic/fp_generic.c:139) of variable 'indvars_iv_cast' on local variable 'j', src/generic/fp_generic.c:139 [22]  (1.588 ns)
	'load' operation 4 bit ('j', src/generic/fp_generic.c:157) on local variable 'j', src/generic/fp_generic.c:139 [28]  (0.000 ns)
	'add' operation 9 bit ('add_ln158', src/generic/fp_generic.c:158) [41]  (1.823 ns)
	'getelementptr' operation 6 bit ('PKB_addr', src/generic/fp_generic.c:158) [44]  (0.000 ns)
	'load' operation 64 bit ('a', src/generic/fp_generic.c:158) on array 'PKB' [45]  (3.254 ns)

 <State 2>: 3.254ns
The critical path consists of the following:
	'load' operation 64 bit ('a', src/generic/fp_generic.c:158) on array 'PKB' [45]  (3.254 ns)

 <State 3>: 6.912ns
The critical path consists of the following:
	'mul' operation 64 bit ('albl', src/generic/fp_generic.c:114->src/generic/fp_generic.c:158) [58]  (6.912 ns)

 <State 4>: 6.912ns
The critical path consists of the following:
	'mul' operation 64 bit ('albl', src/generic/fp_generic.c:114->src/generic/fp_generic.c:158) [58]  (6.912 ns)

 <State 5>: 5.145ns
The critical path consists of the following:
	'add' operation 33 bit ('add_ln123', src/generic/fp_generic.c:123->src/generic/fp_generic.c:158) [70]  (2.552 ns)
	'add' operation 34 bit ('temp', src/generic/fp_generic.c:123->src/generic/fp_generic.c:158) [72]  (2.593 ns)

 <State 6>: 6.923ns
The critical path consists of the following:
	'add' operation 33 bit ('add_ln130_65', src/generic/fp_generic.c:130->src/generic/fp_generic.c:158) [85]  (2.552 ns)
	'add' operation 32 bit ('add_ln105', src/generic/fp_generic.c:105->src/generic/fp_generic.c:158) [88]  (4.371 ns)

 <State 7>: 7.040ns
The critical path consists of the following:
	'load' operation 64 bit ('v_35_load', src/generic/fp_generic.c:159) on local variable 'v', src/generic/fp_generic.c:140 [34]  (0.000 ns)
	'add' operation 64 bit ('x', src/generic/fp_generic.c:159) [97]  (3.520 ns)
	'xor' operation 64 bit ('xor_ln105_15', src/config.h:105->src/generic/fp_generic.c:159) [101]  (0.000 ns)
	'add' operation 64 bit ('tempReg', src/generic/fp_generic.c:160) [106]  (3.520 ns)

 <State 8>: 5.108ns
The critical path consists of the following:
	'load' operation 64 bit ('u_34_out_load', src/generic/fp_generic.c:160) on local variable 'u_34_out' [33]  (0.000 ns)
	'add' operation 64 bit ('x', src/generic/fp_generic.c:160) [107]  (3.520 ns)
	'store' operation 0 bit ('store_ln140', src/generic/fp_generic.c:140) of variable 'x', src/generic/fp_generic.c:160 on local variable 'u_34_out' [124]  (1.588 ns)

 <State 9>: 4.228ns
The critical path consists of the following:
	'xor' operation 64 bit ('xor_ln160', src/generic/fp_generic.c:160) [108]  (0.000 ns)
	'or' operation 64 bit ('or_ln160', src/generic/fp_generic.c:160) [110]  (0.000 ns)
	'xor' operation 64 bit ('xor_ln160_9', src/generic/fp_generic.c:160) [116]  (0.990 ns)
	'or' operation 64 bit ('or_ln160_3', src/generic/fp_generic.c:160) [117]  (0.000 ns)
	'add' operation 3 bit ('t', src/generic/fp_generic.c:161) [120]  (1.650 ns)
	'store' operation 0 bit ('store_ln140', src/generic/fp_generic.c:140) of variable 't', src/generic/fp_generic.c:161 on local variable 't', src/generic/fp_generic.c:140 [125]  (1.588 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
