

================================================================
== Vitis HLS Report for 'from_mont_2_Pipeline_VITIS_LOOP_91_1'
================================================================
* Date:           Tue May 20 14:32:34 2025

* Version:        2024.2.2 (Build 6049644 on Mar  5 2025)
* Project:        sikep503_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.774 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |       20|       20|  0.200 us|  0.200 us|   18|   18|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_91_1  |       18|       18|         4|          2|          1|     8|       yes|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 5


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 1
  Pipeline-0 : II = 2, D = 5, States = { 1 2 3 4 5 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.58>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%reuse_addr_reg = alloca i32 1"   --->   Operation 7 'alloca' 'reuse_addr_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%reuse_reg = alloca i32 1"   --->   Operation 8 'alloca' 'reuse_reg' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%i = alloca i32 1" [src/generic/fp_generic.c:88->src/fpx.c:44]   --->   Operation 9 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.58ns)   --->   "%store_ln88 = store i4 0, i4 %i" [src/generic/fp_generic.c:88->src/fpx.c:44]   --->   Operation 10 'store' 'store_ln88' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 11 [1/1] (1.58ns)   --->   "%store_ln0 = store i64 0, i64 %reuse_reg"   --->   Operation 11 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 12 [1/1] (1.58ns)   --->   "%store_ln0 = store i32 4294967295, i32 %reuse_addr_reg"   --->   Operation 12 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 13 [1/1] (1.58ns)   --->   "%br_ln0 = br void %for.inc.i"   --->   Operation 13 'br' 'br_ln0' <Predicate = true> <Delay = 1.58>

State 2 <SV = 1> <Delay = 3.32>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%i_94 = load i4 %i" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 14 'load' 'i_94' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (1.73ns)   --->   "%icmp_ln91 = icmp_eq  i4 %i_94, i4 8" [src/generic/fp_generic.c:91->src/fpx.c:44]   --->   Operation 15 'icmp' 'icmp_ln91' <Predicate = true> <Delay = 1.73> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%br_ln91 = br i1 %icmp_ln91, void %for.inc.i.split, void %for.end.i.exitStub" [src/generic/fp_generic.c:91->src/fpx.c:44]   --->   Operation 16 'br' 'br_ln91' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%trunc_ln92 = trunc i4 %i_94" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 17 'trunc' 'trunc_ln92' <Predicate = (!icmp_ln91)> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%zext_ln92_4 = bitconcatenate i4 @_ssdm_op_BitConcatenate.i4.i1.i3, i1 1, i3 %trunc_ln92" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 18 'bitconcatenate' 'zext_ln92_4' <Predicate = (!icmp_ln91)> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln92_6 = zext i4 %zext_ln92_4" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 19 'zext' 'zext_ln92_6' <Predicate = (!icmp_ln91)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%t_i_addr = getelementptr i64 %t_i, i32 0, i32 %zext_ln92_6" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 20 'getelementptr' 't_i_addr' <Predicate = (!icmp_ln91)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%reuse_addr_reg_load = load i32 %reuse_addr_reg"   --->   Operation 21 'load' 'reuse_addr_reg_load' <Predicate = (!icmp_ln91)> <Delay = 0.00>
ST_2 : Operation 22 [2/2] (3.25ns)   --->   "%t_i_load = load i4 %t_i_addr" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 22 'load' 't_i_load' <Predicate = (!icmp_ln91)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 16> <RAM>
ST_2 : Operation 23 [1/1] (2.55ns)   --->   "%addr_cmp = icmp_eq  i32 %reuse_addr_reg_load, i32 %zext_ln92_6" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 23 'icmp' 'addr_cmp' <Predicate = (!icmp_ln91)> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%zext_ln92_5 = zext i3 %trunc_ln92" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 24 'zext' 'zext_ln92_5' <Predicate = (!icmp_ln91)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "%p503_1_addr = getelementptr i64 %p503_1, i32 0, i32 %zext_ln92_5" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 25 'getelementptr' 'p503_1_addr' <Predicate = (!icmp_ln91)> <Delay = 0.00>
ST_2 : Operation 26 [2/2] (2.32ns)   --->   "%p503_1_load = load i3 %p503_1_addr" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 26 'load' 'p503_1_load' <Predicate = (!icmp_ln91)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 64> <Depth = 8> <ROM>
ST_2 : Operation 27 [1/1] (1.58ns)   --->   "%store_ln92 = store i32 %zext_ln92_6, i32 %reuse_addr_reg" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 27 'store' 'store_ln92' <Predicate = (!icmp_ln91)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 3.32>
ST_3 : Operation 28 [1/1] (1.73ns)   --->   "%add_ln91 = add i4 %i_94, i4 1" [src/generic/fp_generic.c:91->src/fpx.c:44]   --->   Operation 28 'add' 'add_ln91' <Predicate = true> <Delay = 1.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 29 [1/2] ( I:3.25ns O:3.25ns )   --->   "%t_i_load = load i4 %t_i_addr" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 29 'load' 't_i_load' <Predicate = (!icmp_ln91)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 16> <RAM>
ST_3 : Operation 30 [1/2] ( I:2.32ns O:2.32ns )   --->   "%p503_1_load = load i3 %p503_1_addr" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 30 'load' 'p503_1_load' <Predicate = (!icmp_ln91)> <Delay = 2.32> <CoreInst = "ROM">   --->   Core 94 'ROM' <Latency = 1> <II = 1> <Delay = 2.32> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 64> <Depth = 8> <ROM>
ST_3 : Operation 31 [1/1] (1.58ns)   --->   "%store_ln88 = store i4 %add_ln91, i4 %i" [src/generic/fp_generic.c:88->src/fpx.c:44]   --->   Operation 31 'store' 'store_ln88' <Predicate = (!icmp_ln91)> <Delay = 1.58>

State 4 <SV = 3> <Delay = 5.99>
ST_4 : Operation 32 [1/1] (0.00ns)   --->   "%borrow = phi i1 0, void %newFuncRoot, i1 %borrowReg, void %for.inc.i.split"   --->   Operation 32 'phi' 'borrow' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 33 [1/1] (0.00ns)   --->   "%reuse_reg_load = load i64 %reuse_reg"   --->   Operation 33 'load' 'reuse_reg_load' <Predicate = (!icmp_ln91 & addr_cmp)> <Delay = 0.00>
ST_4 : Operation 34 [1/1] (1.48ns)   --->   "%reuse_select = select i1 %addr_cmp, i64 %reuse_reg_load, i64 %t_i_load" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 34 'select' 'reuse_select' <Predicate = (!icmp_ln91)> <Delay = 1.48> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 35 [1/1] (3.52ns)   --->   "%tempReg = sub i64 %reuse_select, i64 %p503_1_load" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 35 'sub' 'tempReg' <Predicate = (!icmp_ln91)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node tmp)   --->   "%xor_ln105 = xor i64 %p503_1_load, i64 %reuse_select" [src/config.h:105->src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 36 'xor' 'xor_ln105' <Predicate = (!icmp_ln91)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node tmp)   --->   "%xor_ln105_68 = xor i64 %p503_1_load, i64 %tempReg" [src/config.h:105->src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 37 'xor' 'xor_ln105_68' <Predicate = (!icmp_ln91)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node tmp)   --->   "%or_ln105 = or i64 %xor_ln105_68, i64 %xor_ln105" [src/config.h:105->src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 38 'or' 'or_ln105' <Predicate = (!icmp_ln91)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node tmp)   --->   "%xor_ln105_69 = xor i64 %reuse_select, i64 %or_ln105" [src/config.h:105->src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 39 'xor' 'xor_ln105_69' <Predicate = (!icmp_ln91)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 40 [1/1] (0.99ns) (out node of the LUT)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %xor_ln105_69, i32 63" [src/config.h:98->src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 40 'bitselect' 'tmp' <Predicate = (!icmp_ln91)> <Delay = 0.99>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%write_ln92 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %borrow_out, i1 %borrow" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 55 'write' 'write_ln92' <Predicate = (icmp_ln91)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (1.58ns)   --->   "%ret_ln0 = ret"   --->   Operation 56 'ret' 'ret_ln0' <Predicate = (icmp_ln91)> <Delay = 1.58>

State 5 <SV = 4> <Delay = 6.77>
ST_5 : Operation 41 [1/1] (0.00ns)   --->   "%specpipeline_ln88 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_44" [src/generic/fp_generic.c:88->src/fpx.c:44]   --->   Operation 41 'specpipeline' 'specpipeline_ln88' <Predicate = (!icmp_ln91)> <Delay = 0.00>
ST_5 : Operation 42 [1/1] (0.00ns)   --->   "%speclooptripcount_ln88 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 8, i64 8, i64 8" [src/generic/fp_generic.c:88->src/fpx.c:44]   --->   Operation 42 'speclooptripcount' 'speclooptripcount_ln88' <Predicate = (!icmp_ln91)> <Delay = 0.00>
ST_5 : Operation 43 [1/1] (0.00ns)   --->   "%specloopname_ln91 = specloopname void @_ssdm_op_SpecLoopName, void @empty_94" [src/generic/fp_generic.c:91->src/fpx.c:44]   --->   Operation 43 'specloopname' 'specloopname_ln91' <Predicate = (!icmp_ln91)> <Delay = 0.00>
ST_5 : Operation 44 [1/1] (3.52ns)   --->   "%sub_ln95 = sub i64 0, i64 %tempReg" [src/config.h:95->src/config.h:100->src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 44 'sub' 'sub_ln95' <Predicate = (!icmp_ln91)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 45 [1/1] (0.00ns) (grouped into LUT with out node borrowReg)   --->   "%or_ln95 = or i64 %tempReg, i64 %sub_ln95" [src/config.h:95->src/config.h:100->src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 45 'or' 'or_ln95' <Predicate = (!icmp_ln91)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node borrowReg)   --->   "%tmp_163 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %or_ln95, i32 63" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 46 'bitselect' 'tmp_163' <Predicate = (!icmp_ln91)> <Delay = 0.00>
ST_5 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node borrowReg)   --->   "%xor_ln92 = xor i1 %tmp_163, i1 1" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 47 'xor' 'xor_ln92' <Predicate = (!icmp_ln91)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node borrowReg)   --->   "%and_ln92 = and i1 %borrow, i1 %xor_ln92" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 48 'and' 'and_ln92' <Predicate = (!icmp_ln91)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 49 [1/1] (0.99ns) (out node of the LUT)   --->   "%borrowReg = or i1 %and_ln92, i1 %tmp" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 49 'or' 'borrowReg' <Predicate = (!icmp_ln91)> <Delay = 0.99> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln92 = zext i1 %borrow" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 50 'zext' 'zext_ln92' <Predicate = (!icmp_ln91)> <Delay = 0.00>
ST_5 : Operation 51 [1/1] (3.52ns)   --->   "%sub_ln92 = sub i64 %tempReg, i64 %zext_ln92" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 51 'sub' 'sub_ln92' <Predicate = (!icmp_ln91)> <Delay = 3.52> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 3.52> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 52 [1/1] ( I:3.25ns O:3.25ns )   --->   "%store_ln92 = store i64 %sub_ln92, i4 %t_i_addr" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 52 'store' 'store_ln92' <Predicate = (!icmp_ln91)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 16> <RAM>
ST_5 : Operation 53 [1/1] (1.58ns)   --->   "%store_ln92 = store i64 %sub_ln92, i64 %reuse_reg" [src/generic/fp_generic.c:92->src/fpx.c:44]   --->   Operation 53 'store' 'store_ln92' <Predicate = (!icmp_ln91)> <Delay = 1.58>
ST_5 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln91 = br void %for.inc.i" [src/generic/fp_generic.c:91->src/fpx.c:44]   --->   Operation 54 'br' 'br_ln91' <Predicate = (!icmp_ln91)> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.588ns
The critical path consists of the following:
	'alloca' operation 4 bit ('i', src/generic/fp_generic.c:88->src/fpx.c:44) [6]  (0.000 ns)
	'store' operation 0 bit ('store_ln88', src/generic/fp_generic.c:88->src/fpx.c:44) of constant 0 on local variable 'i', src/generic/fp_generic.c:88->src/fpx.c:44 [7]  (1.588 ns)

 <State 2>: 3.323ns
The critical path consists of the following:
	'load' operation 4 bit ('i', src/generic/fp_generic.c:92->src/fpx.c:44) on local variable 'i', src/generic/fp_generic.c:88->src/fpx.c:44 [13]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln91', src/generic/fp_generic.c:91->src/fpx.c:44) [14]  (1.735 ns)
	'store' operation 0 bit ('store_ln92', src/generic/fp_generic.c:92->src/fpx.c:44) of variable 'zext_ln92_6', src/generic/fp_generic.c:92->src/fpx.c:44 on local variable 'reuse_addr_reg' [49]  (1.588 ns)

 <State 3>: 3.323ns
The critical path consists of the following:
	'add' operation 4 bit ('add_ln91', src/generic/fp_generic.c:91->src/fpx.c:44) [15]  (1.735 ns)
	'store' operation 0 bit ('store_ln88', src/generic/fp_generic.c:88->src/fpx.c:44) of variable 'add_ln91', src/generic/fp_generic.c:91->src/fpx.c:44 on local variable 'i', src/generic/fp_generic.c:88->src/fpx.c:44 [50]  (1.588 ns)

 <State 4>: 5.991ns
The critical path consists of the following:
	'load' operation 64 bit ('reuse_reg_load') on local variable 'reuse_reg' [25]  (0.000 ns)
	'select' operation 64 bit ('x', src/generic/fp_generic.c:92->src/fpx.c:44) [29]  (1.481 ns)
	'sub' operation 64 bit ('tempReg', src/generic/fp_generic.c:92->src/fpx.c:44) [33]  (3.520 ns)
	'xor' operation 64 bit ('xor_ln105_68', src/config.h:105->src/generic/fp_generic.c:92->src/fpx.c:44) [35]  (0.000 ns)
	'or' operation 64 bit ('or_ln105', src/config.h:105->src/generic/fp_generic.c:92->src/fpx.c:44) [36]  (0.000 ns)
	'xor' operation 64 bit ('xor_ln105_69', src/config.h:105->src/generic/fp_generic.c:92->src/fpx.c:44) [37]  (0.000 ns)
	blocking operation 0.99 ns on control path)

 <State 5>: 6.774ns
The critical path consists of the following:
	'sub' operation 64 bit ('sub_ln92', src/generic/fp_generic.c:92->src/fpx.c:44) [46]  (3.520 ns)
	'store' operation 0 bit ('store_ln92', src/generic/fp_generic.c:92->src/fpx.c:44) of variable 'sub_ln92', src/generic/fp_generic.c:92->src/fpx.c:44 on array 't_i' [47]  (3.254 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
